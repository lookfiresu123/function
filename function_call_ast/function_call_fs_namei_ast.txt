DeclRefExpr 0x1859460 <col:10> 'int ()' Function 0x18593c0 'fls' 'int ()'
DeclRefExpr 0x18597d8 <col:10> 'int ()' Function 0x18593c0 'fls' 'int ()'
DeclRefExpr 0x185cc80 <col:26> 'int ()' Function 0x185cbe0 'hweight32' 'int ()'
DeclRefExpr 0x185cdf0 <col:41> 'int ()' Function 0x185cd50 'hweight64' 'int ()'
DeclRefExpr 0x185fe40 <col:10> 'int ()' Function 0x18593c0 'fls' 'int ()'
DeclRefExpr 0x1860020 <col:9> 'int ()' Function 0x185ff80 'fls64' 'int ()'
DeclRefExpr 0x18604b0 <col:10> 'int ()' Function 0x1860410 '__ffs' 'int ()'
DeclRefExpr 0x18606e0 <col:9> 'int ()' Function 0x1860410 '__ffs' 'int ()'
DeclRefExpr 0x1862120 <col:9> 'int ()' Function 0x18593c0 'fls' 'int ()'
DeclRefExpr 0x1862460 <col:9> 'int ()' Function 0x185ff80 'fls64' 'int ()'
DeclRefExpr 0x1862c50 <col:16> 'unsigned int (unsigned long)' Function 0x185fcd0 'fls_long' 'unsigned int (unsigned long)'
DeclRefExpr 0x1862fe0 <col:17> 'unsigned int (unsigned long)' Function 0x185fcd0 'fls_long' 'unsigned int (unsigned long)'
DeclRefExpr 0x1863b88 <col:6> 'int (const char *)' Function 0x1863440 'printk_get_level' 'int (const char *)'
DeclRefExpr 0x18a5530 <col:9> 'int (const char *, const char *, unsigned long)' Function 0x189f420 'strncmp' 'int (const char *, const char *, unsigned long)'
DeclRefExpr 0x18a55a8 <col:30> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
DeclRefExpr 0x18a5c28 <col:21> 'char *(const char *, int)' Function 0x18a0290 'strrchr' 'char *(const char *, int)'
DeclRefExpr 0x18a62f8 <col:6> 'char *(const char *, const char *)' Function 0x18a0790 'strstr' 'char *(const char *, const char *)'
DeclRefExpr 0x18a6498 <col:3> 'int (const char *, ...)' Function 0x1876460 'printk' 'int (const char *, ...)'
DeclRefExpr 0x18c7480 <col:23> '__u32 (__u32)' Function 0x18ba520 '__arch_swab32' '__u32 (__u32)'
DeclRefExpr 0x18c7750 <col:23> '__u64 (__u64)' Function 0x18ba990 '__arch_swab64' '__u64 (__u64)'
DeclRefExpr 0x18c8848 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18c8ef8 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18ccd98 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18cd848 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18cdbd8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18cefa8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x18cf258 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18cf8a8 <col:2> '__u32 (__u32)' Function 0x18c7930 '__fswahw32' '__u32 (__u32)'
DeclRefExpr 0x18cfb58 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18d2358 <col:2> '__u32 (__u32)' Function 0x18c7f60 '__fswahb32' '__u32 (__u32)'
DeclRefExpr 0x18d2748 <col:7> '__u16 (const __u16 *)' Function 0x18c86a0 '__swab16p' '__u16 (const __u16 *)'
DeclRefExpr 0x18d2b38 <col:7> '__u32 (const __u32 *)' Function 0x18cccf0 '__swab32p' '__u32 (const __u32 *)'
DeclRefExpr 0x18d2fb8 <col:7> '__u64 (const __u64 *)' Function 0x18cdb30 '__swab64p' '__u64 (const __u64 *)'
DeclRefExpr 0x18d32c8 <col:7> '__u32 (const __u32 *)' Function 0x18cf1b0 '__swahw32p' '__u32 (const __u32 *)'
DeclRefExpr 0x18d3578 <col:7> '__u32 (const __u32 *)' Function 0x18cfab0 '__swahb32p' '__u32 (const __u32 *)'
DeclRefExpr 0x18d8d38 <col:25> '__u64 (const __u64 *)' Function 0x18cdb30 '__swab64p' '__u64 (const __u64 *)'
DeclRefExpr 0x18d9008 <col:9> '__u64 (const __u64 *)' Function 0x18cdb30 '__swab64p' '__u64 (const __u64 *)'
DeclRefExpr 0x18d92e8 <col:25> '__u32 (const __u32 *)' Function 0x18cccf0 '__swab32p' '__u32 (const __u32 *)'
DeclRefExpr 0x18da5f8 <col:9> '__u32 (const __u32 *)' Function 0x18cccf0 '__swab32p' '__u32 (const __u32 *)'
DeclRefExpr 0x18da8d8 <col:25> '__u16 (const __u16 *)' Function 0x18c86a0 '__swab16p' '__u16 (const __u16 *)'
DeclRefExpr 0x18daba8 <col:9> '__u16 (const __u16 *)' Function 0x18c86a0 '__swab16p' '__u16 (const __u16 *)'
DeclRefExpr 0x18e6b30 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18e6b58 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18d09d0 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18d0d68 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18e98f8 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18e9d80 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18eb6b8 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18ebc10 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18ebc38 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18ec528 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18f3280 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f32a8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18e7498 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18e77e8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f6a00 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18f6e10 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f93b0 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18f97e8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fa688 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18faaf0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fb960 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18fce80 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18fcea8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fdd38 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18fe3b0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fe3d8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1899ad8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1899e28 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f07d8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x18f0be8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18ffa88 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x18ffee0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1901938 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1901d90 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x19037f8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1903c68 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x19066d8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1906b40 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x19085a0 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x19089d8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x190a458 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x190a890 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1915798 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1915c78 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1915ca0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1917748 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x195c510 <col:2> 'void (struct list_head *, struct list_head *, struct list_head *)' Function 0x1948d60 '__list_add' 'void (struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x195c930 <col:2> 'void (struct list_head *, struct list_head *, struct list_head *)' Function 0x1948d60 '__list_add' 'void (struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x195d018 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195cc10 '__list_del' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x1877358 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195cc10 '__list_del' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x18780a0 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x1877950 'list_replace' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x1878198 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x195f4c8 <col:2> 'void (struct list_head *)' Function 0x195cf70 '__list_del_entry' 'void (struct list_head *)'
DeclRefExpr 0x195f578 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x195f870 <col:2> 'void (struct list_head *)' Function 0x195cf70 '__list_del_entry' 'void (struct list_head *)'
DeclRefExpr 0x195f920 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c460 'list_add' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x195fc60 <col:2> 'void (struct list_head *)' Function 0x195cf70 '__list_del_entry' 'void (struct list_head *)'
DeclRefExpr 0x195fd10 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c880 'list_add_tail' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x1960d00 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1960f18 <col:3> 'void (struct list_head *, struct list_head *)' Function 0x195fbb0 'list_move_tail' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x1961250 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1962108 <col:6> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1962260 <col:6> 'int (const struct list_head *)' Function 0x1961170 'list_is_singular' 'int (const struct list_head *)'
DeclRefExpr 0x1962628 <col:3> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x19626d8 <col:3> 'void (struct list_head *, struct list_head *, struct list_head *)' Function 0x19616a0 '__list_cut_position' 'void (struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x1963430 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1963500 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x1963950 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1963a38 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x1963e40 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1963f28 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x19640c8 <col:3> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1964440 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1964528 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x19646c8 <col:3> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x196d958 <col:2> 'void (struct hlist_node *)' Function 0x196d2d0 '__hlist_del' 'void (struct hlist_node *)'
DeclRefExpr 0x196df08 <col:7> 'int (const struct hlist_node *)' Function 0x19651a0 'hlist_unhashed' 'int (const struct hlist_node *)'
DeclRefExpr 0x196e050 <col:3> 'void (struct hlist_node *)' Function 0x196d2d0 '__hlist_del' 'void (struct hlist_node *)'
DeclRefExpr 0x196e100 <col:3> 'void (struct hlist_node *)' Function 0x1964d00 'INIT_HLIST_NODE' 'void (struct hlist_node *)'
DeclRefExpr 0x198b670 <col:37> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19985a8 <col:49> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1998978 <col:37> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1998d08 <col:38> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19a85e8 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19a89d8 <col:8> 'void (void)' Function 0x1981890 'local_bh_disable' 'void (void)'
DeclRefExpr 0x19a8a40 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19a8f28 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19a9490 <col:34> 'int ()' Function 0x19a93f0 'arch_local_irq_disable' 'int ()'
DeclRefExpr 0x19aaec8 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19ab328 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19ab718 <col:38> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19ab780 <col:37> 'void (void)' Function 0x1981af0 'local_bh_enable' 'void (void)'
DeclRefExpr 0x19abc40 <col:33> 'int ()' Function 0x19abba0 'arch_local_irq_enable' 'int ()'
DeclRefExpr 0x19abd10 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19ac8e0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19acad0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19acd00 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
DeclRefExpr 0x19ace88 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19ae7e0 <col:8> 'void (void)' Function 0x1981890 'local_bh_disable' 'void (void)'
DeclRefExpr 0x19ae848 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19aed58 <col:34> 'int ()' Function 0x19a93f0 'arch_local_irq_disable' 'int ()'
DeclRefExpr 0x19aee28 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19af168 <col:33> 'int ()' Function 0x19abba0 'arch_local_irq_enable' 'int ()'
DeclRefExpr 0x19af560 <col:8> 'int ()' Function 0x19af4c0 'cpu_relax' 'int ()'
DeclRefExpr 0x19b17b0 <col:9> 'int ()' Function 0x19b1710 '__atomic_add_unless' 'int ()'
DeclRefExpr 0x19b1de8 <col:33> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x19b20a0 <col:9> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b3b78 <col:8> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b3df0 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x19b4448 <col:8> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b45f8 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x19b4c80 <col:6> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19b4ef0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x19b5050 <col:9> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b51d8 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x19b5848 <col:9> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19b5a60 <col:11> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b5fc8 <col:15> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19b6500 <col:2> 'int ()' Function 0x19b6460 'atomic_set' 'int ()'
DeclRefExpr 0x19b7fd0 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x19b83b0 <col:2> 'int ()' Function 0x19b8310 'atomic_dec' 'int ()'
DeclRefExpr 0x19b8890 <col:2> 'int ()' Function 0x19b87f0 'atomic_add' 'int ()'
DeclRefExpr 0x19b8d30 <col:2> 'int ()' Function 0x19b8c90 'atomic_sub' 'int ()'
DeclRefExpr 0x19b9ab0 <col:9> 'int ()' Function 0x19b9a10 'atomic_sub_and_test' 'int ()'
DeclRefExpr 0x19b9f30 <col:9> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x19ba330 <col:9> 'int ()' Function 0x19ba290 'atomic_inc_and_test' 'int ()'
DeclRefExpr 0x19ba7e0 <col:9> 'int ()' Function 0x19ba740 'atomic_add_negative' 'int ()'
DeclRefExpr 0x19bad20 <col:15> 'int ()' Function 0x19bac80 'atomic_add_return' 'int ()'
DeclRefExpr 0x19bb220 <col:15> 'int ()' Function 0x19bb180 'atomic_sub_return' 'int ()'
DeclRefExpr 0x19bb6a0 <col:15> 'int ()' Function 0x19bb600 'atomic_inc_return' 'int ()'
DeclRefExpr 0x19bbb00 <col:15> 'int ()' Function 0x19bba60 'atomic_dec_return' 'int ()'
DeclRefExpr 0x19bc008 <col:15> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x19c2130 <col:13> 'int (wait_queue_t *, unsigned int, int, void *)' Function 0x19c03d0 'default_wake_function' 'int (wait_queue_t *, unsigned int, int, void *)'
DeclRefExpr 0x19c28e8 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x19c39a0 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c460 'list_add' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x19c3e00 <col:2> 'void (wait_queue_head_t *, wait_queue_t *)' Function 0x19c38f0 '__add_wait_queue' 'void (wait_queue_head_t *, wait_queue_t *)'
DeclRefExpr 0x19c4140 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c880 'list_add_tail' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x19c45c0 <col:2> 'void (wait_queue_head_t *, wait_queue_t *)' Function 0x19c4090 '__add_wait_queue_tail' 'void (wait_queue_head_t *, wait_queue_t *)'
DeclRefExpr 0x19c48a0 <col:2> 'void (struct list_head *)' Function 0x18772b0 'list_del' 'void (struct list_head *)'
DeclRefExpr 0x19db120 <col:7> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x19db2a8 <col:9> 'int (void *, int, int (*)(void *), unsigned int)' Function 0x19c6a70 'out_of_line_wait_on_bit' 'int (void *, int, int (*)(void *), unsigned int)'
DeclRefExpr 0x19db910 <col:7> 'int ()' Function 0x19db870 'test_and_set_bit' 'int ()'
DeclRefExpr 0x19dba98 <col:9> 'int (void *, int, int (*)(void *), unsigned int)' Function 0x19c6dc0 'out_of_line_wait_on_bit_lock' 'int (void *, int, int (*)(void *), unsigned int)'
DeclRefExpr 0x19dbfa8 <col:6> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19dc110 <col:9> 'int (atomic_t *, int (*)(atomic_t *), unsigned int)' Function 0x19c7270 'out_of_line_wait_on_atomic_t' 'int (atomic_t *, int (*)(atomic_t *), unsigned int)'
DeclRefExpr 0x19e33e8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x19e34f8 <col:3> 'int ()' Function 0x19af4c0 'cpu_relax' 'int ()'
DeclRefExpr 0x19e3838 <col:17> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x19e3a20 <col:2> 'int ()' Function 0x19e3980 'smp_rmb' 'int ()'
DeclRefExpr 0x19e3c98 <col:9> 'unsigned int (const seqcount_t *)' Function 0x19e3720 'raw_read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x19e4078 <col:2> 'int ()' Function 0x19e3980 'smp_rmb' 'int ()'
DeclRefExpr 0x19e54a0 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x19e5830 <col:2> 'int ()' Function 0x19e3980 'smp_rmb' 'int ()'
DeclRefExpr 0x19e5898 <col:9> 'int (const seqcount_t *, unsigned int)' Function 0x19e53f0 '__read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x19e5d40 <col:2> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
DeclRefExpr 0x19e5f08 <col:2> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
DeclRefExpr 0x19e6290 <col:2> 'void (seqcount_t *)' Function 0x19e5b40 'raw_write_seqcount_begin' 'void (seqcount_t *)'
DeclRefExpr 0x19e6558 <col:2> 'void (seqcount_t *, int)' Function 0x19e61e0 'write_seqcount_begin_nested' 'void (seqcount_t *, int)'
DeclRefExpr 0x19e6848 <col:2> 'void (seqcount_t *)' Function 0x19e5e60 'raw_write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19e6a88 <col:2> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
DeclRefExpr 0x19e7098 <col:9> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x19edcc0 <col:9> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x19ee078 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x19ee1d0 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
DeclRefExpr 0x19ee468 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19ee568 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x19ee7c8 <col:2> 'void (spinlock_t *)' Function 0x19a8930 'spin_lock_bh' 'void (spinlock_t *)'
DeclRefExpr 0x19ee8c8 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
DeclRefExpr 0x19eeb58 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19eec58 <col:2> 'void (spinlock_t *)' Function 0x19ab670 'spin_unlock_bh' 'void (spinlock_t *)'
DeclRefExpr 0x19eeeb8 <col:2> 'void (spinlock_t *)' Function 0x19a9320 'spin_lock_irq' 'void (spinlock_t *)'
DeclRefExpr 0x19eefb8 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
DeclRefExpr 0x19ef218 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19ef318 <col:2> 'void (spinlock_t *)' Function 0x19abad0 'spin_unlock_irq' 'void (spinlock_t *)'
DeclRefExpr 0x19ef700 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19ef8f0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19efeb0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x19f0030 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19f00f0 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x19f0498 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
DeclRefExpr 0x19f0870 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19f0970 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
DeclRefExpr 0x19f0c78 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x19f30c8 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x19f35c0 <col:10> 'unsigned int (const seqlock_t *)' Function 0x19e6ff0 'read_seqbegin' 'unsigned int (const seqlock_t *)'
DeclRefExpr 0x19f3720 <col:3> 'void (seqlock_t *)' Function 0x19f0bd0 'read_seqlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x19f3b88 <col:23> 'unsigned int (const seqlock_t *, unsigned int)' Function 0x19edc10 'read_seqretry' 'unsigned int (const seqlock_t *, unsigned int)'
DeclRefExpr 0x19f4078 <col:3> 'void (seqlock_t *)' Function 0x19f3020 'read_sequnlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x19f42b8 <col:2> 'void (spinlock_t *)' Function 0x19a8930 'spin_lock_bh' 'void (spinlock_t *)'
DeclRefExpr 0x19f4518 <col:2> 'void (spinlock_t *)' Function 0x19ab670 'spin_unlock_bh' 'void (spinlock_t *)'
DeclRefExpr 0x19f4778 <col:2> 'void (spinlock_t *)' Function 0x19a9320 'spin_lock_irq' 'void (spinlock_t *)'
DeclRefExpr 0x19f49d8 <col:2> 'void (spinlock_t *)' Function 0x19abad0 'spin_unlock_irq' 'void (spinlock_t *)'
DeclRefExpr 0x19f4d40 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19f4f90 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19f5120 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x19f52a0 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19f5360 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x19f5900 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
DeclRefExpr 0x19fff90 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a002f0 <col:13> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a00440 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1a00868 <col:18> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a00948 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a00ca0 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1a014f8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a017e8 <col:13> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a01938 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
DeclRefExpr 0x1a01e30 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a02228 <col:9> 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fa9c0 '__bitmap_and' 'int (unsigned long *, const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a026f0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a02a18 <col:3> 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fad30 '__bitmap_or' 'void (unsigned long *, const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a02f10 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a03238 <col:3> 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fb000 '__bitmap_xor' 'void (unsigned long *, const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a036e0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a03b18 <col:9> 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fb2d0 '__bitmap_andnot' 'int (unsigned long *, const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a03f28 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a04500 <col:3> 'void (unsigned long *, const unsigned long *, int)' Function 0x19fa0c0 '__bitmap_complement' 'void (unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a048f8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a04f58 <col:10> 'int (const unsigned long *, const unsigned long *, int)' Function 0x19f9e30 '__bitmap_equal' 'int (const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a05378 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a059e8 <col:10> 'int (const unsigned long *, const unsigned long *, int)' Function 0x19fb520 '__bitmap_intersects' 'int (const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a05dd8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a06448 <col:10> 'int (const unsigned long *, const unsigned long *, int)' Function 0x19fb760 '__bitmap_subset' 'int (const unsigned long *, const unsigned long *, int)'
DeclRefExpr 0x1a067c0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a06d60 <col:10> 'int (const unsigned long *, int)' Function 0x19f5bf0 '__bitmap_empty' 'int (const unsigned long *, int)'
DeclRefExpr 0x1a070c0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a07670 <col:10> 'int (const unsigned long *, int)' Function 0x19f5dc0 '__bitmap_full' 'int (const unsigned long *, int)'
DeclRefExpr 0x1a079a0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a07b28 <col:10> 'unsigned long (unsigned long)' Function 0x185ca50 'hweight_long' 'unsigned long (unsigned long)'
DeclRefExpr 0x1a07fb8 <col:9> 'int (const unsigned long *, int)' Function 0x19fb930 '__bitmap_weight' 'int (const unsigned long *, int)'
DeclRefExpr 0x1a083c0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a086b0 <col:3> 'void (unsigned long *, const unsigned long *, int, int)' Function 0x19fa3d0 '__bitmap_shift_right' 'void (unsigned long *, const unsigned long *, int, int)'
DeclRefExpr 0x1a08b80 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a091c8 <col:3> 'void (unsigned long *, const unsigned long *, int, int)' Function 0x19fa6a0 '__bitmap_shift_left' 'void (unsigned long *, const unsigned long *, int, int)'
DeclRefExpr 0x1a09660 <col:9> 'int (const char *, unsigned int, int, unsigned long *, int)' Function 0x19fc8b0 '__bitmap_parse' 'int (const char *, unsigned int, int, unsigned long *, int)'
DeclRefExpr 0x1a126f0 <col:26> 'void (nodemask_t *, int)' Function 0x1a0a7c0 '__nodes_clear' 'void (nodemask_t *, int)'
DeclRefExpr 0x1a128e8 <col:29> 'void (int, volatile nodemask_t *)' Function 0x1a09e00 '__node_set' 'void (int, volatile nodemask_t *)'
DeclRefExpr 0x1a2ac78 <col:9> 'unsigned long (struct page *, int, int)' Function 0x1a23240 'get_pageblock_flags_group' 'unsigned long (struct page *, int, int)'
DeclRefExpr 0x1a2ea30 <col:2> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
DeclRefExpr 0x1a35360 <col:9> 'int ()' Function 0x19db870 'test_and_set_bit' 'int ()'
DeclRefExpr 0x1a356e0 <col:2> 'int ()' Function 0x1a0a240 'clear_bit' 'int ()'
DeclRefExpr 0x1a35a88 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1a35d48 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1a36008 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1a362c8 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1a36588 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1a36db8 <col:46> 'unsigned long (const struct zone *)' Function 0x1a36820 'zone_end_pfn' 'unsigned long (const struct zone *)'
DeclRefExpr 0x1a3ff88 <col:9> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x1a53f58 <col:13> 'char *(const char *, int)' Function 0x189fd50 'strchr' 'char *(const char *, int)'
DeclRefExpr 0x1a54178 <col:28> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
DeclRefExpr 0x1a54800 <col:9> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a554b0 <col:2> 'void (struct cpumask *)' Function 0x1a4cb60 'cpumask_clear' 'void (struct cpumask *)'
DeclRefExpr 0x1a558b8 <col:2> 'void (struct cpumask *)' Function 0x1a4cb60 'cpumask_clear' 'void (struct cpumask *)'
DeclRefExpr 0x1a58978 <col:25> 'int (const unsigned long *)' Function 0x1a58120 '__check_is_bitmap' 'int (const unsigned long *)'
DeclRefExpr 0x1a62000 <col:3> 'void (wait_queue_head_t *, const char *, struct lock_class_key *)' Function 0x19c1bf0 '__init_waitqueue_head' 'void (wait_queue_head_t *, const char *, struct lock_class_key *)'
DeclRefExpr 0x1a6bf70 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1a6c130 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1a6c2f0 <col:2> 'void (void)' Function 0x1a6bda0 'synchronize_sched' 'void (void)'
DeclRefExpr 0x1a70f20 <col:2> 'void (void)' Function 0x1a6bed0 '__rcu_read_lock' 'void (void)'
DeclRefExpr 0x1a71348 <col:2> 'void (void)' Function 0x1a6c090 '__rcu_read_unlock' 'void (void)'
DeclRefExpr 0x1a71540 <col:2> 'void (void)' Function 0x1981890 'local_bh_disable' 'void (void)'
DeclRefExpr 0x1a71948 <col:2> 'void (void)' Function 0x1981af0 'local_bh_enable' 'void (void)'
DeclRefExpr 0x1a71b40 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x18e03b8 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x18e0e60 <col:15> 'int ()' Function 0x18e0dc0 'do_div' 'int ()'
DeclRefExpr 0x18e1db0 <col:9> 'u64 (u64, u32, u32 *)' Function 0x18e0c80 'div_u64_rem' 'u64 (u64, u32, u32 *)'
DeclRefExpr 0x1a8d490 <col:9> 's64 (s64, s32, s32 *)' Function 0x18e12b0 'div_s64_rem' 's64 (s64, s32, s32 *)'
DeclRefExpr 0x1a96730 <col:2> 'void (struct timespec *, time_t, s64)' Function 0x1a940e0 'set_normalized_timespec' 'void (struct timespec *, time_t, s64)'
DeclRefExpr 0x1a96d90 <col:2> 'void (struct timespec *, time_t, s64)' Function 0x1a940e0 'set_normalized_timespec' 'void (struct timespec *, time_t, s64)'
DeclRefExpr 0x1a977f8 <col:7> 'bool (const struct timespec *)' Function 0x1a97240 'timespec_valid' 'bool (const struct timespec *)'
DeclRefExpr 0x1a9e2b0 <col:15> 'u32 (u64, u32, u64 *)' Function 0x1a8dae0 '__iter_div_u64_rem' 'u32 (u64, u32, u64 *)'
DeclRefExpr 0x1ab6850 <col:9> 'clock_t (unsigned long)' Function 0x1aa8280 'jiffies_to_clock_t' 'clock_t (unsigned long)'
DeclRefExpr 0x1ab6878 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1ab6948 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1abb558 <col:22> 'struct timeval (const ktime_t)' Function 0x1aba120 'ktime_to_timeval' 'struct timeval (const ktime_t)'
DeclRefExpr 0x1abba38 <col:22> 'struct timeval (const ktime_t)' Function 0x1aba120 'ktime_to_timeval' 'struct timeval (const ktime_t)'
DeclRefExpr 0x1abbf90 <col:15> 's64 (const ktime_t)' Function 0x1abb430 'ktime_to_us' 's64 (const ktime_t)'
DeclRefExpr 0x1abbfb8 <col:27> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1ab7d00 'ktime_sub' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1abc3f0 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1abc7a0 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1abcb30 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8d80 'ktime_sub_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1abd278 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1abd688 <col:9> 'ktime_t (const ktime_t, const u64)' Function 0x1abc6f0 'ktime_add_ms' 'ktime_t (const ktime_t, const u64)'
DeclRefExpr 0x1abe6b0 <col:2> 'void (struct timer_list *, unsigned int, const char *, struct lock_class_key *)' Function 0x1abe110 'init_timer_key' 'void (struct timer_list *, unsigned int, const char *, struct lock_class_key *)'
DeclRefExpr 0x1ad7f70 <col:9> 'bool (int, struct workqueue_struct *, struct work_struct *)' Function 0x1ad2e40 'queue_work_on' 'bool (int, struct workqueue_struct *, struct work_struct *)'
DeclRefExpr 0x1ad8458 <col:9> 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad31c0 'queue_delayed_work_on' 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)'
DeclRefExpr 0x1ad8908 <col:9> 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad34a0 'mod_delayed_work_on' 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)'
DeclRefExpr 0x1ad8d40 <col:9> 'bool (int, struct workqueue_struct *, struct work_struct *)' Function 0x1ad2e40 'queue_work_on' 'bool (int, struct workqueue_struct *, struct work_struct *)'
DeclRefExpr 0x1ad9038 <col:9> 'bool (struct workqueue_struct *, struct work_struct *)' Function 0x1ad7ec0 'queue_work' 'bool (struct workqueue_struct *, struct work_struct *)'
DeclRefExpr 0x1ad94e8 <col:9> 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad31c0 'queue_delayed_work_on' 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)'
DeclRefExpr 0x1ad9930 <col:9> 'bool (struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad83a0 'queue_delayed_work' 'bool (struct workqueue_struct *, struct delayed_work *, unsigned long)'
DeclRefExpr 0x1adce78 <col:15> 'int (struct srcu_struct *)' Function 0x1adc1b0 '__srcu_read_lock' 'int (struct srcu_struct *)'
DeclRefExpr 0x1add2f0 <col:2> 'void (struct srcu_struct *, int)' Function 0x1adc400 '__srcu_read_unlock' 'void (struct srcu_struct *, int)'
DeclRefExpr 0x1ae4f58 <col:2> 'int (const char *, ...)' Function 0x1876460 'printk' 'int (const char *, ...)'
DeclRefExpr 0x1ae50e0 <col:2> 'void (void)' Function 0x1878550 'dump_stack' 'void (void)'
DeclRefExpr 0x1aeeaa0 <col:9> 'struct zoneref *(struct zoneref *, enum zone_type, nodemask_t *, struct zone **)' Function 0x1aeccf0 'next_zones_zonelist' 'struct zoneref *(struct zoneref *, enum zone_type, nodemask_t *, struct zone **)'
DeclRefExpr 0x1af4f80 <col:9> 'int (int, smp_call_func_t, void *, int)' Function 0x1aefe10 'smp_call_function_single' 'int (int, smp_call_func_t, void *, int)'
DeclRefExpr 0x1afe4a0 <col:9> 'int ()' Function 0x1afe400 'cpu_to_node' 'int ()'
DeclRefExpr 0x1afe6a0 <col:9> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
DeclRefExpr 0x1b1a418 <col:9> 'int ()' Function 0x1afe400 'cpu_to_node' 'int ()'
DeclRefExpr 0x1b1a7f0 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1b1ab80 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1b29da8 <col:42> 'int (gfp_t)' Function 0x1b29720 'gfp_zonelist' 'int (gfp_t)'
DeclRefExpr 0x1b2aa38 <col:9> 'struct page *(gfp_t, unsigned int, struct zonelist *, nodemask_t *)' Function 0x1b2a670 '__alloc_pages_nodemask' 'struct page *(gfp_t, unsigned int, struct zonelist *, nodemask_t *)'
DeclRefExpr 0x1b2b088 <col:9> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
DeclRefExpr 0x1b2b148 <col:9> 'struct page *(gfp_t, unsigned int, struct zonelist *)' Function 0x1b2a980 '__alloc_pages' 'struct page *(gfp_t, unsigned int, struct zonelist *)'
DeclRefExpr 0x1b2b1c0 <col:40> 'struct zonelist *(int, gfp_t)' Function 0x1b29c60 'node_zonelist' 'struct zonelist *(int, gfp_t)'
DeclRefExpr 0x1b2b848 <col:27> 'int (int, enum node_states)' Function 0x1a22170 'node_state' 'int (int, enum node_states)'
DeclRefExpr 0x1b2bb70 <col:9> 'struct page *(gfp_t, unsigned int, struct zonelist *)' Function 0x1b2a980 '__alloc_pages' 'struct page *(gfp_t, unsigned int, struct zonelist *)'
DeclRefExpr 0x1b2bbe8 <col:40> 'struct zonelist *(int, gfp_t)' Function 0x1b29c60 'node_zonelist' 'struct zonelist *(int, gfp_t)'
DeclRefExpr 0x1b387f0 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1b390f0 <col:9> 'void *(size_t, gfp_t)' Function 0x1b38ac0 '__kmalloc' 'void *(size_t, gfp_t)'
DeclRefExpr 0x1b395e0 <col:9> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
DeclRefExpr 0x1b39ab0 <col:9> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
DeclRefExpr 0x1b39fa0 <col:9> 'void *(struct kmem_cache *, gfp_t, int)' Function 0x1b394e0 'kmem_cache_alloc_node' 'void *(struct kmem_cache *, gfp_t, int)'
DeclRefExpr 0x1b3a6e0 <col:17> 'unsigned long (gfp_t, unsigned int)' Function 0x1b2bf40 '__get_free_pages' 'unsigned long (gfp_t, unsigned int)'
DeclRefExpr 0x1b3a898 <col:2> 'void (const void *, size_t, int, gfp_t)' Function 0x1b2edc0 'kmemleak_alloc' 'void (const void *, size_t, int, gfp_t)'
DeclRefExpr 0x1b3ada0 <col:9> 'void *(size_t, gfp_t, unsigned int)' Function 0x1b3a3a0 'kmalloc_order' 'void *(size_t, gfp_t, unsigned int)'
DeclRefExpr 0x1b3b2b0 <col:23> 'int ()' Function 0x1b3b210 'get_order' 'int ()'
DeclRefExpr 0x1b3b390 <col:9> 'void *(size_t, gfp_t, unsigned int)' Function 0x1b3aca0 'kmalloc_order_trace' 'void *(size_t, gfp_t, unsigned int)'
DeclRefExpr 0x1b3b780 <col:6> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1b3bb08 <col:16> 'int (size_t)' Function 0x1b35e70 'kmalloc_index' 'int (size_t)'
DeclRefExpr 0x1b3be50 <col:9> 'void *(size_t, gfp_t)' Function 0x1b38ac0 '__kmalloc' 'void *(size_t, gfp_t)'
DeclRefExpr 0x1b3cc40 <col:9> 'void *(size_t, gfp_t, int)' Function 0x1b38ff0 '__kmalloc_node' 'void *(size_t, gfp_t, int)'
DeclRefExpr 0x1b3f710 <col:9> 'void *(size_t, gfp_t)' Function 0x1b38ac0 '__kmalloc' 'void *(size_t, gfp_t)'
DeclRefExpr 0x1b3fb18 <col:9> 'void *(size_t, size_t, gfp_t)' Function 0x1b3f360 'kmalloc_array' 'void *(size_t, size_t, gfp_t)'
DeclRefExpr 0x1b3ff70 <col:9> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
DeclRefExpr 0x1b40340 <col:9> 'void *(size_t, gfp_t)' Function 0x1b3b690 'kmalloc' 'void *(size_t, gfp_t)'
DeclRefExpr 0x1b407a8 <col:9> 'void *(size_t, gfp_t, int)' Function 0x1b3c670 'kmalloc_node' 'void *(size_t, gfp_t, int)'
DeclRefExpr 0x17a55f8 <col:9> 'u32 (dev_t)' Function 0x1b420a0 'new_encode_dev' 'u32 (dev_t)'
DeclRefExpr 0x17a58e8 <col:9> 'dev_t (u32)' Function 0x17a4c10 'new_decode_dev' 'dev_t (u32)'
DeclRefExpr 0x17a6d80 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x17a7070 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x17a7360 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x17a7610 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x17b0958 <col:32> 'struct hlist_bl_node *(struct hlist_bl_head *)' Function 0x17afb20 'hlist_bl_first' 'struct hlist_bl_node *(struct hlist_bl_head *)'
DeclRefExpr 0x17b0e18 <col:2> 'void (struct hlist_bl_head *, struct hlist_bl_node *)' Function 0x17aff90 'hlist_bl_set_first' 'void (struct hlist_bl_head *, struct hlist_bl_node *)'
DeclRefExpr 0x17b1908 <col:2> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
DeclRefExpr 0x17b1e78 <col:7> 'int (const struct hlist_bl_node *)' Function 0x17a82f0 'hlist_bl_unhashed' 'int (const struct hlist_bl_node *)'
DeclRefExpr 0x17b1fc0 <col:3> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
DeclRefExpr 0x17b2070 <col:3> 'void (struct hlist_bl_node *)' Function 0x17a7e50 'INIT_HLIST_BL_NODE' 'void (struct hlist_bl_node *)'
DeclRefExpr 0x17b2368 <col:2> 'void (int, unsigned long *)' Function 0x17a6cd0 'bit_spin_lock' 'void (int, unsigned long *)'
DeclRefExpr 0x17b2618 <col:2> 'void (int, unsigned long *)' Function 0x17a7560 '__bit_spin_unlock' 'void (int, unsigned long *)'
DeclRefExpr 0x17b2928 <col:9> 'int (int, unsigned long *)' Function 0x17a7810 'bit_spin_is_locked' 'int (int, unsigned long *)'
DeclRefExpr 0x17b2d20 <col:3> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
DeclRefExpr 0x17b38c0 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
DeclRefExpr 0x1b438f8 <col:7> 'int (const struct hlist_bl_node *)' Function 0x17a82f0 'hlist_bl_unhashed' 'int (const struct hlist_bl_node *)'
DeclRefExpr 0x1b439e0 <col:3> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
DeclRefExpr 0x1b43da8 <col:2> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
DeclRefExpr 0x1b442d8 <col:10> 'struct hlist_bl_node *(struct hlist_bl_head *)' Function 0x17afb20 'hlist_bl_first' 'struct hlist_bl_node *(struct hlist_bl_head *)'
DeclRefExpr 0x1b44748 <col:2> 'void (struct hlist_bl_head *, struct hlist_bl_node *)' Function 0x17b2c50 'hlist_bl_set_first_rcu' 'void (struct hlist_bl_head *, struct hlist_bl_node *)'
DeclRefExpr 0x1b507b0 <col:2> 'void (struct dentry *, struct inode *)' Function 0x1b4a290 'd_instantiate' 'void (struct dentry *, struct inode *)'
DeclRefExpr 0x1b508d8 <col:2> 'void (struct dentry *)' Function 0x1b504f0 'd_rehash' 'void (struct dentry *)'
DeclRefExpr 0x1b50cd8 <col:8> 'struct dentry *(struct dentry *, struct inode *)' Function 0x1b4a520 'd_instantiate_unique' 'struct dentry *(struct dentry *, struct inode *)'
DeclRefExpr 0x1b50e50 <col:2> 'void (struct dentry *)' Function 0x1b504f0 'd_rehash' 'void (struct dentry *)'
DeclRefExpr 0x1b55268 <col:3> 'void (struct lockref *)' Function 0x1b45010 'lockref_get' 'void (struct lockref *)'
DeclRefExpr 0x1b55768 <col:9> 'int (const struct hlist_bl_node *)' Function 0x17a82f0 'hlist_bl_unhashed' 'int (const struct hlist_bl_node *)'
DeclRefExpr 0x1b559f8 <col:9> 'int (const struct dentry *)' Function 0x1b556c0 'd_unhashed' 'int (const struct dentry *)'
DeclRefExpr 0x1b560c8 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1b56350 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x1b572b8 <col:2> 'void (struct dentry *, unsigned int)' Function 0x1b56e70 '__d_set_type' 'void (struct dentry *, unsigned int)'
DeclRefExpr 0x1b57600 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1b577a8 <col:2> 'void (struct dentry *, unsigned int)' Function 0x1b56e70 '__d_set_type' 'void (struct dentry *, unsigned int)'
DeclRefExpr 0x1b578a0 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x1a314c8 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
DeclRefExpr 0x1a317e8 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
DeclRefExpr 0x1a31aa8 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
DeclRefExpr 0x1a31d68 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
DeclRefExpr 0x1a32028 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
DeclRefExpr 0x1a322e8 <col:10> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x1a32618 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1a327a8 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1a34ef0 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1a34fc8 <col:29> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b68a00 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b68ad8 <col:29> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b68dd0 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b68e80 <col:28> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b69170 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b69220 <col:28> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b69510 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b695c0 <col:29> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b698b0 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b69960 <col:29> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b69c50 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b69d00 <col:28> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b69ff0 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6a0a0 <col:28> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6a390 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b6a440 <col:29> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b6a730 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6a7e0 <col:29> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6aa88 <col:10> 'bool (kuid_t, kuid_t)' Function 0x1a34e40 'uid_eq' 'bool (kuid_t, kuid_t)'
DeclRefExpr 0x1b6ae28 <col:10> 'bool (kgid_t, kgid_t)' Function 0x1b68950 'gid_eq' 'bool (kgid_t, kgid_t)'
DeclRefExpr 0x1b6b8b0 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b6bbc0 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6bef8 <col:14> 'uid_t (struct user_namespace *, kuid_t)' Function 0x1b6b800 'from_kuid' 'uid_t (struct user_namespace *, kuid_t)'
DeclRefExpr 0x1b6c4e8 <col:14> 'gid_t (struct user_namespace *, kgid_t)' Function 0x1b6bb10 'from_kgid' 'gid_t (struct user_namespace *, kgid_t)'
DeclRefExpr 0x1b77990 <col:9> 'bool (struct llist_node *, struct llist_node *, struct llist_head *)' Function 0x1b77640 'llist_add_batch' 'bool (struct llist_node *, struct llist_node *, struct llist_head *)'
DeclRefExpr 0x1b77e50 <col:9> 'int ()' Function 0x1b77db0 'xchg' 'int ()'
DeclRefExpr 0x1b78f20 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
DeclRefExpr 0x1b797a8 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1b79d38 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1b7a220 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1b7a248 <col:9> 'int (void *)' Function 0x1b78400 'radix_tree_is_indirect_ptr' 'int (void *)'
DeclRefExpr 0x1b7a340 <col:3> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
DeclRefExpr 0x1b88f90 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1b8c890 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1b8cc40 <col:44> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1b8cdc8 <col:22> 'int ()' Function 0x1860410 '__ffs' 'int ()'
DeclRefExpr 0x1b8d368 <col:19> 'unsigned int (struct radix_tree_iter *)' Function 0x1b89c90 'radix_tree_chunk_size' 'unsigned int (struct radix_tree_iter *)'
DeclRefExpr 0x1b8d610 <col:8> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1b96b48 <col:3> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1ba7da8 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba64f0 'cap_drop' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1ba7f20 <col:9> 'int (const kernel_cap_t)' Function 0x1ba7550 'cap_isclear' 'int (const kernel_cap_t)'
DeclRefExpr 0x1bb18f0 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba64f0 'cap_drop' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1bb27f0 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5370 'cap_combine' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1bb2840 <col:7> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5c50 'cap_intersect' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1bb3730 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba64f0 'cap_drop' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1a163e0 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5370 'cap_combine' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1a16430 <col:7> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5c50 'cap_intersect' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1beb960 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1bebab0 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1bebe38 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
DeclRefExpr 0x1bec5b8 <col:9> 's64 (struct percpu_counter *)' Function 0x1bec2f0 'percpu_counter_read_positive' 's64 (struct percpu_counter *)'
DeclRefExpr 0x1bec858 <col:9> 's64 (struct percpu_counter *)' Function 0x1bec0d0 'percpu_counter_read' 's64 (struct percpu_counter *)'
DeclRefExpr 0x1beccc8 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
DeclRefExpr 0x1becf28 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
DeclRefExpr 0x1bed230 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
DeclRefExpr 0x1c02af0 <col:9> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c02bc8 <col:32> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c02ec0 <col:9> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c02f70 <col:31> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c03218 <col:10> 'bool (kprojid_t, kprojid_t)' Function 0x1c02a40 'projid_eq' 'bool (kprojid_t, kprojid_t)'
DeclRefExpr 0x1c08590 <col:9> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c088c8 <col:20> 'projid_t (struct user_namespace *, kprojid_t)' Function 0x1c084e0 'from_kprojid' 'projid_t (struct user_namespace *, kprojid_t)'
DeclRefExpr 0x1c0b4d8 <col:14> 'kuid_t (struct user_namespace *, uid_t)' Function 0x1b6b220 'make_kuid' 'kuid_t (struct user_namespace *, uid_t)'
DeclRefExpr 0x1c0b730 <col:14> 'kgid_t (struct user_namespace *, gid_t)' Function 0x1b6b510 'make_kgid' 'kgid_t (struct user_namespace *, gid_t)'
DeclRefExpr 0x1c0b990 <col:17> 'kprojid_t (struct user_namespace *, projid_t)' Function 0x1c081f0 'make_kprojid' 'kprojid_t (struct user_namespace *, projid_t)'
DeclRefExpr 0x1c0baf0 <col:3> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1c143f0 <col:3> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1c162f8 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1c16dc8 <col:2> 'void (struct percpu_counter *)' Function 0x1becc20 'percpu_counter_inc' 'void (struct percpu_counter *)'
DeclRefExpr 0x1c170e8 <col:2> 'void (struct percpu_counter *)' Function 0x1bece80 'percpu_counter_dec' 'void (struct percpu_counter *)'
DeclRefExpr 0x1c22048 <col:2> 'void (struct iov_iter *, size_t)' Function 0x1c21330 'iov_iter_advance' 'void (struct iov_iter *, size_t)'
DeclRefExpr 0x1c2ab58 <col:4> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1c2fa48 <col:9> 'int (const struct hlist_node *)' Function 0x19651a0 'hlist_unhashed' 'int (const struct hlist_node *)'
DeclRefExpr 0x1c30a08 <col:9> 'uid_t (struct user_namespace *, kuid_t)' Function 0x1b6b800 'from_kuid' 'uid_t (struct user_namespace *, kuid_t)'
DeclRefExpr 0x1c30d28 <col:9> 'gid_t (struct user_namespace *, kgid_t)' Function 0x1b6bb10 'from_kgid' 'gid_t (struct user_namespace *, kgid_t)'
DeclRefExpr 0x1c31180 <col:17> 'kuid_t (struct user_namespace *, uid_t)' Function 0x1b6b220 'make_kuid' 'kuid_t (struct user_namespace *, uid_t)'
DeclRefExpr 0x1c31550 <col:17> 'kgid_t (struct user_namespace *, gid_t)' Function 0x1b6b510 'make_kgid' 'kgid_t (struct user_namespace *, gid_t)'
DeclRefExpr 0x1c33ea8 <col:2> 'void (atomic_long_t *)' Function 0x19b6730 'atomic_long_inc' 'void (atomic_long_t *)'
DeclRefExpr 0x1c51168 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
DeclRefExpr 0x1c51438 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
DeclRefExpr 0x1c516b8 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
DeclRefExpr 0x1c51938 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c51cb8 <col:9> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c51f98 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c52238 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c67288 <col:2> 'void (struct inode *, int)' Function 0x1c67080 '__mark_inode_dirty' 'void (struct inode *, int)'
DeclRefExpr 0x1c676e8 <col:2> 'void (struct inode *, int)' Function 0x1c67080 '__mark_inode_dirty' 'void (struct inode *, int)'
DeclRefExpr 0x1c6cad8 <col:2> 'void (struct inode *)' Function 0x1c6c420 'inc_nlink' 'void (struct inode *)'
DeclRefExpr 0x1c6cbb8 <col:2> 'void (struct inode *)' Function 0x1c671e0 'mark_inode_dirty' 'void (struct inode *)'
DeclRefExpr 0x1c6cde8 <col:2> 'void (struct inode *)' Function 0x1c6c570 'drop_nlink' 'void (struct inode *)'
DeclRefExpr 0x1c6ce98 <col:2> 'void (struct inode *)' Function 0x1c671e0 'mark_inode_dirty' 'void (struct inode *)'
DeclRefExpr 0x1c6d0f8 <col:8> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1c6d288 <col:8> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x1c6da00 <col:3> 'void (const struct path *)' Function 0x1c6d6e0 'touch_atime' 'void (const struct path *)'
DeclRefExpr 0x1c79c98 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1c7f948 <col:9> 'int (unsigned int, unsigned int, unsigned int, const char *, const struct file_operations *)' Function 0x1c7edc0 '__register_chrdev' 'int (unsigned int, unsigned int, unsigned int, const char *, const struct file_operations *)'
DeclRefExpr 0x1c7fdb0 <col:2> 'void (unsigned int, unsigned int, unsigned int, const char *)' Function 0x1c7f0e0 '__unregister_chrdev' 'void (unsigned int, unsigned int, unsigned int, const char *)'
DeclRefExpr 0x1c81c30 <col:6> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c81e00 <col:32> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x1c82000 <col:6> 'int ()' Function 0x1c81f60 'S_ISLNK' 'int ()'
DeclRefExpr 0x1c82138 <col:3> 'unsigned long (struct address_space *, unsigned long, unsigned long)' Function 0x1c81960 'invalidate_mapping_pages' 'unsigned long (struct address_space *, unsigned long, unsigned long)'
DeclRefExpr 0x1c85358 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c85380 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c855a0 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c855c8 <col:19> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c85978 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c859a0 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c85ba8 <col:9> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c85bd0 <col:26> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c85f38 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c85f60 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c86128 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
DeclRefExpr 0x1c86150 <col:17> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c86438 <col:9> 'int (atomic_t *)' Function 0x19b2620 'atomic_inc_unless_negative' 'int (atomic_t *)'
DeclRefExpr 0x1c86808 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c868d0 <col:9> 'int (atomic_t *)' Function 0x19b40e0 'atomic_dec_unless_positive' 'int (atomic_t *)'
DeclRefExpr 0x1c86bf8 <col:2> 'int ()' Function 0x19b8310 'atomic_dec' 'int ()'
DeclRefExpr 0x1c86ea8 <col:3> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1c86ed0 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c871b8 <col:9> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x1c8b018 <col:28> 'int (struct inode *)' Function 0x1c2f9a0 'inode_unhashed' 'int (struct inode *)'
DeclRefExpr 0x1c8e028 <col:2> 'void (struct inode *, unsigned long)' Function 0x1c8de20 '__insert_inode_hash' 'void (struct inode *, unsigned long)'
DeclRefExpr 0x1c8e488 <col:7> 'int (struct inode *)' Function 0x1c2f9a0 'inode_unhashed' 'int (struct inode *)'
DeclRefExpr 0x1c8e558 <col:3> 'void (struct inode *)' Function 0x1c8e290 '__remove_inode_hash' 'void (struct inode *)'
DeclRefExpr 0x1ca22c0 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1ca25d0 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x1cab568 <col:7> 'int (umode_t)' Function 0x1cab2e0 'is_sxid' 'int (umode_t)'
DeclRefExpr 0x1cacb78 <col:6> 'ino_t (struct dentry *)' Function 0x1ca2190 'parent_ino' 'ino_t (struct dentry *)'
DeclRefExpr 0x1cad1a8 <col:8> 'bool (struct file *, struct dir_context *)' Function 0x1cac310 'dir_emit_dot' 'bool (struct file *, struct dir_context *)'
DeclRefExpr 0x1cad5b8 <col:8> 'bool (struct file *, struct dir_context *)' Function 0x1cac970 'dir_emit_dotdot' 'bool (struct file *, struct dir_context *)'
DeclRefExpr 0x1cada68 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x1cadbc0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x1cb27f0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1cb28e8 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1cb3150 <col:32> 'int ()' Function 0x1cb30b0 '__preempt_count_add' 'int ()'
DeclRefExpr 0x1cb31e0 <col:2> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1cb33a0 <col:2> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1cb34d0 <col:32> 'int ()' Function 0x1cb3430 '__preempt_count_sub' 'int ()'
DeclRefExpr 0x1cb3940 <col:9> 'int ()' Function 0x1cb38a0 '__copy_from_user_inatomic' 'int ()'
DeclRefExpr 0x1cbbd00 <col:9> 'int ()' Function 0x1cbbc60 '__copy_from_user' 'int ()'
DeclRefExpr 0x1cbd030 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cbd058 <col:15> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x1cbd4a0 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1cbd4c8 <col:13> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x1cbda10 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x1cbdc48 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1cbdec8 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x1cbe040 <col:2> 'int ()' Function 0x19b8310 'atomic_dec' 'int ()'
DeclRefExpr 0x1cbe9e8 <col:10> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x1ccc7e8 <col:2> 'void (struct task_struct *)' Function 0x1cbf680 'vtime_account_system' 'void (struct task_struct *)'
DeclRefExpr 0x1ccd408 <col:2> 'void (struct task_struct *)' Function 0x1cbf960 'vtime_account_irq_enter' 'void (struct task_struct *)'
DeclRefExpr 0x1ccd4b8 <col:2> 'void (struct task_struct *)' Function 0x1ccd1f0 'irqtime_account_irq' 'void (struct task_struct *)'
DeclRefExpr 0x1ccd6e8 <col:2> 'void (struct task_struct *)' Function 0x1ccc740 'vtime_account_irq_exit' 'void (struct task_struct *)'
DeclRefExpr 0x1ccd798 <col:2> 'void (struct task_struct *)' Function 0x1ccd1f0 'irqtime_account_irq' 'void (struct task_struct *)'
DeclRefExpr 0x1cceb10 <col:9> 'int ()' Function 0x1ccea70 'virt_to_page' 'int ()'
DeclRefExpr 0x1ccef70 <col:9> 'int ()' Function 0x1cceed0 'page_address' 'int ()'
DeclRefExpr 0x1ccf348 <col:2> 'void (void)' Function 0x1cb2ff0 'pagefault_disable' 'void (void)'
DeclRefExpr 0x1ccf3b0 <col:9> 'int ()' Function 0x1cceed0 'page_address' 'int ()'
DeclRefExpr 0x1ccf5f8 <col:2> 'void (void)' Function 0x1cb3300 'pagefault_enable' 'void (void)'
DeclRefExpr 0x1ccf948 <col:15> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1ccfb30 <col:2> 'int ()' Function 0x1ccfa90 'clear_user_page' 'int ()'
DeclRefExpr 0x1ccfcb0 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd01b8 <col:3> 'struct page *(int, gfp_t, unsigned int)' Function 0x1b2af20 'alloc_pages_node' 'struct page *(int, gfp_t, unsigned int)'
DeclRefExpr 0x1cd01e0 <col:20> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
DeclRefExpr 0x1cd4090 <col:3> 'void (struct page *, unsigned long)' Function 0x1ccf830 'clear_user_highpage' 'void (struct page *, unsigned long)'
DeclRefExpr 0x1cd4550 <col:9> 'struct page *(gfp_t, struct vm_area_struct *, unsigned long)' Function 0x1cd0080 '__alloc_zeroed_user_highpage' 'struct page *(gfp_t, struct vm_area_struct *, unsigned long)'
DeclRefExpr 0x1cd4928 <col:16> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd4ab0 <col:2> 'int ()' Function 0x1cd4a10 'clear_page' 'int ()'
DeclRefExpr 0x1cd4ba0 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd5168 <col:16> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd5350 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1cd5630 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1cd58a8 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd5a80 <col:2> 'int ()' Function 0x1cd59e0 'flush_dcache_page' 'int ()'
DeclRefExpr 0x1cd5dc8 <col:2> 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)' Function 0x1cd5030 'zero_user_segments' 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)'
DeclRefExpr 0x1cd6258 <col:2> 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)' Function 0x1cd5030 'zero_user_segments' 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)'
DeclRefExpr 0x1cd6970 <col:10> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd6a88 <col:8> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd6c40 <col:2> 'int ()' Function 0x1cd6ba0 'copy_user_page' 'int ()'
DeclRefExpr 0x1cd6e08 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd6f78 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd7490 <col:10> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd75a8 <col:8> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd7760 <col:2> 'int ()' Function 0x1cd76c0 'copy_page' 'int ()'
DeclRefExpr 0x1cd7898 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd7a08 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd84d0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cd8628 <col:4> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
DeclRefExpr 0x1cd8758 <col:4> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
DeclRefExpr 0x1cd8a78 <col:2> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
DeclRefExpr 0x1cd8d18 <col:2> 'int ()' Function 0x1a0a240 'clear_bit' 'int ()'
DeclRefExpr 0x1cd8ff8 <col:10> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1cd9398 <col:2> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
DeclRefExpr 0x1cd9638 <col:2> 'int ()' Function 0x1a0a240 'clear_bit' 'int ()'
DeclRefExpr 0x1cd9900 <col:20> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x1cdaab0 <col:22> 'int ()' Function 0x1cdaa10 'preempt_count' 'int ()'
DeclRefExpr 0x1cdb498 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cdb580 <col:16> 'int ()' Function 0x1cdb4e0 'get_page_unless_zero' 'int ()'
DeclRefExpr 0x1cdb7f0 <col:12> 'int ()' Function 0x1cdb750 'PageTail' 'int ()'
DeclRefExpr 0x1cdbce0 <col:22> 'int ()' Function 0x1cdaa10 'preempt_count' 'int ()'
DeclRefExpr 0x1ce00f0 <col:12> 'int ()' Function 0x1ce0050 'PageCompound' 'int ()'
DeclRefExpr 0x1ce0290 <col:42> 'int ()' Function 0x1ce01f0 'compound_head' 'int ()'
DeclRefExpr 0x1ce0af0 <col:12> 'int ()' Function 0x1ce0a50 'page_count' 'int ()'
DeclRefExpr 0x1ce11b8 <col:3> 'struct page *(int, gfp_t, unsigned int)' Function 0x1b2af20 'alloc_pages_node' 'struct page *(int, gfp_t, unsigned int)'
DeclRefExpr 0x1ce11e0 <col:20> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
DeclRefExpr 0x1ce1548 <col:9> 'struct page *(gfp_t)' Function 0x1ce1110 '__page_cache_alloc' 'struct page *(gfp_t)'
DeclRefExpr 0x1ce1570 <col:28> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
DeclRefExpr 0x1ce18d8 <col:9> 'struct page *(gfp_t)' Function 0x1ce1110 '__page_cache_alloc' 'struct page *(gfp_t)'
DeclRefExpr 0x1ce1900 <col:28> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
DeclRefExpr 0x1ce1c48 <col:9> 'struct page *(gfp_t)' Function 0x1ce1110 '__page_cache_alloc' 'struct page *(gfp_t)'
DeclRefExpr 0x1ce1c70 <col:28> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
DeclRefExpr 0x1ce3840 <col:9> 'struct page *(struct address_space *, unsigned long, gfp_t)' Function 0x1ce2840 'find_or_create_page' 'struct page *(struct address_space *, unsigned long, gfp_t)'
DeclRefExpr 0x1ce38b8 <col:45> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
DeclRefExpr 0x1ce5e68 <col:9> 'struct page *(struct address_space *, unsigned long, filler_t *, void *)' Function 0x1ce5010 'read_cache_page_async' 'struct page *(struct address_space *, unsigned long, filler_t *, void *)'
DeclRefExpr 0x1ce6498 <col:9> 'struct page *(struct address_space *, unsigned long, filler_t *, void *)' Function 0x1ce5300 'read_cache_page' 'struct page *(struct address_space *, unsigned long, filler_t *, void *)'
DeclRefExpr 0x1ce7090 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1ce70b8 <col:15> 'int (struct vm_area_struct *)' Function 0x1cd7cb0 'is_vm_hugetlb_page' 'int (struct vm_area_struct *)'
DeclRefExpr 0x1ce7210 <col:10> 'unsigned long (struct vm_area_struct *, unsigned long)' Function 0x1ce6d80 'linear_hugepage_index' 'unsigned long (struct vm_area_struct *, unsigned long)'
DeclRefExpr 0x1ce85e0 <col:7> 'int (struct page *)' Function 0x1ce81f0 'trylock_page' 'int (struct page *)'
DeclRefExpr 0x1ce86d8 <col:3> 'void (struct page *)' Function 0x1ce75b0 '__lock_page' 'void (struct page *)'
DeclRefExpr 0x1ceaee0 <col:7> 'int (struct page *)' Function 0x1ce81f0 'trylock_page' 'int (struct page *)'
DeclRefExpr 0x1ceafb0 <col:10> 'int (struct page *)' Function 0x1ce7700 '__lock_page_killable' 'int (struct page *)'
DeclRefExpr 0x1ceb450 <col:9> 'int (struct page *)' Function 0x1ce81f0 'trylock_page' 'int (struct page *)'
DeclRefExpr 0x1ceb500 <col:31> 'int (struct page *, struct mm_struct *, unsigned int)' Function 0x1ce7a80 '__lock_page_or_retry' 'int (struct page *, struct mm_struct *, unsigned int)'
DeclRefExpr 0x1cecb60 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cecdb0 <col:8> 'int ()' Function 0x1cecd10 '__put_user' 'int ()'
DeclRefExpr 0x1ced6c0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1ced910 <col:8> 'int ()' Function 0x1ced870 '__get_user' 'int ()'
DeclRefExpr 0x1cee400 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cee658 <col:9> 'int ()' Function 0x1cecd10 '__put_user' 'int ()'
DeclRefExpr 0x1cef010 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cef268 <col:9> 'int ()' Function 0x1ced870 '__get_user' 'int ()'
DeclRefExpr 0x1cf0850 <col:2> 'void (struct page *)' Function 0x1ce7d30 '__set_page_locked' 'void (struct page *)'
DeclRefExpr 0x1cf0928 <col:10> 'int (struct page *, struct address_space *, unsigned long, gfp_t)' Function 0x1cefb90 'add_to_page_cache_locked' 'int (struct page *, struct address_space *, unsigned long, gfp_t)'
DeclRefExpr 0x1cf0b30 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cf0be0 <col:3> 'void (struct page *)' Function 0x1ce7f90 '__clear_page_locked' 'void (struct page *)'
DeclRefExpr 0x1d2b870 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
DeclRefExpr 0x1d2ba40 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
DeclRefExpr 0x1d386a0 <col:9> 'int ()' Function 0x1d38600 'ffz' 'int ()'
DeclRefExpr 0x1d3b818 <col:2> 'void (sigset_t *)' Function 0x1d3a630 'sigemptyset' 'void (sigset_t *)'
DeclRefExpr 0x1d3b970 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1d4b600 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4b790 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1d4b910 <col:2> 'void (struct prop_descriptor *, struct prop_local_percpu *)' Function 0x1d4aea0 '__prop_inc_percpu' 'void (struct prop_descriptor *, struct prop_local_percpu *)'
DeclRefExpr 0x1d4baf0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4bc58 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
DeclRefExpr 0x1d4d050 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4d1e0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1d4d360 <col:2> 'void (struct prop_descriptor *, struct prop_local_single *)' Function 0x1d4c920 '__prop_inc_single' 'void (struct prop_descriptor *, struct prop_local_single *)'
DeclRefExpr 0x1d4d540 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4d6a8 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
DeclRefExpr 0x1d5f068 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1d5f578 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1d5f678 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1d5ff18 <col:9> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1d602b8 <col:9> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1d73fa0 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d74550 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d745a0 <col:45> 'ktime_t (u64)' Function 0x1abd040 'ns_to_ktime' 'ktime_t (u64)'
DeclRefExpr 0x1d74eb0 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d750b8 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d75540 <col:24> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1d75748 <col:24> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1d764c8 <col:9> 's64 (const ktime_t)' Function 0x1aba750 'ktime_to_ns' 's64 (const ktime_t)'
DeclRefExpr 0x1d76788 <col:9> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1ab7d00 'ktime_sub' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d78bd8 <col:2> 'void (struct hrtimer *, clockid_t, enum hrtimer_mode)' Function 0x1d788c0 'hrtimer_init' 'void (struct hrtimer *, clockid_t, enum hrtimer_mode)'
DeclRefExpr 0x1d7a0f0 <col:9> 'ktime_t (const struct hrtimer *)' Function 0x1d75cb0 'hrtimer_get_softexpires' 'ktime_t (const struct hrtimer *)'
DeclRefExpr 0x1d7a260 <col:9> 'ktime_t (const struct hrtimer *)' Function 0x1d75a60 'hrtimer_get_expires' 'ktime_t (const struct hrtimer *)'
DeclRefExpr 0x1d7a378 <col:10> 's64 (const ktime_t)' Function 0x1aba750 'ktime_to_ns' 's64 (const ktime_t)'
DeclRefExpr 0x1d7a3a0 <col:22> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1ab7d00 'ktime_sub' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d7a520 <col:9> 'int (struct hrtimer *, ktime_t, unsigned long, const enum hrtimer_mode)' Function 0x1d79550 'hrtimer_start_range_ns' 'int (struct hrtimer *, ktime_t, unsigned long, const enum hrtimer_mode)'
DeclRefExpr 0x1d7a8c8 <col:9> 'int (struct hrtimer *, enum hrtimer_mode)' Function 0x1d79e90 'hrtimer_start_expires' 'int (struct hrtimer *, enum hrtimer_mode)'
DeclRefExpr 0x1d7bca0 <col:9> 'u64 (struct hrtimer *, ktime_t, ktime_t)' Function 0x1d7b990 'hrtimer_forward' 'u64 (struct hrtimer *, ktime_t, ktime_t)'
DeclRefExpr 0x1db5378 <col:32> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x1db8f18 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1dbcb78 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1dbcfd0 <col:2> 'void (const struct cred *)' Function 0x1dbc5e0 'validate_creds' 'void (const struct cred *)'
DeclRefExpr 0x1dbd0d8 <col:9> 'struct cred *(struct cred *)' Function 0x1dbcad0 'get_new_cred' 'struct cred *(struct cred *)'
DeclRefExpr 0x1dbd4f0 <col:2> 'void (const struct cred *)' Function 0x1dbc5e0 'validate_creds' 'void (const struct cred *)'
DeclRefExpr 0x1dbd5b8 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1dbd6d8 <col:3> 'void (struct cred *)' Function 0x1dba7c0 '__put_cred' 'void (struct cred *)'
DeclRefExpr 0x1dcd960 <col:2> 'void (unsigned long)' Function 0x1dcd780 'show_state_filter' 'void (unsigned long)'
DeclRefExpr 0x1de6a70 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
DeclRefExpr 0x1de6d98 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
DeclRefExpr 0x1de74c8 <col:9> 'pid_t (struct pid *)' Function 0x1b9a320 'pid_vnr' 'pid_t (struct pid *)'
DeclRefExpr 0x1de74f0 <col:17> 'struct pid *(struct task_struct *)' Function 0x1de59d0 'task_tgid' 'struct pid *(struct task_struct *)'
DeclRefExpr 0x1de78d0 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
DeclRefExpr 0x1de7ba8 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
DeclRefExpr 0x1de7f60 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
DeclRefExpr 0x1de8238 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
DeclRefExpr 0x1de8558 <col:9> 'pid_t (struct task_struct *, struct pid_namespace *)' Function 0x1de7820 'task_pgrp_nr_ns' 'pid_t (struct task_struct *, struct pid_namespace *)'
DeclRefExpr 0x1de91b8 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1de92b8 <col:3> 'void (struct task_struct *)' Function 0x1de8fc0 '__put_task_struct' 'void (struct task_struct *)'
DeclRefExpr 0x1dec0e0 <col:9> 'int (struct task_struct *, const struct cpumask *)' Function 0x1deb930 'set_cpus_allowed_ptr' 'int (struct task_struct *, const struct cpumask *)'
DeclRefExpr 0x1df66c8 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1df8350 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1df8540 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1df86d0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1df8850 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1df8910 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x1df8cc8 <col:8> 'int (struct task_struct *, sigset_t *, siginfo_t *)' Function 0x1df7ec0 'dequeue_signal' 'int (struct task_struct *, sigset_t *, siginfo_t *)'
DeclRefExpr 0x1df8e90 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
DeclRefExpr 0x1dff390 <col:9> 'int (struct pid *, int, int)' Function 0x1dfabf0 'kill_pid' 'int (struct pid *, int, int)'
DeclRefExpr 0x1e003b8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e003e0 <col:15> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1e00528 <col:3> 'void (struct mm_struct *)' Function 0x1e001c0 '__mmdrop' 'void (struct mm_struct *)'
DeclRefExpr 0x1e03b48 <col:9> 'struct pid *(struct task_struct *)' Function 0x1de56a0 'task_pid' 'struct pid *(struct task_struct *)'
DeclRefExpr 0x1e04638 <col:9> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1e048e8 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1e04b58 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x1e051a8 <col:8> 'struct sighand_struct *(struct task_struct *, unsigned long *)' Function 0x1e04e40 '__lock_task_sighand' 'struct sighand_struct *(struct task_struct *, unsigned long *)'
DeclRefExpr 0x1e05660 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
DeclRefExpr 0x1e0c2b0 <col:2> 'int ()' Function 0x1e0c210 'set_ti_thread_flag' 'int ()'
DeclRefExpr 0x1e0c770 <col:2> 'int ()' Function 0x1e0c6d0 'clear_ti_thread_flag' 'int ()'
DeclRefExpr 0x1e0cc30 <col:9> 'int ()' Function 0x1e0cb90 'test_and_set_ti_thread_flag' 'int ()'
DeclRefExpr 0x1e0d110 <col:9> 'int ()' Function 0x1e0d070 'test_and_clear_ti_thread_flag' 'int ()'
DeclRefExpr 0x1e0d5f0 <col:9> 'int ()' Function 0x1e0d550 'test_ti_thread_flag' 'int ()'
DeclRefExpr 0x1e0e2a8 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e0e2d0 <col:18> 'int (sigset_t *, int)' Function 0x1d38130 'sigismember' 'int (sigset_t *, int)'
DeclRefExpr 0x1e0e668 <col:9> 'int (struct task_struct *)' Function 0x1e0e020 'signal_pending' 'int (struct task_struct *)'
DeclRefExpr 0x1e0e778 <col:30> 'int (struct task_struct *)' Function 0x1e0e200 '__fatal_signal_pending' 'int (struct task_struct *)'
DeclRefExpr 0x1e0ec98 <col:7> 'int (struct task_struct *)' Function 0x1e0e020 'signal_pending' 'int (struct task_struct *)'
DeclRefExpr 0x1e0ee98 <col:41> 'int (struct task_struct *)' Function 0x1e0e200 '__fatal_signal_pending' 'int (struct task_struct *)'
DeclRefExpr 0x1e0f490 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x1e0f4f8 <col:2> 'void (const char *, int, int)' Function 0x19197c0 '__might_sleep' 'void (const char *, int, int)'
DeclRefExpr 0x1e0f690 <col:2> 'int (void)' Function 0x1e0f050 '_cond_resched' 'int (void)'
DeclRefExpr 0x1e0f740 <col:2> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x1e10b70 <col:2> 'void (struct task_struct *, unsigned int)' Function 0x1e10860 'signal_wake_up_state' 'void (struct task_struct *, unsigned int)'
DeclRefExpr 0x1e10f60 <col:2> 'void (struct task_struct *, unsigned int)' Function 0x1e10860 'signal_wake_up_state' 'void (struct task_struct *, unsigned int)'
DeclRefExpr 0x1e1e0d8 <col:10> 'bool (struct task_struct *, struct task_struct *)' Function 0x1e03f00 'same_thread_group' 'bool (struct task_struct *, struct task_struct *)'
DeclRefExpr 0x1e1e468 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e1e560 <col:3> 'void (struct task_struct *)' Function 0x1e1dbb0 '__ptrace_unlink' 'void (struct task_struct *)'
DeclRefExpr 0x1e1edc8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e1f330 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
DeclRefExpr 0x1e202e0 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1e203e0 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1e20fd8 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1e21000 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1e21180 <col:2> 'void (struct task_struct *)' Function 0x1e1e3c0 'ptrace_unlink' 'void (struct task_struct *)'
DeclRefExpr 0x1e21230 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1e21258 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1e215b8 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1e21988 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1e21d18 <col:2> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1e4adf8 <col:9> 'bool (kuid_t)' Function 0x1b6a9e0 'uid_valid' 'bool (kuid_t)'
DeclRefExpr 0x1e4ae20 <col:19> 'kuid_t (struct task_struct *)' Function 0x1e48470 'audit_get_loginuid' 'kuid_t (struct task_struct *)'
DeclRefExpr 0x1e4f960 <col:2> 'void (struct audit_buffer *, const char *, size_t)' Function 0x1e4c240 'audit_log_n_string' 'void (struct audit_buffer *, const char *, size_t)'
DeclRefExpr 0x1e4f9d8 <col:30> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
DeclRefExpr 0x1e4fe40 <col:2> 'int ()' Function 0x1e4fda0 '__fsnotify_d_instantiate' 'int ()'
DeclRefExpr 0x1e50480 <col:9> 'int ()' Function 0x1e503e0 '__fsnotify_parent' 'int ()'
DeclRefExpr 0x1e50998 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e51038 <col:3> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1e51148 <col:8> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e51810 <col:2> 'int ()' Function 0x1e51770 '__fsnotify_update_dcache_flags' 'int ()'
DeclRefExpr 0x1e521d0 <col:18> 'int ()' Function 0x1e52130 'fsnotify_get_cookie' 'int ()'
DeclRefExpr 0x1e527e0 <col:3> 'void (struct inode *)' Function 0x1e51990 'fsnotify_link_count' 'void (struct inode *)'
DeclRefExpr 0x1e52950 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x1e52d90 <col:2> 'int ()' Function 0x1e52cf0 '__fsnotify_inode_delete' 'int ()'
DeclRefExpr 0x1e53080 <col:2> 'int ()' Function 0x1e52fe0 '__fsnotify_vfsmount_delete' 'int ()'
DeclRefExpr 0x1e53498 <col:2> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e537f8 <col:2> 'int ()' Function 0x1e52cf0 '__fsnotify_inode_delete' 'int ()'
DeclRefExpr 0x1e53b30 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x1e54018 <col:2> 'void (struct inode *)' Function 0x1e51990 'fsnotify_link_count' 'void (struct inode *)'
DeclRefExpr 0x1e540c8 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x1e54638 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x1e54b78 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e54f60 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e55518 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e55900 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e55eb8 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e56138 <col:2> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e566a8 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e57cd8 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e583c8 <col:2> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e59638 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
DeclRefExpr 0x1e68110 <col:9> 'int (struct task_struct *, unsigned int)' Function 0x1e5d960 'cap_ptrace_access_check' 'int (struct task_struct *, unsigned int)'
DeclRefExpr 0x1e683f8 <col:9> 'int (struct task_struct *)' Function 0x1e5dac0 'cap_ptrace_traceme' 'int (struct task_struct *)'
DeclRefExpr 0x1e687c0 <col:9> 'int (struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *)' Function 0x1e5de80 'cap_capget' 'int (struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *)'
DeclRefExpr 0x1e68d48 <col:9> 'int (struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *)' Function 0x1e5e300 'cap_capset' 'int (struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *)'
DeclRefExpr 0x1e692b8 <col:9> 'int (const struct cred *, struct user_namespace *, int, int)' Function 0x1e5d580 'cap_capable' 'int (const struct cred *, struct user_namespace *, int, int)'
DeclRefExpr 0x1e69728 <col:9> 'int (const struct cred *, struct user_namespace *, int, int)' Function 0x1e5d580 'cap_capable' 'int (const struct cred *, struct user_namespace *, int, int)'
DeclRefExpr 0x1e6a1e0 <col:9> 'int (const struct timespec *, const struct timezone *)' Function 0x1e5d780 'cap_settime' 'int (const struct timespec *, const struct timezone *)'
DeclRefExpr 0x1e6a550 <col:9> 'int (struct mm_struct *, long)' Function 0x1e66770 'cap_vm_enough_memory' 'int (struct mm_struct *, long)'
DeclRefExpr 0x1e6a838 <col:9> 'int (struct linux_binprm *)' Function 0x1e5e4f0 'cap_bprm_set_creds' 'int (struct linux_binprm *)'
DeclRefExpr 0x1e6af68 <col:9> 'int (struct linux_binprm *)' Function 0x1e5e640 'cap_bprm_secureexec' 'int (struct linux_binprm *)'
DeclRefExpr 0x1e74c18 <col:9> 'int (struct dentry *, const char *, const void *, size_t, int)' Function 0x1e5e970 'cap_inode_setxattr' 'int (struct dentry *, const char *, const void *, size_t, int)'
DeclRefExpr 0x1e75850 <col:9> 'int (struct dentry *, const char *)' Function 0x1e5eb60 'cap_inode_removexattr' 'int (struct dentry *, const char *)'
DeclRefExpr 0x1e75b08 <col:9> 'int (struct dentry *)' Function 0x1e5ecc0 'cap_inode_need_killpriv' 'int (struct dentry *)'
DeclRefExpr 0x1e75da8 <col:9> 'int (struct dentry *)' Function 0x1e5ee10 'cap_inode_killpriv' 'int (struct dentry *)'
DeclRefExpr 0x1e77af8 <col:9> 'int (unsigned long)' Function 0x1e5ef50 'cap_mmap_addr' 'int (unsigned long)'
DeclRefExpr 0x1e7c578 <col:9> 'int (struct cred *, const struct cred *, int)' Function 0x1e5f5c0 'cap_task_fix_setuid' 'int (struct cred *, const struct cred *, int)'
DeclRefExpr 0x1e7d250 <col:9> 'int (struct task_struct *, int)' Function 0x1e66510 'cap_task_setnice' 'int (struct task_struct *, int)'
DeclRefExpr 0x1e7d5c0 <col:9> 'int (struct task_struct *, int)' Function 0x1e66330 'cap_task_setioprio' 'int (struct task_struct *, int)'
DeclRefExpr 0x1e7dd58 <col:9> 'int (struct task_struct *)' Function 0x1e66160 'cap_task_setscheduler' 'int (struct task_struct *)'
DeclRefExpr 0x1e7ea88 <col:9> 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)' Function 0x1e65ff0 'cap_task_prctl' 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)'
DeclRefExpr 0x1e83200 <col:9> 'int (struct sock *, struct sk_buff *)' Function 0x1e67250 'cap_netlink_send' 'int (struct sock *, struct sk_buff *)'
DeclRefExpr 0x1e91340 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x1e91888 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x1e989b0 <col:2> 'void (void)' Function 0x1a6bda0 'synchronize_sched' 'void (void)'
DeclRefExpr 0x1e9c260 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1e9ce18 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1ede130 <col:9> 'int (struct poll_wqueues *, int, ktime_t *, unsigned long)' Function 0x1eddc40 'poll_schedule_timeout' 'int (struct poll_wqueues *, int, ktime_t *, unsigned long)'
DeclRefExpr 0x1edee40 <col:10> 'int ()' Function 0x1ededa0 'copy_from_user' 'int ()'
DeclRefExpr 0x1edf060 <col:2> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1ef8f90 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
DeclRefExpr 0x1ef9f48 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1efa048 <col:3> 'void (struct nsproxy *)' Function 0x1ef98b0 'free_nsproxy' 'void (struct nsproxy *)'
DeclRefExpr 0x1efa318 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1efa7c8 <col:2> 'int ()' Function 0x19b6460 'atomic_set' 'int ()'
DeclRefExpr 0x1efab50 <col:2> 'int ()' Function 0x1efaab0 'WARN_ON_ONCE' 'int ()'
DeclRefExpr 0x1efab78 <col:15> 'int ()' Function 0x19bb600 'atomic_inc_return' 'int ()'
DeclRefExpr 0x1f09b78 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1f09ce0 <col:6> 'int ()' Function 0x19b9a10 'atomic_sub_and_test' 'int ()'
DeclRefExpr 0x1f0a340 <col:9> 'int (struct kref *, unsigned int, void (*)(struct kref *))' Function 0x1f09ac0 'kref_sub' 'int (struct kref *, unsigned int, void (*)(struct kref *))'
DeclRefExpr 0x1f0a960 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1f0aac8 <col:6> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x1f0ad30 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1f0af20 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1f0b0b0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1f0b230 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1f0b2f0 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x1f0b5e8 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1f0b820 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1f0b988 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
DeclRefExpr 0x1f0bbb0 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
DeclRefExpr 0x1f0c0d8 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1f0c240 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1f0c268 <col:16> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x1f0c440 <col:3> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x1f0c4f0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1f0c518 <col:17> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1f0c680 <col:4> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x1f0db60 <col:8> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x1f0dfc8 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1f10e30 <col:2> 'void (const char *, ...)' Function 0x1f10b70 '__check_printsym_format' 'void (const char *, ...)'
DeclRefExpr 0x1f110c8 <col:2> 'int (const char *, ...)' Function 0x1876460 'printk' 'int (const char *, ...)'
DeclRefExpr 0x1f49d20 <col:13> 'struct kset *(struct kobject *)' Function 0x1f49510 'to_kset' 'struct kset *(struct kobject *)'
DeclRefExpr 0x1f49d48 <col:21> 'struct kobject *(struct kobject *)' Function 0x1f44560 'kobject_get' 'struct kobject *(struct kobject *)'
DeclRefExpr 0x1f4a1a8 <col:2> 'void (struct kobject *)' Function 0x1f446b0 'kobject_put' 'void (struct kobject *)'
DeclRefExpr 0x1f78a38 <col:9> 'void *(struct device *, size_t, gfp_t)' Function 0x1f78730 'devm_kmalloc' 'void *(struct device *, size_t, gfp_t)'
DeclRefExpr 0x1f79328 <col:9> 'void *(struct device *, size_t, gfp_t)' Function 0x1f78730 'devm_kmalloc' 'void *(struct device *, size_t, gfp_t)'
DeclRefExpr 0x1f797f0 <col:9> 'void *(struct device *, size_t, size_t, gfp_t)' Function 0x1f78f70 'devm_kmalloc_array' 'void *(struct device *, size_t, size_t, gfp_t)'
DeclRefExpr 0x1f81e50 <col:2> 'void (struct device *, bool)' Function 0x1f7fec0 'device_set_wakeup_capable' 'void (struct device *, bool)'
DeclRefExpr 0x1f81fa8 <col:2> 'int (struct device *, bool)' Function 0x1f81a40 'device_set_wakeup_enable' 'int (struct device *, bool)'
DeclRefExpr 0x1f83150 <col:2> 'void (struct wakeup_source *, const char *)' Function 0x1f805d0 'wakeup_source_prepare' 'void (struct wakeup_source *, const char *)'
DeclRefExpr 0x1f832a8 <col:2> 'void (struct wakeup_source *)' Function 0x1f80d50 'wakeup_source_add' 'void (struct wakeup_source *)'
DeclRefExpr 0x1f83538 <col:2> 'void (struct wakeup_source *)' Function 0x1f80ec0 'wakeup_source_remove' 'void (struct wakeup_source *)'
DeclRefExpr 0x1f835e8 <col:2> 'void (struct wakeup_source *)' Function 0x1f80a70 'wakeup_source_drop' 'void (struct wakeup_source *)'
DeclRefExpr 0x1f839f8 <col:9> 'const char *(const struct kobject *)' Function 0x1f43d00 'kobject_name' 'const char *(const struct kobject *)'
DeclRefExpr 0x1f85f28 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x1f86198 <col:9> 'int (struct mutex *)' Function 0x1a403f0 'mutex_trylock' 'int (struct mutex *)'
DeclRefExpr 0x1f86488 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x1f9ea08 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x1f9ebf8 <col:2> 'void (struct static_key *)' Function 0x1cbde20 'static_key_slow_dec' 'void (struct static_key *)'
DeclRefExpr 0x1f9efd0 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x2003270 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x2003788 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x2003fd8 <col:19> 'struct file *(unsigned int, int *)' Function 0x2003c50 'fget_light' 'struct file *(unsigned int, int *)'
DeclRefExpr 0x20048a8 <col:19> 'struct file *(unsigned int, int *)' Function 0x20045a0 'fget_raw_light' 'struct file *(unsigned int, int *)'
DeclRefExpr 0x2007220 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x2007430 <col:2> 'void (const struct path *)' Function 0x1a32e30 'path_get' 'void (const struct path *)'
DeclRefExpr 0x20074f8 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x2007820 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x2007a30 <col:2> 'void (const struct path *)' Function 0x1a32e30 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2007af8 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x2008968 <col:3> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x2008d60 <col:13> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x201be00 <col:10> 'int ()' Function 0x201bd60 'IS_ERR_OR_NULL' 'int ()'
DeclRefExpr 0x201be28 <col:25> 'struct mount *(struct vfsmount *)' Function 0x201b430 'real_mount' 'struct mount *(struct vfsmount *)'
DeclRefExpr 0x201c8a8 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x201cb70 <col:2> 'void (seqlock_t *)' Function 0x19edfd0 'write_seqlock' 'void (seqlock_t *)'
DeclRefExpr 0x2020150 <col:2> 'void (seqlock_t *)' Function 0x19ee3c0 'write_sequnlock' 'void (seqlock_t *)'
DeclRefExpr 0x20209a0 <col:26> 'void (struct kmem_cache *, void *)' Function 0x1b35730 'kmem_cache_free' 'void (struct kmem_cache *, void *)'
DeclRefExpr 0x2020bc0 <col:3> 'void (const void *)' Function 0x1b35950 'kfree' 'void (const void *)'
DeclRefExpr 0x2020cd8 <col:26> 'void (struct kmem_cache *, void *)' Function 0x1b35730 'kmem_cache_free' 'void (struct kmem_cache *, void *)'
DeclRefExpr 0x20214a8 <col:11> 'struct filename *(const char *)' Function 0x1e46750 'audit_reusename' 'struct filename *(const char *)'
DeclRefExpr 0x20216d8 <col:22> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
DeclRefExpr 0x20219a8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2021a78 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2022150 <col:8> 'int ()' Function 0x20220b0 'strncpy_from_user' 'int ()'
DeclRefExpr 0x2022318 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2022438 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2022970 <col:12> 'void *(size_t, gfp_t)' Function 0x1b40290 'kzalloc' 'void *(size_t, gfp_t)'
DeclRefExpr 0x2022d28 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2023258 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2023468 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20236f0 <col:8> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20237e0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20239f8 <col:2> 'void (struct filename *)' Function 0x1e46970 'audit_getname' 'void (struct filename *)'
DeclRefExpr 0x2023b68 <col:2> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x2023ec8 <col:9> 'struct filename *(const char *, int, int *)' Function 0x2021110 'getname_flags' 'struct filename *(const char *, int, int *)'
DeclRefExpr 0x2025678 <col:8> 'int (struct inode *, int)' Function 0x2024480 'acl_permission_check' 'int (struct inode *, int)'
DeclRefExpr 0x20258d0 <col:6> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x20259e0 <col:7> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
DeclRefExpr 0x2025c60 <col:8> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
DeclRefExpr 0x20262e0 <col:7> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
DeclRefExpr 0x2026700 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2026898 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x2026bb0 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x2026d78 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x2026ee0 <col:9> 'int (struct inode *, int)' Function 0x2025520 'generic_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20272b0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20275d8 <col:11> 'int (struct inode *, int)' Function 0x2026650 'do_inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20277f0 <col:11> 'int (struct inode *, int)' Function 0x2005de0 'devcgroup_inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20279e0 <col:9> 'int (struct inode *, int)' Function 0x1e74290 'security_inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x2027e78 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2028d00 <col:8> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x2028dc8 <col:25> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x2028eb8 <col:42> 'int ()' Function 0x1c81f60 'S_ISLNK' 'int ()'
DeclRefExpr 0x20293f8 <col:11> 'int (struct super_block *, struct inode *, int)' Function 0x2027dc0 'sb_permission' 'int (struct super_block *, struct inode *, int)'
DeclRefExpr 0x20296d0 <col:9> 'int (struct inode *, int)' Function 0x2027180 '__inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20299a8 <col:2> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x2029af8 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2029e08 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2029f00 <col:2> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x202a528 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x202a6c0 <col:7> 'bool (struct vfsmount *, unsigned int)' Function 0x201c620 'legitimize_mnt' 'bool (struct vfsmount *, unsigned int)'
DeclRefExpr 0x202aa88 <col:7> 'int (struct lockref *)' Function 0x1b45720 'lockref_get_not_dead' 'int (struct lockref *)'
DeclRefExpr 0x202ae68 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202b058 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x202b228 <col:8> 'int (struct lockref *)' Function 0x1b45720 'lockref_get_not_dead' 'int (struct lockref *)'
DeclRefExpr 0x202b390 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202b820 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x202bd00 <col:3> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x202be18 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x202bf80 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202c028 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x202c148 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202c1d0 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x202c2d0 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202d338 <col:8> 'bool (struct vfsmount *, unsigned int)' Function 0x201c620 'legitimize_mnt' 'bool (struct vfsmount *, unsigned int)'
DeclRefExpr 0x202d510 <col:4> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202d630 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x202d658 <col:17> 'int (struct lockref *)' Function 0x1b45720 'lockref_get_not_dead' 'int (struct lockref *)'
DeclRefExpr 0x202d7c0 <col:4> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202d828 <col:4> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x202da10 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202dbb8 <col:4> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202dc20 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x202dcd0 <col:4> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x202dec0 <col:3> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202dfa0 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x202e1a8 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x202e7e8 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x202f308 <col:10> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x202f5d8 <col:14> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x202f7c0 <col:12> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202fc30 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x202fe90 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x2030378 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2030608 <col:4> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x20310e0 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2031d38 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2032888 <col:6> 'bool (kuid_t, kuid_t)' Function 0x1a34e40 'uid_eq' 'bool (kuid_t, kuid_t)'
DeclRefExpr 0x2032a80 <col:2> 'void (const char *, const struct path *)' Function 0x1e4efa0 'audit_log_link_denied' 'void (const char *, const struct path *)'
DeclRefExpr 0x2032c18 <col:2> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x2032d68 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20331d8 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x2033460 <col:6> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x2033c58 <col:6> 'bool (kuid_t, kuid_t)' Function 0x1a34e40 'uid_eq' 'bool (kuid_t, kuid_t)'
DeclRefExpr 0x2033de0 <col:43> 'bool (struct inode *)' Function 0x2033020 'safe_hardlink_source' 'bool (struct inode *)'
DeclRefExpr 0x2033f40 <col:6> 'bool (int)' Function 0x1a17010 'capable' 'bool (int)'
DeclRefExpr 0x20340e0 <col:2> 'void (const char *, const struct path *)' Function 0x1e4efa0 'audit_log_link_denied' 'void (const char *, const struct path *)'
DeclRefExpr 0x2034840 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2034b00 <col:3> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x2034d50 <col:2> 'void (const char *, int, int)' Function 0x19197c0 '__might_sleep' 'void (const char *, int, int)'
DeclRefExpr 0x2034e70 <col:2> 'int (void)' Function 0x1e0f050 '_cond_resched' 'int (void)'
DeclRefExpr 0x2034f20 <col:2> 'void (const struct path *)' Function 0x1c6d6e0 'touch_atime' 'void (const struct path *)'
DeclRefExpr 0x2034fe8 <col:2> 'void (struct nameidata *, char *)' Function 0x1cb1ea0 'nd_set_link' 'void (struct nameidata *, char *)'
DeclRefExpr 0x20351b0 <col:10> 'int (struct dentry *, struct nameidata *)' Function 0x1e74050 'security_inode_follow_link' 'int (struct dentry *, struct nameidata *)'
DeclRefExpr 0x2035800 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20359d0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2035b98 <col:6> 'char *(struct nameidata *)' Function 0x1cb2240 'nd_get_link' 'char *(struct nameidata *)'
DeclRefExpr 0x2035d10 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2035d38 <col:16> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2035e30 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2035f48 <col:4> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2036118 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2036318 <col:4> 'void (struct nameidata *)' Function 0x202eaf0 'set_root' 'void (struct nameidata *)'
DeclRefExpr 0x2036428 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2036660 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2036a88 <col:11> 'int (const char *, struct nameidata *)' Function 0x202eea0 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x2036c18 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2036cc8 <col:4> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2037060 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2037178 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2037548 <col:22> 'struct mount *(struct vfsmount *)' Function 0x201b430 'real_mount' 'struct mount *(struct vfsmount *)'
DeclRefExpr 0x2037f68 <col:22> 'struct mount *(struct vfsmount *)' Function 0x201b430 'real_mount' 'struct mount *(struct vfsmount *)'
DeclRefExpr 0x20381b0 <col:2> 'void (seqlock_t *)' Function 0x19f0bd0 'read_seqlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x20383e8 <col:3> 'void (seqlock_t *)' Function 0x19f3020 'read_sequnlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x2038538 <col:2> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x2038660 <col:15> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2038780 <col:2> 'void (seqlock_t *)' Function 0x19f3020 'read_sequnlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x2038838 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2038a08 <col:2> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x2039e30 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2039ee0 <col:7> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x203a170 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x203a400 <col:3> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x203a640 <col:8> 'int (struct vfsmount *, struct path *)' Function 0x2015ff0 'finish_automount' 'int (struct vfsmount *, struct path *)'
DeclRefExpr 0x203a940 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x203ab50 <col:18> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x203cc58 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x203d298 <col:12> 'struct vfsmount *(struct path *)' Function 0x2015d90 'lookup_mnt' 'struct vfsmount *(struct path *)'
DeclRefExpr 0x203d3b0 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x203d4a8 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x203d6e8 <col:18> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x203e210 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x203e238 <col:16> 'bool (struct dentry *)' Function 0x203da60 'managed_dentry_might_block' 'bool (struct dentry *)'
DeclRefExpr 0x203e478 <col:8> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x203e610 <col:13> 'struct mount *(struct vfsmount *, struct dentry *)' Function 0x201c1c0 '__lookup_mnt' 'struct mount *(struct vfsmount *, struct dentry *)'
DeclRefExpr 0x203ec88 <col:13> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x203f1e8 <col:9> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x203f3e8 <col:13> 'struct mount *(struct vfsmount *, struct dentry *)' Function 0x201c1c0 '__lookup_mnt' 'struct mount *(struct vfsmount *, struct dentry *)'
DeclRefExpr 0x203f9e0 <col:13> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x203fd78 <col:2> 'void (struct nameidata *)' Function 0x202f000 'set_root_rcu' 'void (struct nameidata *)'
DeclRefExpr 0x2040708 <col:10> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2040848 <col:8> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2040ce8 <col:8> 'int (struct path *)' Function 0x2037420 'follow_up_rcu' 'int (struct path *)'
DeclRefExpr 0x2040f10 <col:13> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2041128 <col:2> 'void (struct nameidata *)' Function 0x203f140 'follow_mount_rcu' 'void (struct nameidata *)'
DeclRefExpr 0x2041eb0 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x20437c8 <col:9> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x2043958 <col:30> 'struct vfsmount *(struct path *)' Function 0x2015d90 'lookup_mnt' 'struct vfsmount *(struct path *)'
DeclRefExpr 0x2043ac0 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2043bb8 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x2043df8 <col:18> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x20440f8 <col:2> 'void (struct nameidata *)' Function 0x202eaf0 'set_root' 'void (struct nameidata *)'
DeclRefExpr 0x2044950 <col:22> 'struct dentry *(struct dentry *)' Function 0x1b55540 'dget_parent' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2044aa0 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2044bc0 <col:8> 'int (struct path *)' Function 0x2037e40 'follow_up' 'int (struct path *)'
DeclRefExpr 0x2044d80 <col:2> 'void (struct path *)' Function 0x2043720 'follow_mount' 'void (struct path *)'
DeclRefExpr 0x2045670 <col:11> 'struct dentry *(const struct dentry *, const struct qstr *)' Function 0x1b51a50 'd_lookup' 'struct dentry *(const struct dentry *, const struct qstr *)'
DeclRefExpr 0x2045970 <col:12> 'int (struct dentry *, unsigned int)' Function 0x202c850 'd_revalidate' 'int (struct dentry *, unsigned int)'
DeclRefExpr 0x2045ac0 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2045c40 <col:6> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2045cf0 <col:13> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2045e00 <col:17> 'int (struct dentry *)' Function 0x1b4f910 'd_invalidate' 'int (struct dentry *)'
DeclRefExpr 0x2045ed0 <col:6> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2046268 <col:12> 'struct dentry *(struct dentry *, const struct qstr *)' Function 0x1b4b280 'd_alloc' 'struct dentry *(struct dentry *, const struct qstr *)'
DeclRefExpr 0x20463f8 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20464c8 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2046ad0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2046c68 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2046d18 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2047078 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2047128 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20477d8 <col:11> 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)' Function 0x20453a0 'lookup_dcache' 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)'
DeclRefExpr 0x2047ad8 <col:9> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x2048688 <col:12> 'struct dentry *(const struct dentry *, const struct qstr *, unsigned int *)' Function 0x1b52200 '__d_lookup_rcu' 'struct dentry *(const struct dentry *, const struct qstr *, unsigned int *)'
DeclRefExpr 0x2048ac0 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2048cb0 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e53f0 '__read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2048fc0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049140 <col:13> 'int (struct dentry *, unsigned int)' Function 0x202c850 'd_revalidate' 'int (struct dentry *, unsigned int)'
DeclRefExpr 0x20492a8 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049760 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049788 <col:17> 'bool (struct nameidata *, struct path *, struct inode **)' Function 0x203e0c0 '__follow_mount_rcu' 'bool (struct nameidata *, struct path *, struct inode **)'
DeclRefExpr 0x20499d8 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049c30 <col:7> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x2049ee8 <col:12> 'struct dentry *(const struct dentry *, const struct qstr *)' Function 0x1b51ee0 '__d_lookup' 'struct dentry *(const struct dentry *, const struct qstr *)'
DeclRefExpr 0x204a0d8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204a230 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204a418 <col:12> 'int (struct dentry *, unsigned int)' Function 0x202c850 'd_revalidate' 'int (struct dentry *, unsigned int)'
DeclRefExpr 0x204a5b0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204a730 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x204a898 <col:8> 'int (struct dentry *)' Function 0x1b4f910 'd_invalidate' 'int (struct dentry *)'
DeclRefExpr 0x204a968 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x204acb8 <col:8> 'int (struct path *, unsigned int)' Function 0x203af90 'follow_managed' 'int (struct path *, unsigned int)'
DeclRefExpr 0x204ae80 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204af78 <col:3> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x204ba48 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x204bbf0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x204bd60 <col:11> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
DeclRefExpr 0x204bfb8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x204c100 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x204c1b0 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x204c500 <col:8> 'int (struct path *, unsigned int)' Function 0x203af90 'follow_managed' 'int (struct path *, unsigned int)'
DeclRefExpr 0x204c668 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204c760 <col:3> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x204cdc8 <col:13> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x204d080 <col:7> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x204d2b8 <col:9> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x204d7f8 <col:8> 'int (struct nameidata *)' Function 0x203fcd0 'follow_dotdot_rcu' 'int (struct nameidata *)'
DeclRefExpr 0x204d9b8 <col:4> 'void (struct nameidata *)' Function 0x2044050 'follow_dotdot' 'void (struct nameidata *)'
DeclRefExpr 0x204ddd0 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x204e2b8 <col:3> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x204e600 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204e628 <col:18> 'bool (const struct dentry *)' Function 0x1a31a00 'd_is_symlink' 'bool (const struct dentry *)'
DeclRefExpr 0x204ec40 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204ed88 <col:10> 'int (struct nameidata *, int)' Function 0x204d5d0 'handle_dots' 'int (struct nameidata *, int)'
DeclRefExpr 0x204efa0 <col:8> 'int (struct nameidata *, struct path *, struct inode **)' Function 0x2047f40 'lookup_fast' 'int (struct nameidata *, struct path *, struct inode **)'
DeclRefExpr 0x204f168 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204f348 <col:9> 'int (struct nameidata *, struct path *)' Function 0x204b6d0 'lookup_slow' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x204f890 <col:6> 'int (struct dentry *, int)' Function 0x204e550 'should_follow_link' 'int (struct dentry *, int)'
DeclRefExpr 0x204fb10 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204fb38 <col:17> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x204fe10 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2050058 <col:2> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x20502d8 <col:2> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x2050408 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
DeclRefExpr 0x2050b20 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2050ec8 <col:9> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x2051148 <col:9> 'int (struct nameidata *, struct path *, int)' Function 0x204ea70 'walk_component' 'int (struct nameidata *, struct path *, int)'
DeclRefExpr 0x20512e8 <col:3> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2051958 <col:10> 'unsigned long (unsigned long, unsigned long)' Function 0x1b469a0 'partial_name_hash' 'unsigned long (unsigned long, unsigned long)'
DeclRefExpr 0x2051b50 <col:9> 'unsigned long (unsigned long)' Function 0x1b46d80 'end_name_hash' 'unsigned long (unsigned long)'
DeclRefExpr 0x2052210 <col:10> 'unsigned long (unsigned long, unsigned long)' Function 0x1b469a0 'partial_name_hash' 'unsigned long (unsigned long, unsigned long)'
DeclRefExpr 0x2052648 <col:11> 'unsigned long (unsigned long)' Function 0x1b46d80 'end_name_hash' 'unsigned long (unsigned long)'
DeclRefExpr 0x2052ec8 <col:9> 'int (struct nameidata *)' Function 0x204cbd0 'may_lookup' 'int (struct nameidata *)'
DeclRefExpr 0x2053048 <col:9> 'unsigned long (const char *, unsigned int *)' Function 0x2051de0 'hash_name' 'unsigned long (const char *, unsigned int *)'
DeclRefExpr 0x2053ad8 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x2053e28 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2054660 <col:12> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2054a28 <col:9> 'int (struct nameidata *, struct path *, int)' Function 0x204ea70 'walk_component' 'int (struct nameidata *, struct path *, int)'
DeclRefExpr 0x2054cf8 <col:10> 'int (struct path *, struct nameidata *)' Function 0x2050700 'nested_symlink' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x2054fa0 <col:8> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20552f8 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
DeclRefExpr 0x2055fd0 <col:9> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x2056170 <col:13> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x2056638 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2056710 <col:14> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2056938 <col:16> 'unsigned int (const seqlock_t *)' Function 0x19e6ff0 'read_seqbegin' 'unsigned int (const seqlock_t *)'
DeclRefExpr 0x2056a60 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2056e50 <col:14> 'unsigned int (const seqlock_t *)' Function 0x19e6ff0 'read_seqbegin' 'unsigned int (const seqlock_t *)'
DeclRefExpr 0x20570b8 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2057120 <col:4> 'void (struct nameidata *)' Function 0x202f000 'set_root_rcu' 'void (struct nameidata *)'
DeclRefExpr 0x20571f8 <col:4> 'void (struct nameidata *)' Function 0x202eaf0 'set_root' 'void (struct nameidata *)'
DeclRefExpr 0x20572a8 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x20577c0 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2057850 <col:11> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2057b20 <col:15> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2057d08 <col:13> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2057fd8 <col:17> 'struct fd (unsigned int)' Function 0x20046f0 'fdget_raw' 'struct fd (unsigned int)'
DeclRefExpr 0x2058480 <col:9> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x2058568 <col:5> 'void (struct fd)' Function 0x2003670 'fdput' 'void (struct fd)'
DeclRefExpr 0x2058b78 <col:14> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2058d30 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2058dc8 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2058ee0 <col:4> 'void (struct fd)' Function 0x2003670 'fdput' 'void (struct fd)'
DeclRefExpr 0x2059a90 <col:9> 'int (struct nameidata *, struct path *, int)' Function 0x204ea70 'walk_component' 'int (struct nameidata *, struct path *, int)'
DeclRefExpr 0x205a2b8 <col:8> 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' Function 0x2055810 'path_init' 'int (int, const char *, unsigned int, struct nameidata *, struct file **)'
DeclRefExpr 0x205a570 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205a6f8 <col:8> 'int (const char *, struct nameidata *)' Function 0x2052900 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x205a9a8 <col:9> 'int (struct nameidata *, struct path *)' Function 0x2059410 'lookup_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x205acd8 <col:10> 'int (struct path *, struct nameidata *)' Function 0x2032130 'may_follow_link' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x205ae00 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205aff8 <col:10> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x205b218 <col:10> 'int (struct nameidata *, struct path *)' Function 0x2059410 'lookup_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x205b340 <col:4> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x205b5f0 <col:9> 'int (struct nameidata *)' Function 0x202cc20 'complete_walk' 'int (struct nameidata *)'
DeclRefExpr 0x205b868 <col:8> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x205b9c8 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x205bc58 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x205bf40 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x205c6c8 <col:15> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205c968 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205caa8 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205ccd0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205ce10 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205d098 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x205d168 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x205d988 <col:9> 'int (int, struct filename *, unsigned int, struct nameidata *)' Function 0x205c5a0 'filename_lookup' 'int (int, struct filename *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205df38 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205e118 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x205e3b0 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x205e4b0 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x205e5f0 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x205e7c0 <col:6> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
DeclRefExpr 0x205e9b8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x205ea68 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x205ec10 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x205f2d8 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205fd40 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x205fe78 <col:8> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x20604c8 <col:9> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
DeclRefExpr 0x2060b90 <col:2> 'int ()' Function 0x1efaab0 'WARN_ON_ONCE' 'int ()'
DeclRefExpr 0x2060bb8 <col:16> 'int (struct mutex *)' Function 0x1a3fee0 'mutex_is_locked' 'int (struct mutex *)'
DeclRefExpr 0x2061060 <col:14> 'unsigned int (const unsigned char *, unsigned int)' Function 0x2051780 'full_name_hash' 'unsigned int (const unsigned char *, unsigned int)'
DeclRefExpr 0x2061240 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2061358 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2061738 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2061b88 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2062090 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2062228 <col:8> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20623b0 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20624c8 <col:9> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
DeclRefExpr 0x2062b18 <col:25> 'struct filename *(const char *, int, int *)' Function 0x2021110 'getname_flags' 'struct filename *(const char *, int, int *)'
DeclRefExpr 0x2062cf8 <col:12> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2062dc0 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2062e90 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2062fc8 <col:9> 'int (int, struct filename *, unsigned int, struct nameidata *)' Function 0x205c5a0 'filename_lookup' 'int (int, struct filename *, unsigned int, struct nameidata *)'
DeclRefExpr 0x2063180 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x2063790 <col:9> 'int (int, const char *, unsigned int, struct path *, int *)' Function 0x2062930 'user_path_at_empty' 'int (int, const char *, unsigned int, struct path *, int *)'
DeclRefExpr 0x2063e68 <col:23> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x2064048 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20641b0 <col:10> 'int (int, struct filename *, unsigned int, struct nameidata *)' Function 0x205c5a0 'filename_lookup' 'int (int, struct filename *, unsigned int, struct nameidata *)'
DeclRefExpr 0x2064400 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20644b0 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2064c30 <col:7> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x2065008 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2065178 <col:11> 'int (struct nameidata *, int)' Function 0x204d5d0 'handle_dots' 'int (struct nameidata *, int)'
DeclRefExpr 0x2065390 <col:12> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2065598 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x2065708 <col:11> 'struct dentry *(const struct dentry *, const struct qstr *)' Function 0x1b51a50 'd_lookup' 'struct dentry *(const struct dentry *, const struct qstr *)'
DeclRefExpr 0x2065930 <col:12> 'struct dentry *(struct dentry *, const struct qstr *)' Function 0x1b4b280 'd_alloc' 'struct dentry *(struct dentry *, const struct qstr *)'
DeclRefExpr 0x2065ba8 <col:4> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x2065d90 <col:12> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x2065fb0 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2066088 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2066138 <col:4> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x2066360 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20665e0 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2066870 <col:14> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x20669c0 <col:6> 'int (struct dentry *, int)' Function 0x204e550 'should_follow_link' 'int (struct dentry *, int)'
DeclRefExpr 0x2066be8 <col:2> 'void (struct path *)' Function 0x2043720 'follow_mount' 'void (struct path *)'
DeclRefExpr 0x2066d08 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
DeclRefExpr 0x2067448 <col:8> 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' Function 0x2055810 'path_init' 'int (int, const char *, unsigned int, struct nameidata *, struct file **)'
DeclRefExpr 0x20676b0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2067838 <col:8> 'int (const char *, struct nameidata *)' Function 0x2052900 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x2067a48 <col:8> 'int (struct nameidata *, struct path *)' Function 0x2064800 'mountpoint_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x2067db0 <col:9> 'int (struct path *, struct nameidata *)' Function 0x2032130 'may_follow_link' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x2067ee0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20680c0 <col:9> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x20682e8 <col:9> 'int (struct nameidata *, struct path *)' Function 0x2064800 'mountpoint_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x2068410 <col:3> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2068628 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x2068900 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2068ef8 <col:14> 'int (int, const char *, struct path *, unsigned int)' Function 0x2067120 'path_mountpoint' 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x2069198 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20692d8 <col:11> 'int (int, const char *, struct path *, unsigned int)' Function 0x2067120 'path_mountpoint' 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x2069500 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2069640 <col:11> 'int (int, const char *, struct path *, unsigned int)' Function 0x2067120 'path_mountpoint' 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20698c8 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x2069998 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x2069fa8 <col:23> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x206a0f0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x206a1a0 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x206a2c8 <col:10> 'int (int, struct filename *, struct path *, unsigned int)' Function 0x2068dd0 'filename_mountpoint' 'int (int, struct filename *, struct path *, unsigned int)'
DeclRefExpr 0x206a4d0 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x206aae8 <col:9> 'int (int, struct filename *, struct path *, unsigned int)' Function 0x2068dd0 'filename_mountpoint' 'int (int, struct filename *, struct path *, unsigned int)'
DeclRefExpr 0x206b368 <col:10> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
DeclRefExpr 0x206b970 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x206bac8 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x206bb98 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x206bd40 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x206bed0 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x206c2a0 <col:6> 'int (struct inode *, struct inode *)' Function 0x206aea0 'check_sticky' 'int (struct inode *, struct inode *)'
DeclRefExpr 0x206c8b8 <col:8> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x206c9a0 <col:35> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x206cd48 <col:13> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x206ce10 <col:39> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x206d5d0 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x206da08 <col:9> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x206dec8 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e118 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e2d0 <col:6> 'struct dentry *(struct dentry *, struct dentry *)' Function 0x1b517c0 'd_ancestor' 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x206e490 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e5d8 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e808 <col:6> 'struct dentry *(struct dentry *, struct dentry *)' Function 0x1b517c0 'd_ancestor' 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x206e968 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206eab0 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206ecb8 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206ee00 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206f250 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x206f440 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x206f588 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x206fae8 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x206fee8 <col:10> 'int (struct inode *, struct dentry *, umode_t)' Function 0x1e726e0 'security_inode_create' 'int (struct inode *, struct dentry *, umode_t)'
DeclRefExpr 0x2070418 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x2070e68 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20715e8 <col:27> 'bool (const struct inode *)' Function 0x1c524b0 'inode_owner_or_capable' 'bool (const struct inode *)'
DeclRefExpr 0x1bb3fe8 <col:14> 'int (struct inode *)' Function 0x1c86390 'get_write_access' 'int (struct inode *)'
DeclRefExpr 0x1bb41a8 <col:10> 'int (struct inode *)' Function 0x1c78e90 'locks_verify_locked' 'int (struct inode *)'
DeclRefExpr 0x1bb4308 <col:11> 'int (struct path *)' Function 0x1e8fc60 'security_path_truncate' 'int (struct path *)'
DeclRefExpr 0x1bb4498 <col:11> 'int (struct dentry *, loff_t, unsigned int, struct file *)' Function 0x1c7a5f0 'do_truncate' 'int (struct dentry *, loff_t, unsigned int, struct file *)'
DeclRefExpr 0x1bb48f0 <col:2> 'void (struct inode *)' Function 0x1c86b50 'put_write_access' 'void (struct inode *)'
DeclRefExpr 0x1bb5058 <col:14> 'int (struct path *, struct dentry *, umode_t, unsigned int)' Function 0x1e8fa90 'security_path_mknod' 'int (struct path *, struct dentry *, umode_t, unsigned int)'
DeclRefExpr 0x1bb5348 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x1bb55f0 <col:9> 'int (struct inode *, struct dentry *, umode_t)' Function 0x1e726e0 'security_inode_create' 'int (struct inode *, struct dentry *, umode_t)'
DeclRefExpr 0x1bb6028 <col:23> 'int (int)' Function 0x1bb4af0 'open_to_namei_flags' 'int (int)'
DeclRefExpr 0x1bb6520 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bb6618 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1bb6ce8 <col:12> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x1bb73e8 <col:46> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1bb7af0 <col:11> 'int (struct path *, struct dentry *, umode_t)' Function 0x1bb4f30 'may_o_create' 'int (struct path *, struct dentry *, umode_t)'
DeclRefExpr 0x1bb8a68 <col:7> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1bb8db0 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x1bb9088 <col:4> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x1bb9258 <col:4> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1bb9a30 <col:3> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1bb9b80 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x1bb9d70 <col:10> 'int (struct path *, int, int)' Function 0x2070890 'may_open' 'int (struct path *, int, int)'
DeclRefExpr 0x1bb9fe0 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x1bba0c0 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x1bba258 <col:12> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x1bba408 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x1bba4b8 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x1bbaad8 <col:8> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1bbbb88 <col:11> 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)' Function 0x20453a0 'lookup_dcache' 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)'
DeclRefExpr 0x1bbc208 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x1bbc2b8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x1bbc750 <col:10> 'int (struct nameidata *, struct dentry *, struct path *, struct file *, const struct open_flags *, bool, bool, int *)' Function 0x1bb5d40 'atomic_open' 'int (struct nameidata *, struct dentry *, struct path *, struct file *, const struct open_flags *, bool, bool, int *)'
DeclRefExpr 0x1bbcb08 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bbcc28 <col:12> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x1bbcdd8 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x1bbce88 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x1bbd540 <col:13> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x1bbd8b0 <col:11> 'int (struct path *, struct dentry *, umode_t, unsigned int)' Function 0x1e8fa90 'security_path_mknod' 'int (struct path *, struct dentry *, umode_t, unsigned int)'
DeclRefExpr 0x1bbdb58 <col:11> 'int (struct inode *, struct dentry *, umode_t, bool)' Function 0x206f9c0 'vfs_create' 'int (struct inode *, struct dentry *, umode_t, bool)'
DeclRefExpr 0x1bbe1d8 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x1bbf6f8 <col:11> 'int (struct nameidata *, int)' Function 0x204d5d0 'handle_dots' 'int (struct nameidata *, int)'
DeclRefExpr 0x1bc00e8 <col:11> 'int (struct nameidata *, struct path *, struct inode **)' Function 0x2047f40 'lookup_fast' 'int (struct nameidata *, struct path *, struct inode **)'
DeclRefExpr 0x1bc0258 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1bc04c0 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bc06d8 <col:11> 'int (struct nameidata *)' Function 0x202cc20 'complete_walk' 'int (struct nameidata *)'
DeclRefExpr 0x1bc0880 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x1bc0f30 <col:11> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x1bc12b8 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x1bc1428 <col:10> 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, bool, int *)' Function 0x1bbb5a0 'lookup_open' 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, bool, int *)'
DeclRefExpr 0x1bc16c0 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x1bc1a00 <col:8> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1bc1a28 <col:16> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1bc1c88 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x1bc2170 <col:3> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x1bc2340 <col:6> 'bool (const struct dentry *)' Function 0x1a32240 'd_is_positive' 'bool (const struct dentry *)'
DeclRefExpr 0x1bc2450 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x1bc2658 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x1bc2b68 <col:10> 'int (struct path *, unsigned int)' Function 0x203af90 'follow_managed' 'int (struct path *, unsigned int)'
DeclRefExpr 0x1bc2ef0 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bc3218 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x1bc3328 <col:3> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x1bc34a8 <col:6> 'int (struct dentry *, int)' Function 0x204e550 'should_follow_link' 'int (struct dentry *, int)'
DeclRefExpr 0x1bc36f0 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1bc3718 <col:17> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x1bc39f0 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bc3ed0 <col:3> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x20a1ad0 <col:21> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x20a1ea0 <col:10> 'int (struct nameidata *)' Function 0x202cc20 'complete_walk' 'int (struct nameidata *)'
DeclRefExpr 0x20a1fd8 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a2160 <col:2> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x20a2460 <col:7> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20a25a0 <col:42> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x20a2960 <col:41> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20a2b30 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x20a2dd0 <col:11> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20a30c0 <col:10> 'int (struct path *, int, int)' Function 0x2070890 'may_open' 'int (struct path *, int, int)'
DeclRefExpr 0x20a34c8 <col:10> 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)' Function 0x1c7c4b0 'finish_open' 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)'
DeclRefExpr 0x20a39a8 <col:10> 'int (struct file *)' Function 0x2018340 'open_check_o_direct' 'int (struct file *)'
DeclRefExpr 0x20a3be8 <col:10> 'int (struct file *, int)' Function 0x1e92ac0 'ima_file_check' 'int (struct file *, int)'
DeclRefExpr 0x20a3ea0 <col:11> 'int (struct file *)' Function 0x2071940 'handle_truncate' 'int (struct file *)'
DeclRefExpr 0x20a4098 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20a4210 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a42e0 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
DeclRefExpr 0x20a43f0 <col:2> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x20a4520 <col:2> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x20a4780 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x20a48c8 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a4e38 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20a5e58 <col:14> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x20a60a0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a6208 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20a6358 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a64b8 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20a6b08 <col:10> 'struct dentry *(struct dentry *, const struct qstr *)' Function 0x1b4b280 'd_alloc' 'struct dentry *(struct dentry *, const struct qstr *)'
DeclRefExpr 0x20a6c30 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a7048 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20a75e0 <col:2> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x20a77d0 <col:10> 'int (struct path *, int, int)' Function 0x2070890 'may_open' 'int (struct path *, int, int)'
DeclRefExpr 0x20a7c48 <col:10> 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)' Function 0x1c7c4b0 'finish_open' 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)'
DeclRefExpr 0x20a7f70 <col:10> 'int (struct file *)' Function 0x2018340 'open_check_o_direct' 'int (struct file *)'
DeclRefExpr 0x20a8088 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x20a82e8 <col:25> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x20a83b0 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x20a85f8 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x20a8790 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20a88d8 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a9368 <col:9> 'struct file *(void)' Function 0x2016bb0 'get_empty_filp' 'struct file *(void)'
DeclRefExpr 0x20a9450 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20a96c8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a9848 <col:11> 'int (int, struct filename *, struct nameidata *, int, const struct open_flags *, struct file *, int *)' Function 0x20a57c0 'do_tmpfile' 'int (int, struct filename *, struct nameidata *, int, const struct open_flags *, struct file *, int *)'
DeclRefExpr 0x20a9c40 <col:10> 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' Function 0x2055810 'path_init' 'int (int, const char *, unsigned int, struct nameidata *, struct file **)'
DeclRefExpr 0x20a9ee8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20aa028 <col:10> 'int (const char *, struct nameidata *)' Function 0x2052900 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x20aa190 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20aa2b0 <col:10> 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)' Function 0x1bbe7b0 'do_last' 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)'
DeclRefExpr 0x20aa560 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20aa8d8 <col:4> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x20aa9d8 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20aac20 <col:11> 'int (struct path *, struct nameidata *)' Function 0x2032130 'may_follow_link' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x20aad48 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ab0f0 <col:11> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x20ab268 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ab380 <col:11> 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)' Function 0x1bbe7b0 'do_last' 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)'
DeclRefExpr 0x20ab5d0 <col:3> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x20ab9b8 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20abb60 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x20abd10 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x20abde0 <col:3> 'void (struct file *)' Function 0x20054b0 'put_filp' 'void (struct file *)'
DeclRefExpr 0x20abee8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ac290 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ac9c8 <col:9> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20acc70 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20accc0 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ace38 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20ad068 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ad0b8 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ad230 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20adeb0 <col:6> 'bool (const struct dentry *)' Function 0x1a31a00 'd_is_symlink' 'bool (const struct dentry *)'
DeclRefExpr 0x20ae088 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ae1c8 <col:9> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20ae418 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ae468 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ae5e0 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20ae818 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ae868 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ae9e0 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20af098 <col:26> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20af528 <col:10> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x20af780 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20afc00 <col:9> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20afd38 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20aff08 <col:11> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x20b0048 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20b0210 <col:6> 'bool (const struct dentry *)' Function 0x1a32240 'd_is_positive' 'bool (const struct dentry *)'
DeclRefExpr 0x20b0360 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20b0768 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20b0a70 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20b0b68 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20b0c58 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20b0e80 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20b0fc0 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20b1440 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20b14f0 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20b1680 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20b1778 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20b1c38 <col:25> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x20b1da0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20b1f10 <col:10> 'int ()' Function 0x20b1e70 'ERR_CAST' 'int ()'
DeclRefExpr 0x20b2050 <col:8> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20aef50 'kern_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20b22a0 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20b2778 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20b2a20 <col:7> 'int ()' Function 0x20b2980 'S_ISCHR' 'int ()'
DeclRefExpr 0x20b2bb0 <col:24> 'int ()' Function 0x20b2b10 'S_ISBLK' 'int ()'
DeclRefExpr 0x20b2cc0 <col:43> 'bool (int)' Function 0x1a17010 'capable' 'bool (int)'
DeclRefExpr 0x20b2fd0 <col:10> 'int (int, dev_t)' Function 0x2006040 'devcgroup_inode_mknod' 'int (int, dev_t)'
DeclRefExpr 0x20b3260 <col:10> 'int (struct inode *, struct dentry *, int, dev_t)' Function 0x1e73850 'security_inode_mknod' 'int (struct inode *, struct dentry *, int, dev_t)'
DeclRefExpr 0x20b3820 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x20b6360 <col:10> 'int (umode_t)' Function 0x20b3ab0 'may_mknod' 'int (umode_t)'
DeclRefExpr 0x20b6548 <col:11> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20b6758 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20b6808 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20b6bd8 <col:12> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x20b6cf0 <col:10> 'int (struct path *, struct dentry *, umode_t, unsigned int)' Function 0x1e8fa90 'security_path_mknod' 'int (struct path *, struct dentry *, umode_t, unsigned int)'
DeclRefExpr 0x20b6f98 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20b7110 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20b91b8 <col:9> 'long (int, const char *, umode_t, unsigned int)' Function 0x20b3dd0 'sys_mknodat' 'long (int, const char *, umode_t, unsigned int)'
DeclRefExpr 0x20b96b8 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20b9be0 <col:10> 'int (struct inode *, struct dentry *, int)' Function 0x1e73220 'security_inode_mkdir' 'int (struct inode *, struct dentry *, int)'
DeclRefExpr 0x20ba338 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e543e0 'fsnotify_mkdir' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x20bc4e0 <col:11> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20bc6f8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20bc7a8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20bcb78 <col:12> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x20bcc90 <col:10> 'int (struct path *, struct dentry *, umode_t)' Function 0x1e8f460 'security_path_mkdir' 'int (struct path *, struct dentry *, umode_t)'
DeclRefExpr 0x20bce88 <col:11> 'int (struct inode *, struct dentry *, umode_t)' Function 0x20b9590 'vfs_mkdir' 'int (struct inode *, struct dentry *, umode_t)'
DeclRefExpr 0x20bd098 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20bd198 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20bea00 <col:9> 'long (int, const char *, umode_t)' Function 0x20ba6f0 'sys_mkdirat' 'long (int, const char *, umode_t)'
DeclRefExpr 0x20bed38 <col:2> 'void (struct dentry *)' Function 0x1b4f5f0 'shrink_dcache_parent' 'void (struct dentry *)'
DeclRefExpr 0x20bede8 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x20bf120 <col:3> 'void (struct dentry *)' Function 0x1b4aaf0 '__d_drop' 'void (struct dentry *)'
DeclRefExpr 0x20bf200 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x20bf638 <col:14> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x20bfa30 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x20bfae0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20bfcb8 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20bfe28 <col:10> 'int (struct inode *, struct dentry *)' Function 0x1e73470 'security_inode_rmdir' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20bffd0 <col:2> 'void (struct dentry *)' Function 0x1b4f5f0 'shrink_dcache_parent' 'void (struct dentry *)'
DeclRefExpr 0x20c0408 <col:2> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x20c04b8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c0620 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20c0730 <col:3> 'void (struct dentry *)' Function 0x1b4ad90 'd_delete' 'void (struct dentry *)'
DeclRefExpr 0x20c0e30 <col:9> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x20c10a8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c1158 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c17b8 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20c1978 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20c3188 <col:11> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x20c3290 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c3368 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c36b0 <col:10> 'int (struct path *, struct dentry *)' Function 0x1e8f6b0 'security_path_rmdir' 'int (struct path *, struct dentry *)'
DeclRefExpr 0x20c3918 <col:10> 'int (struct inode *, struct dentry *)' Function 0x20bf520 'vfs_rmdir' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20c3ae0 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20c3bb0 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c3d78 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20c3e88 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20c3fa8 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20c4058 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20c5168 <col:9> 'long (int, const char *)' Function 0x20c0a30 'do_rmdir' 'long (int, const char *)'
DeclRefExpr 0x20c56f8 <col:14> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x20c5a98 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20c5b98 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20c5d18 <col:11> 'int (struct inode *, struct dentry *)' Function 0x1e72c00 'security_inode_unlink' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20c5ec0 <col:12> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x20c6338 <col:5> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x20c64d8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c67a8 <col:3> 'void (struct inode *)' Function 0x1e51990 'fsnotify_link_count' 'void (struct inode *)'
DeclRefExpr 0x20c6858 <col:3> 'void (struct dentry *)' Function 0x1b4ad90 'd_delete' 'void (struct dentry *)'
DeclRefExpr 0x20c7170 <col:9> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x20c7388 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c7438 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c7830 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20c79f0 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20c7c20 <col:11> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x20c7d28 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c7e00 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c8228 <col:7> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x20c8338 <col:3> 'void (struct inode *)' Function 0x1c78150 'ihold' 'void (struct inode *)'
DeclRefExpr 0x20c8410 <col:11> 'int (struct path *, struct dentry *)' Function 0x1e8f100 'security_path_unlink' 'int (struct path *, struct dentry *)'
DeclRefExpr 0x20c8658 <col:11> 'int (struct inode *, struct dentry *, struct inode **)' Function 0x20c54b0 'vfs_unlink' 'int (struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20c88c8 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20c8a20 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c8c08 <col:3> 'void (struct inode *)' Function 0x1c782a0 'iput' 'void (struct inode *)'
DeclRefExpr 0x20c8e30 <col:11> 'int (struct inode **)' Function 0x1c79bf0 'break_deleg_wait' 'int (struct inode **)'
DeclRefExpr 0x20c9068 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20c9178 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20c9298 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20c9348 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20c96c0 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x20c9818 <col:11> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20c98e0 <col:37> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x20ceee8 <col:10> 'long (int, const char *)' Function 0x20c0a30 'do_rmdir' 'long (int, const char *)'
DeclRefExpr 0x20cf030 <col:9> 'long (int, const char *)' Function 0x20c6b30 'do_unlinkat' 'long (int, const char *)'
DeclRefExpr 0x20cff18 <col:9> 'long (int, const char *)' Function 0x20c6b30 'do_unlinkat' 'long (int, const char *)'
DeclRefExpr 0x20d0328 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20d06b0 <col:10> 'int (struct inode *, struct dentry *, const char *)' Function 0x1e72ec0 'security_inode_symlink' 'int (struct inode *, struct dentry *, const char *)'
DeclRefExpr 0x20d0b90 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x20d2e10 <col:9> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x20d2ee8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20d2f98 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20d30d8 <col:11> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20d3310 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20d33e8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20d3548 <col:10> 'int (struct path *, struct dentry *, const char *)' Function 0x1e8ffb0 'security_path_symlink' 'int (struct path *, struct dentry *, const char *)'
DeclRefExpr 0x20d37e0 <col:11> 'int (struct inode *, struct dentry *, const char *)' Function 0x20d0200 'vfs_symlink' 'int (struct inode *, struct dentry *, const char *)'
DeclRefExpr 0x20d3a38 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20d3b38 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20d3d50 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20d5490 <col:9> 'long (const char *, int, const char *)' Function 0x20d0f70 'sys_symlinkat' 'long (const char *, int, const char *)'
DeclRefExpr 0x20d5d88 <col:10> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20d8ea8 <col:6> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x20d9070 <col:10> 'int (struct dentry *, struct inode *, struct dentry *)' Function 0x1e729b0 'security_inode_link' 'int (struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x20d92d0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20d99a0 <col:11> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x20d9ff0 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x20da258 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x20da3b8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20da518 <col:3> 'void (struct inode *, struct inode *, struct dentry *)' Function 0x1e53f60 'fsnotify_link' 'void (struct inode *, struct inode *, struct dentry *)'
DeclRefExpr 0x20ddba8 <col:8> 'bool (int)' Function 0x1a17010 'capable' 'bool (int)'
DeclRefExpr 0x20ddf28 <col:10> 'int (int, const char *, unsigned int, struct path *)' Function 0x20636d0 'user_path_at' 'int (int, const char *, unsigned int, struct path *)'
DeclRefExpr 0x20de2b8 <col:15> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20de518 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20de5f0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20de968 <col:10> 'int (struct path *)' Function 0x2033780 'may_linkat' 'int (struct path *)'
DeclRefExpr 0x20dea48 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20deb68 <col:10> 'int (struct dentry *, struct path *, struct dentry *)' Function 0x1e90320 'security_path_link' 'int (struct dentry *, struct path *, struct dentry *)'
DeclRefExpr 0x20dee18 <col:10> 'int (struct dentry *, struct inode *, struct dentry *, struct inode **)' Function 0x20d58b0 'vfs_link' 'int (struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20df0d8 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20df260 <col:11> 'int (struct inode **)' Function 0x1c79bf0 'break_deleg_wait' 'int (struct inode **)'
DeclRefExpr 0x20df440 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20df658 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20720d0 <col:9> 'long (int, const char *, int, const char *, int)' Function 0x20daaa0 'sys_linkat' 'long (int, const char *, int, const char *, int)'
DeclRefExpr 0x20729f0 <col:11> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x2072c88 <col:10> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' Function 0x1e73bc0 'security_inode_rename' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x2072f30 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2073020 <col:3> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20731e0 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20732a8 <col:34> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x2073860 <col:3> 'void (struct dentry *)' Function 0x1b4f5f0 'shrink_dcache_parent' 'void (struct dentry *)'
DeclRefExpr 0x2073d50 <col:3> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x2073e98 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x2073fe8 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2074298 <col:4> 'void (struct dentry *, struct dentry *)' Function 0x1b51530 'd_move' 'void (struct dentry *, struct dentry *)'
DeclRefExpr 0x2074be8 <col:10> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' Function 0x1e73bc0 'security_inode_rename' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x2074e68 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2074f18 <col:2> 'void (struct inode *, struct inode *)' Function 0x1c2ffa0 'lock_two_nondirectories' 'void (struct inode *, struct inode *)'
DeclRefExpr 0x20750f8 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20751c0 <col:32> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x2075388 <col:10> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x2075598 <col:11> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x2075ac8 <col:3> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x2075d48 <col:3> 'void (struct dentry *, struct dentry *)' Function 0x1b51530 'd_move' 'void (struct dentry *, struct dentry *)'
DeclRefExpr 0x2075e70 <col:2> 'void (struct inode *, struct inode *)' Function 0x1c30190 'unlock_two_nondirectories' 'void (struct inode *, struct inode *)'
DeclRefExpr 0x2075f88 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20765f8 <col:15> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20766c0 <col:45> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x2076a50 <col:10> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x2076d70 <col:11> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x2076eb8 <col:11> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x20772e0 <col:13> 'const char *(const unsigned char *)' Function 0x1e599c0 'fsnotify_oldname_init' 'const char *(const unsigned char *)'
DeclRefExpr 0x20774e0 <col:11> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' Function 0x2072540 'vfs_rename_dir' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x20776b8 <col:11> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)' Function 0x2074830 'vfs_rename_other' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20779a0 <col:3> 'void (struct inode *, struct inode *, const unsigned char *, int, struct inode *, struct dentry *)' Function 0x1e51ea0 'fsnotify_move' 'void (struct inode *, struct inode *, const unsigned char *, int, struct inode *, struct dentry *)'
DeclRefExpr 0x2077c88 <col:2> 'void (const unsigned char *)' Function 0x1e59c10 'fsnotify_oldname_free' 'void (const unsigned char *)'
DeclRefExpr 0x207c1c8 <col:9> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x207c3d8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207c4b0 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207c660 <col:7> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x207c818 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207c8f0 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207d198 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x207d618 <col:9> 'struct dentry *(struct dentry *, struct dentry *)' Function 0x206dcd0 'lock_rename' 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x207d7c0 <col:15> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x207d8c8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207d9a0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207db60 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x207dcb0 <col:7> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x207dd98 <col:38> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x207e5c0 <col:15> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x207e6c8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207e7a0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207ea78 <col:10> 'int (struct path *, struct dentry *, struct path *, struct dentry *)' Function 0x1e90720 'security_path_rename' 'int (struct path *, struct dentry *, struct path *, struct dentry *)'
DeclRefExpr 0x207eda0 <col:10> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)' Function 0x2076440 'vfs_rename' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x207f030 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x207f100 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x207f1d0 <col:2> 'void (struct dentry *, struct dentry *)' Function 0x206f1a0 'unlock_rename' 'void (struct dentry *, struct dentry *)'
DeclRefExpr 0x207f350 <col:11> 'int (struct inode **)' Function 0x1c79bf0 'break_deleg_wait' 'int (struct inode **)'
DeclRefExpr 0x207f530 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x207f640 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x207f830 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x207f930 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x207f9e0 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x207fb00 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x2081560 <col:9> 'long (int, const char *, int, const char *)' Function 0x2078080 'sys_renameat' 'long (int, const char *, int, const char *)'
DeclRefExpr 0x2081ad8 <col:8> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2081bb0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2081d08 <col:8> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
DeclRefExpr 0x2082070 <col:6> 'int ()' Function 0x2081fd0 'copy_to_user' 'int ()'
DeclRefExpr 0x2082a10 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2082ac0 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2082be8 <col:8> 'int (struct dentry *, char *, int, const char *)' Function 0x2081970 'vfs_readlink' 'int (struct dentry *, char *, int, const char *)'
DeclRefExpr 0x2082c88 <col:45> 'char *(struct nameidata *)' Function 0x1cb2240 'nd_get_link' 'char *(struct nameidata *)'
DeclRefExpr 0x20837c8 <col:9> 'struct page *(struct address_space *, unsigned long, void *)' Function 0x1ce6250 'read_mapping_page' 'struct page *(struct address_space *, unsigned long, void *)'
DeclRefExpr 0x20839b8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2083c20 <col:10> 'void *(struct page *)' Function 0x1cced40 'kmap' 'void *(struct page *)'
DeclRefExpr 0x20842d8 <col:12> 'char *(struct dentry *, struct page **)' Function 0x2083460 'page_getlink' 'char *(struct dentry *, struct page **)'
DeclRefExpr 0x20844b8 <col:12> 'int (struct dentry *, char *, int, const char *)' Function 0x2081970 'vfs_readlink' 'int (struct dentry *, char *, int, const char *)'
DeclRefExpr 0x20846b0 <col:3> 'void (struct page *)' Function 0x1ccf130 'kunmap' 'void (struct page *)'
DeclRefExpr 0x2084820 <col:34> 'int ()' Function 0x2084780 'put_page' 'int ()'
DeclRefExpr 0x2084ce0 <col:2> 'void (struct nameidata *, char *)' Function 0x1cb1ea0 'nd_set_link' 'void (struct nameidata *, char *)'
DeclRefExpr 0x2084d30 <col:18> 'char *(struct dentry *, struct page **)' Function 0x2083460 'page_getlink' 'char *(struct dentry *, struct page **)'
DeclRefExpr 0x20852d8 <col:3> 'void (struct page *)' Function 0x1ccf130 'kunmap' 'void (struct page *)'
DeclRefExpr 0x2085388 <col:34> 'int ()' Function 0x2084780 'put_page' 'int ()'
DeclRefExpr 0x2085cb8 <col:8> 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **)' Function 0x1c28990 'pagecache_write_begin' 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **)'
DeclRefExpr 0x2086168 <col:10> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x2086258 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
DeclRefExpr 0x2086468 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x20865c0 <col:8> 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *)' Function 0x1c28e50 'pagecache_write_end' 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *)'
DeclRefExpr 0x2086b88 <col:2> 'void (struct inode *)' Function 0x1c671e0 'mark_inode_dirty' 'void (struct inode *)'
DeclRefExpr 0x2086ff8 <col:9> 'int (struct inode *, const char *, int, int)' Function 0x20856d0 '__page_symlink' 'int (struct inode *, const char *, int, int)'
DeclRefExpr 0x2087098 <col:6> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
DeclRefExpr 0x2087490 <col:17> 'void *(struct dentry *, struct nameidata *)' Function 0x2084b00 'page_follow_link_light' 'void *(struct dentry *, struct nameidata *)'
DeclRefExpr 0x2087428 <col:14> 'int (struct dentry *, char *, int)' Function 0x20824e0 'generic_readlink' 'int (struct dentry *, char *, int)'
DeclRefExpr 0x20874f8 <col:14> 'void (struct dentry *, struct nameidata *, void *)' Function 0x20850f0 'page_put_link' 'void (struct dentry *, struct nameidata *, void *)'
