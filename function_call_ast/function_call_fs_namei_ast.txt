FunctionDecl 0x18321e0 <line:145:1, col:41> do_one_initcall 'int (initcall_t)' extern
FunctionDecl 0x18325f0 <line:151:1, col:24> setup_arch 'void (char **)'
FunctionDecl 0x1832730 <line:152:1, col:28> prepare_namespace 'void (void)'
FunctionDecl 0x1858c50 <../include/linux/bitops.h:24:1, col:49> __sw_hweight8 'unsigned int (unsigned int)' extern
FunctionDecl 0x1858d90 <line:25:1, col:50> __sw_hweight16 'unsigned int (unsigned int)' extern
FunctionDecl 0x1858ed0 <line:26:1, col:50> __sw_hweight32 'unsigned int (unsigned int)' extern
FunctionDecl 0x1859090 <line:27:1, col:44> __sw_hweight64 'unsigned long (__u64)' extern
FunctionDecl 0x1859210 <line:57:1, line:63:1> get_bitmask_order 'int (unsigned int)' static inline
DeclRefExpr 0x1859460 <col:10> 'int ()' Function 0x18593c0 'fls' 'int ()'
FunctionDecl 0x18593c0 <<invalid sloc>> fls 'int ()'
FunctionDecl 0x1859680 <line:65:1, line:73:1> get_count_order 'int (unsigned int)' static inline
DeclRefExpr 0x18597d8 <col:10> 'int ()' Function 0x18593c0 'fls' 'int ()'
FunctionDecl 0x185ca50 <line:75:1, line:78:1> hweight_long 'unsigned long (unsigned long)' static inline
DeclRefExpr 0x185cc80 <col:26> 'int ()' Function 0x185cbe0 'hweight32' 'int ()'
DeclRefExpr 0x185cdf0 <col:41> 'int ()' Function 0x185cd50 'hweight64' 'int ()'
FunctionDecl 0x185cbe0 <<invalid sloc>> hweight32 'int ()'
FunctionDecl 0x185cd50 <<invalid sloc>> hweight64 'int ()'
FunctionDecl 0x185d0f0 <line:85:1, line:88:1> rol64 '__u64 (__u64, unsigned int)' static inline
FunctionDecl 0x185d560 <line:95:1, line:98:1> ror64 '__u64 (__u64, unsigned int)' static inline
FunctionDecl 0x185da90 <line:105:1, line:108:1> rol32 '__u32 (__u32, unsigned int)' static inline
FunctionDecl 0x185df00 <line:115:1, line:118:1> ror32 '__u32 (__u32, unsigned int)' static inline
FunctionDecl 0x185e3f0 <line:125:1, line:128:1> rol16 '__u16 (__u16, unsigned int)' static inline
FunctionDecl 0x185e8a0 <line:135:1, line:138:1> ror16 '__u16 (__u16, unsigned int)' static inline
FunctionDecl 0x185ee10 <line:145:1, line:148:1> rol8 '__u8 (__u8, unsigned int)' static inline
FunctionDecl 0x185f2c0 <line:155:1, line:158:1> ror8 '__u8 (__u8, unsigned int)' static inline
FunctionDecl 0x185f7f0 <line:165:1, line:169:1> sign_extend32 '__s32 (__u32, int)' static inline
FunctionDecl 0x185fcd0 <line:171:1, line:176:1> fls_long 'unsigned int (unsigned long)' static inline
DeclRefExpr 0x185fe40 <col:10> 'int ()' Function 0x18593c0 'fls' 'int ()'
DeclRefExpr 0x1860020 <col:9> 'int ()' Function 0x185ff80 'fls64' 'int ()'
FunctionDecl 0x185ff80 <<invalid sloc>> fls64 'int ()'
FunctionDecl 0x1860250 <line:186:1, line:195:1> __ffs64 'unsigned long (u64)' static inline
DeclRefExpr 0x18604b0 <col:10> 'int ()' Function 0x1860410 '__ffs' 'int ()'
DeclRefExpr 0x18606e0 <col:9> 'int ()' Function 0x1860410 '__ffs' 'int ()'
FunctionDecl 0x1860410 <<invalid sloc>> __ffs 'int ()'
FunctionDecl 0x18608f0 <../include/linux/log2.h:21:1, line:22:23> ____ilog2_NaN 'int (void) __attribute__((noreturn))' extern
FunctionDecl 0x1862030 <line:31:1, line:35:1> __ilog2_u32 'int (u32)' static inline
DeclRefExpr 0x1862120 <col:9> 'int ()' Function 0x18593c0 'fls' 'int ()'
FunctionDecl 0x1862370 <line:39:1, line:43:1> __ilog2_u64 'int (u64)' static inline
DeclRefExpr 0x1862460 <col:9> 'int ()' Function 0x185ff80 'fls64' 'int ()'
FunctionDecl 0x18626b0 <line:51:1, line:55:1> is_power_of_2 'bool (unsigned long)' static inline
FunctionDecl 0x1862b40 <line:60:1, line:64:1> __roundup_pow_of_two 'unsigned long (unsigned long)' static inline
DeclRefExpr 0x1862c50 <col:16> 'unsigned int (unsigned long)' Function 0x185fcd0 'fls_long' 'unsigned int (unsigned long)'
FunctionDecl 0x1862e90 <line:69:1, line:73:1> __rounddown_pow_of_two 'unsigned long (unsigned long)' static inline
DeclRefExpr 0x1862fe0 <col:17> 'unsigned int (unsigned long)' Function 0x185fcd0 'fls_long' 'unsigned int (unsigned long)'
FunctionDecl 0x1863440 <line:12:1, line:22:1> printk_get_level 'int (const char *)' static inline
FunctionDecl 0x1863ae0 <line:24:1, line:34:1> printk_skip_level 'const char *(const char *)' static inline
DeclRefExpr 0x1863b88 <col:6> 'int (const char *)' Function 0x1863440 'printk_get_level' 'int (const char *)'
FunctionDecl 0x181ac30 <line:43:1, line:46:1> console_silent 'void (void)' static inline
FunctionDecl 0x181aea0 <line:48:1, line:52:1> console_verbose 'void (void)' static inline
FunctionDecl 0x181b340 <line:94:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x181b4b0 <line:95:1, line:98:1> no_printk 'int (const char *, ...)'
FunctionDecl 0x181b5e0 prev 0x181b340 <line:105:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x181b750 <line:106:1, col:41> early_printk 'void (const char *, ...)'
FunctionDecl 0x181b830 prev 0x181b5e0 <line:153:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1876200 <line:154:1, line:157:1> vprintk 'int (const char *, __va_list_tag *)'
FunctionDecl 0x1876330 prev 0x181b830 <line:158:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1876460 <line:159:1, line:162:1> printk 'int (const char *, ...)'
FunctionDecl 0x1876590 prev 0x1876330 <line:163:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x18766c0 <line:164:1, line:167:1> printk_sched 'int (const char *, ...)'
FunctionDecl 0x1876860 <line:168:1, line:171:1> printk_ratelimit 'int (void)' static inline
FunctionDecl 0x1876b20 <line:172:1, line:176:1> printk_timed_ratelimit 'bool (unsigned long *, unsigned int)' static inline
FunctionDecl 0x1876ce0 <line:178:1, line:180:1> wake_up_klogd 'void (void)' static inline
FunctionDecl 0x1876e30 <line:182:1, line:184:1> log_buf_kexec_setup 'void (void)' static inline
FunctionDecl 0x1876f80 <line:186:1, line:188:1> setup_log_buf 'void (int)' static inline
FunctionDecl 0x18770d0 <line:190:1, line:192:1> dump_stack_set_arch_desc 'void (const char *, ...)' static inline
FunctionDecl 0x18782b0 <line:194:1, line:196:1> dump_stack_print_info 'void (const char *)' static inline
FunctionDecl 0x1878400 <line:198:1, line:200:1> show_regs_print_info 'void (const char *)' static inline
FunctionDecl 0x1878550 <line:203:1, col:39> dump_stack 'void (void)' extern
FunctionDecl 0x1878c40 <line:39:1, line:40:24> ddebug_add_module 'int (struct _ddebug *, unsigned int, const char *)'
FunctionDecl 0x1879010 </usr/include/string.h:46:14> memcpy 'void *(void *, const void *, unsigned long)' extern
FunctionDecl 0x18946f0 prev 0x1879010 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> memcpy 'void *(void *, const void *, unsigned long)' extern
FunctionDecl 0x1894a30 </usr/include/string.h:50:14> memmove 'void *(void *, const void *, unsigned long)' extern
FunctionDecl 0x1894c00 prev 0x1894a30 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> memmove 'void *(void *, const void *, unsigned long)' extern
FunctionDecl 0x1894f70 </usr/include/string.h:66:14> memset 'void *(void *, int, unsigned long)' extern
FunctionDecl 0x1895140 prev 0x1894f70 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> memset 'void *(void *, int, unsigned long)' extern
FunctionDecl 0x18954d0 </usr/include/string.h:69:12> memcmp 'int (const void *, const void *, unsigned long)' extern
FunctionDecl 0x1895700 prev 0x18954d0 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> memcmp 'int (const void *, const void *, unsigned long)' extern
FunctionDecl 0x1895a90 </usr/include/string.h:96:14> memchr 'void *(const void *, int, unsigned long)' extern
FunctionDecl 0x1895c60 prev 0x1895a90 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> memchr 'void *(const void *, int, unsigned long)' extern
FunctionDecl 0x1895f80 </usr/include/string.h:129:14> strcpy 'char *(char *, const char *)' extern
FunctionDecl 0x18960f0 prev 0x1895f80 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strcpy 'char *(char *, const char *)' extern
FunctionDecl 0x1896470 </usr/include/string.h:132:14> strncpy 'char *(char *, const char *, unsigned long)' extern
FunctionDecl 0x1896640 prev 0x1896470 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strncpy 'char *(char *, const char *, unsigned long)' extern
FunctionDecl 0x18968f0 </usr/include/string.h:137:14> strcat 'char *(char *, const char *)' extern
FunctionDecl 0x1896a60 prev 0x18968f0 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strcat 'char *(char *, const char *)' extern
FunctionDecl 0x1896d40 </usr/include/string.h:140:14> strncat 'char *(char *, const char *, unsigned long)' extern
FunctionDecl 0x1896f10 prev 0x1896d40 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strncat 'char *(char *, const char *, unsigned long)' extern
FunctionDecl 0x18971d0 </usr/include/string.h:144:12> strcmp 'int (const char *, const char *)' extern
FunctionDecl 0x1897340 prev 0x18971d0 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strcmp 'int (const char *, const char *)' extern
FunctionDecl 0x1897720 </usr/include/string.h:147:12> strncmp 'int (const char *, const char *, unsigned long)' extern
FunctionDecl 0x18978f0 prev 0x1897720 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strncmp 'int (const char *, const char *, unsigned long)' extern
FunctionDecl 0x1897b90 </usr/include/string.h:151:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strcoll 'int (const char *, const char *)' extern
FunctionDecl 0x1897f10 </usr/include/string.h:154:15> strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
FunctionDecl 0x18980e0 prev 0x1897f10 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
FunctionDecl 0x1898380 </usr/include/string.h:236:14> strchr 'char *(const char *, int)' extern
FunctionDecl 0x18984f0 prev 0x1898380 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strchr 'char *(const char *, int)' extern
FunctionDecl 0x1898780 </usr/include/string.h:263:14> strrchr 'char *(const char *, int)' extern
FunctionDecl 0x18988f0 prev 0x1898780 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strrchr 'char *(const char *, int)' extern
FunctionDecl 0x1898c00 </usr/include/string.h:285:15> strcspn 'unsigned long (const char *, const char *)' extern
FunctionDecl 0x1898d70 prev 0x1898c00 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strcspn 'unsigned long (const char *, const char *)' extern
FunctionDecl 0x1899000 </usr/include/string.h:289:15> strspn 'unsigned long (const char *, const char *)' extern
FunctionDecl 0x1899170 prev 0x1899000 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strspn 'unsigned long (const char *, const char *)' extern
FunctionDecl 0x1899440 </usr/include/string.h:315:14> strpbrk 'char *(const char *, const char *)' extern
FunctionDecl 0x18995b0 prev 0x1899440 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strpbrk 'char *(const char *, const char *)' extern
FunctionDecl 0x188d2e0 </usr/include/string.h:342:14> strstr 'char *(const char *, const char *)' extern
FunctionDecl 0x188d450 prev 0x188d2e0 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strstr 'char *(const char *, const char *)' extern
FunctionDecl 0x188d6c0 </usr/include/string.h:348:14> strtok 'char *(char *, const char *)' extern
FunctionDecl 0x188d830 prev 0x188d6c0 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strtok 'char *(char *, const char *)' extern
FunctionDecl 0x188dbb0 </usr/include/string.h:354:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> __strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
FunctionDecl 0x188de10 </usr/include/string.h:399:15> strlen 'unsigned long (const char *)' extern
FunctionDecl 0x188df10 prev 0x188de10 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> strlen 'unsigned long (const char *)' extern
FunctionDecl 0x189c750 </usr/include/string.h:413:14> strerror 'char *(int)' extern
FunctionDecl 0x189c850 prev 0x189c750 <col:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:55:54> strerror 'char *(int)' extern
FunctionDecl 0x189caf0 </usr/include/string.h:451:1, /usr/include/x86_64linuxgnu/sys/cdefs.h:286:63> __bzero 'void (void *, size_t)' extern
FunctionDecl 0x189cd60 <../include/linux/string.h:11:1, col:52> strndup_user 'char *(const char *, long)' extern
FunctionDecl 0x189cfa0 <line:12:1, col:53> memdup_user 'void *(const void *, size_t)' extern
FunctionDecl 0x189d160 prev 0x18960f0 <line:20:1, col:41> strcpy 'char *(char *, const char *)' extern
FunctionDecl 0x189d460 prev 0x1896640 <../include/linux/string.h:23:1, col:59> strncpy 'char *(char *, const char *, unsigned long)' extern
FunctionDecl 0x189e7b0 <../include/linux/string.h:26:1, col:44> strlcpy 'size_t (char *, const char *, size_t)'
FunctionDecl 0x189e980 prev 0x1896a60 <line:29:1, col:42> strcat 'char *(char *, const char *)' extern
FunctionDecl 0x189ec30 prev 0x1896f10 <../include/linux/string.h:32:1, col:60> strncat 'char *(char *, const char *, unsigned long)' extern
FunctionDecl 0x189ef30 <../include/linux/string.h:35:1, col:60> strlcat 'size_t (char *, const char *, __kernel_size_t)' extern
FunctionDecl 0x189f100 prev 0x1897340 <line:38:1, col:44> strcmp 'int (const char *, const char *)' extern
FunctionDecl 0x189f420 prev 0x18978f0 <../include/linux/string.h:41:1, col:61> strncmp 'int (const char *, const char *, unsigned long)' extern
FunctionDecl 0x189f780 <../include/linux/string.h:44:1, col:64> strnicmp 'int (const char *, const char *, __kernel_size_t)' extern
FunctionDecl 0x189f950 <line:47:1, col:53> strcasecmp 'int (const char *, const char *)' extern
FunctionDecl 0x189fb80 <line:50:1, col:64> strncasecmp 'int (const char *, const char *, size_t)' extern
FunctionDecl 0x189fd50 prev 0x18984f0 <line:53:1, col:38> strchr 'char *(const char *, int)' extern
FunctionDecl 0x18a00c0 <../include/linux/string.h:56:1, col:48> strnchr 'char *(const char *, size_t, int)' extern
FunctionDecl 0x18a0290 prev 0x18988f0 <line:59:1, col:39> strrchr 'char *(const char *, int)' extern
FunctionDecl 0x18a0520 <line:63:1, col:26> strim 'char *(char *)' extern
FunctionDecl 0x18a0790 prev 0x188d450 <line:71:1, col:48> strstr 'char *(const char *, const char *)' extern
FunctionDecl 0x18a0b00 <../include/linux/string.h:74:1, col:57> strnstr 'char *(const char *, const char *, size_t)' extern
FunctionDecl 0x18a0c90 prev 0x188df10 <line:77:1, col:43> strlen 'unsigned long (const char *)' extern
FunctionDecl 0x18a0f60 <../include/linux/string.h:80:1, col:60> strnlen '__kernel_size_t (const char *, __kernel_size_t)' extern
FunctionDecl 0x18a1120 prev 0x18995b0 <line:83:1, col:48> strpbrk 'char *(const char *, const char *)' extern
FunctionDecl 0x18a13c0 <../include/linux/string.h:86:1, col:42> strsep 'char *(char **, const char *)' extern
FunctionDecl 0x18a15c0 prev 0x1899170 <line:89:1, col:56> strspn 'unsigned long (const char *, const char *)' extern
FunctionDecl 0x18a1840 prev 0x1898d70 <../include/linux/string.h:92:1, col:57> strcspn 'unsigned long (const char *, const char *)' extern
FunctionDecl 0x18a1b60 prev 0x1895140 <../include/linux/string.h:96:1, col:48> memset 'void *(void *, int, unsigned long)' extern
FunctionDecl 0x18a1e60 prev 0x18946f0 <../include/linux/string.h:99:1, col:57> memcpy 'void *(void *, const void *, unsigned long)' extern
FunctionDecl 0x18a2110 prev 0x1894c00 <../include/linux/string.h:102:1, col:58> memmove 'void *(void *, const void *, unsigned long)' extern
FunctionDecl 0x18a23c0 <../include/linux/string.h:105:1, col:49> memscan 'void *(void *, int, __kernel_size_t)' extern
FunctionDecl 0x18a2650 prev 0x1895700 <line:108:1, col:60> memcmp 'int (const void *, const void *, unsigned long)' extern
FunctionDecl 0x18a29a0 prev 0x1895c60 <../include/linux/string.h:111:1, col:54> memchr 'void *(const void *, int, unsigned long)' extern
FunctionDecl 0x18a2c70 <../include/linux/string.h:113:1, col:48> memchr_inv 'void *(const void *, int, size_t)'
FunctionDecl 0x18a2ee0 <line:115:1, col:46> kstrdup 'char *(const char *, gfp_t)' extern
FunctionDecl 0x18a31b0 <line:116:1, col:59> kstrndup 'char *(const char *, size_t, gfp_t)' extern
FunctionDecl 0x18a3490 <line:117:1, col:60> kmemdup 'void *(const void *, size_t, gfp_t)' extern
FunctionDecl 0x18a47c0 <line:119:1, col:64> argv_split 'char **(gfp_t, const char *, int *)' extern
FunctionDecl 0x18a4910 <line:120:1, col:34> argv_free 'void (char **)' extern
FunctionDecl 0x18a4b50 <line:122:1, col:55> sysfs_streq 'bool (const char *, const char *)' extern
FunctionDecl 0x18a4df0 <line:123:1, col:46> strtobool 'int (const char *, bool *)' extern
FunctionDecl 0x18a5270 <line:131:1, line:132:38> memory_read_from_buffer 'ssize_t (void *, size_t, loff_t *, const void *, size_t)' extern
FunctionDecl 0x18a5480 <line:139:1, line:142:1> strstarts 'bool (const char *, const char *)' static inline
DeclRefExpr 0x18a5530 <col:9> 'int (const char *, const char *, unsigned long)' Function 0x189f420 'strncmp' 'int (const char *, const char *, unsigned long)'
DeclRefExpr 0x18a55a8 <col:30> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
FunctionDecl 0x18a59a0 <line:144:1, col:54> memweight 'size_t (const void *, size_t)' extern
FunctionDecl 0x18a5b10 <line:151:1, line:155:1> kbasename 'const char *(const char *)' static inline
DeclRefExpr 0x18a5c28 <col:21> 'char *(const char *, int)' Function 0x18a0290 'strrchr' 'char *(const char *, int)'
FunctionDecl 0x18a5f60 <../include/linux/dynamic_debug.h:114:1, line:117:1> ddebug_remove_module 'int (const char *)' static inline
FunctionDecl 0x18a6240 <line:119:1, line:129:1> ddebug_dyndbg_module_param_cb 'int (char *, char *, const char *)' static inline
DeclRefExpr 0x18a62f8 <col:6> 'char *(const char *, const char *)' Function 0x18a0790 'strstr' 'char *(const char *, const char *)'
DeclRefExpr 0x18a6498 <col:3> 'int (const char *, ...)' Function 0x1876460 'printk' 'int (const char *, ...)'
FunctionDecl 0x18b99e0 <line:375:1, line:377:55> hex_dump_to_buffer 'void (const void *, size_t, int, int, char *, size_t, bool)' extern
FunctionDecl 0x18b9f80 <line:390:1, line:394:1> print_hex_dump 'void (const char *, const char *, int, int, int, const void *, size_t, bool)' static inline
FunctionDecl 0x18ba370 <line:395:1, line:398:1> print_hex_dump_bytes 'void (const char *, int, const void *, size_t)' static inline
FunctionDecl 0x18ba520 </usr/include/x86_64linuxgnu/asm/swab.h:7:1, line:11:1> __arch_swab32 '__u32 (__u32)' static inline
FunctionDecl 0x18ba990 <line:14:1, line:33:1> __arch_swab64 '__u64 (__u64)' static inline
FunctionDecl 0x18bad50 <../include/uapi/linux/swab.h:46:1, line:55:1> __fswab16 '__u16 (__u16)' static inline
FunctionDecl 0x18c7390 <../include/uapi/linux/swab.h:57:1, line:66:1> __fswab32 '__u32 (__u32)' static inline
DeclRefExpr 0x18c7480 <col:23> '__u32 (__u32)' Function 0x18ba520 '__arch_swab32' '__u32 (__u32)'
FunctionDecl 0x18c7660 <../include/uapi/linux/swab.h:68:1, line:81:1> __fswab64 '__u64 (__u64)' static inline
DeclRefExpr 0x18c7750 <col:23> '__u64 (__u64)' Function 0x18ba990 '__arch_swab64' '__u64 (__u64)'
FunctionDecl 0x18c7930 <../include/uapi/linux/swab.h:83:1, line:90:1> __fswahw32 '__u32 (__u32)' static inline
FunctionDecl 0x18c7f60 <../include/uapi/linux/swab.h:92:1, line:99:1> __fswahb32 '__u32 (__u32)' static inline
FunctionDecl 0x18c86a0 <../include/uapi/linux/swab.h:154:1, line:161:1> __swab16p '__u16 (const __u16 *)' static inline
DeclRefExpr 0x18c8848 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18c8ef8 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
FunctionDecl 0x18c8750 <line:106:3> __builtin_constant_p 'int ()' extern
FunctionDecl 0x18cccf0 <line:167:1, line:174:1> __swab32p '__u32 (const __u32 *)' static inline
DeclRefExpr 0x18ccd98 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18cd848 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
FunctionDecl 0x18cdb30 <line:180:1, line:187:1> __swab64p '__u64 (const __u64 *)' static inline
DeclRefExpr 0x18cdbd8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18cefa8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
FunctionDecl 0x18cf1b0 <line:195:1, line:202:1> __swahw32p '__u32 (const __u32 *)' static inline
DeclRefExpr 0x18cf258 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18cf8a8 <col:2> '__u32 (__u32)' Function 0x18c7930 '__fswahw32' '__u32 (__u32)'
FunctionDecl 0x18cfab0 <line:210:1, line:217:1> __swahb32p '__u32 (const __u32 *)' static inline
DeclRefExpr 0x18cfb58 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18d2358 <col:2> '__u32 (__u32)' Function 0x18c7f60 '__fswahb32' '__u32 (__u32)'
FunctionDecl 0x18d2640 <line:223:1, line:230:1> __swab16s 'void (__u16 *)' static inline
DeclRefExpr 0x18d2748 <col:7> '__u16 (const __u16 *)' Function 0x18c86a0 '__swab16p' '__u16 (const __u16 *)'
FunctionDecl 0x18d2a30 <line:235:1, line:242:1> __swab32s 'void (__u32 *)' static inline
DeclRefExpr 0x18d2b38 <col:7> '__u32 (const __u32 *)' Function 0x18cccf0 '__swab32p' '__u32 (const __u32 *)'
FunctionDecl 0x18d2eb0 <line:248:1, line:255:1> __swab64s 'void (__u64 *)' static inline
DeclRefExpr 0x18d2fb8 <col:7> '__u64 (const __u64 *)' Function 0x18cdb30 '__swab64p' '__u64 (const __u64 *)'
FunctionDecl 0x18d31c0 <line:263:1, line:270:1> __swahw32s 'void (__u32 *)' static inline
DeclRefExpr 0x18d32c8 <col:7> '__u32 (const __u32 *)' Function 0x18cf1b0 '__swahw32p' '__u32 (const __u32 *)'
FunctionDecl 0x18d3470 <line:278:1, line:285:1> __swahb32s 'void (__u32 *)' static inline
DeclRefExpr 0x18d3578 <col:7> '__u32 (const __u32 *)' Function 0x18cfab0 '__swahb32p' '__u32 (const __u32 *)'
FunctionDecl 0x18d3780 <../include/uapi/linux/byteorder/little_endian.h:43:1, line:46:1> __cpu_to_le64p '__le64 (const __u64 *)' static inline
FunctionDecl 0x18d3a20 <line:47:1, line:50:1> __le64_to_cpup '__u64 (const __le64 *)' static inline
FunctionDecl 0x18d3cb0 <line:51:1, line:54:1> __cpu_to_le32p '__le32 (const __u32 *)' static inline
FunctionDecl 0x18d84d0 <line:55:1, line:58:1> __le32_to_cpup '__u32 (const __le32 *)' static inline
FunctionDecl 0x18d8760 <line:59:1, line:62:1> __cpu_to_le16p '__le16 (const __u16 *)' static inline
FunctionDecl 0x18d8a00 <line:63:1, line:66:1> __le16_to_cpup '__u16 (const __le16 *)' static inline
FunctionDecl 0x18d8c90 <line:67:1, line:70:1> __cpu_to_be64p '__be64 (const __u64 *)' static inline
DeclRefExpr 0x18d8d38 <col:25> '__u64 (const __u64 *)' Function 0x18cdb30 '__swab64p' '__u64 (const __u64 *)'
FunctionDecl 0x18d8f60 <line:71:1, line:74:1> __be64_to_cpup '__u64 (const __be64 *)' static inline
DeclRefExpr 0x18d9008 <col:9> '__u64 (const __u64 *)' Function 0x18cdb30 '__swab64p' '__u64 (const __u64 *)'
FunctionDecl 0x18d9240 <line:75:1, line:78:1> __cpu_to_be32p '__be32 (const __u32 *)' static inline
DeclRefExpr 0x18d92e8 <col:25> '__u32 (const __u32 *)' Function 0x18cccf0 '__swab32p' '__u32 (const __u32 *)'
FunctionDecl 0x18da550 <line:79:1, line:82:1> __be32_to_cpup '__u32 (const __be32 *)' static inline
DeclRefExpr 0x18da5f8 <col:9> '__u32 (const __u32 *)' Function 0x18cccf0 '__swab32p' '__u32 (const __u32 *)'
FunctionDecl 0x18da830 <line:83:1, line:86:1> __cpu_to_be16p '__be16 (const __u16 *)' static inline
DeclRefExpr 0x18da8d8 <col:25> '__u16 (const __u16 *)' Function 0x18c86a0 '__swab16p' '__u16 (const __u16 *)'
FunctionDecl 0x18dab00 <line:87:1, line:90:1> __be16_to_cpup '__u16 (const __be16 *)' static inline
DeclRefExpr 0x18daba8 <col:9> '__u16 (const __u16 *)' Function 0x18c86a0 '__swab16p' '__u16 (const __u16 *)'
FunctionDecl 0x18daed0 <../include/linux/byteorder/generic.h:143:1, line:146:1> le16_add_cpu 'void (__le16 *, u16)' static inline
FunctionDecl 0x18e5ee0 <line:148:1, line:151:1> le32_add_cpu 'void (__le32 *, u32)' static inline
FunctionDecl 0x18e64a0 <line:153:1, line:156:1> le64_add_cpu 'void (__le64 *, u64)' static inline
FunctionDecl 0x18e6a20 <line:158:1, line:161:1> be16_add_cpu 'void (__be16 *, u16)' static inline
DeclRefExpr 0x18e6b30 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18e6b58 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18d09d0 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18d0d68 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18e98f8 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18e9d80 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18eb6b8 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18ebc10 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
DeclRefExpr 0x18ebc38 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18ec528 <col:2> '__u16 (__u16)' Function 0x18bad50 '__fswab16' '__u16 (__u16)'
FunctionDecl 0x18f3170 <line:163:1, line:166:1> be32_add_cpu 'void (__be32 *, u32)' static inline
DeclRefExpr 0x18f3280 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f32a8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18e7498 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18e77e8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f6a00 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18f6e10 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f93b0 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18f97e8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fa688 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18faaf0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fb960 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18fce80 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
DeclRefExpr 0x18fcea8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fdd38 <col:2> '__u32 (__u32)' Function 0x18c7390 '__fswab32' '__u32 (__u32)'
FunctionDecl 0x18fe2a0 <line:168:1, line:171:1> be64_add_cpu 'void (__be64 *, u64)' static inline
DeclRefExpr 0x18fe3b0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18fe3d8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1899ad8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1899e28 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18f07d8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x18f0be8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x18ffa88 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x18ffee0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1901938 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1901d90 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x19037f8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1903c68 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x19066d8 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1906b40 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x19085a0 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x19089d8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x190a458 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x190a890 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1915798 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1915c78 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
DeclRefExpr 0x1915ca0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1917748 <col:2> '__u64 (__u64)' Function 0x18c7660 '__fswab64' '__u64 (__u64)'
FunctionDecl 0x19197c0 <line:166:3, line:167:30> __might_sleep 'void (const char *, int, int)' static inline
FunctionDecl 0x1919920 <line:200:1, col:40> might_fault 'void (void)' static inline
FunctionDecl 0x1919d30 prev 0x1876590 <line:205:1, col:14> __printf 'int ()'
FunctionDecl 0x1919ed0 <line:208:1, col:28> oops_enter 'void (void)' extern
FunctionDecl 0x1921700 <line:209:1, col:27> oops_exit 'void (void)' extern
FunctionDecl 0x1921830 <line:210:1, col:32> print_oops_end_marker 'void (void)'
FunctionDecl 0x1921960 <line:211:1, col:31> oops_may_print 'int (void)' extern
FunctionDecl 0x1922790 <line:344:1, col:60> simple_strtol 'long (const char *, char **, unsigned int)' extern
FunctionDecl 0x1922a20 <line:345:1, col:76> simple_strtoull 'unsigned long long (const char *, char **, unsigned int)' extern
FunctionDecl 0x1922cb0 <line:346:1, col:66> simple_strtoll 'long long (const char *, char **, unsigned int)' extern
FunctionDecl 0x1922f40 <line:352:1, col:66> num_to_str 'int (char *, int, unsigned long long)' extern
FunctionDecl 0x1923020 prev 0x1919d30 <line:356:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1923210 <col:27> sprintf 'int (char *, const char *, ...)' extern
FunctionDecl 0x19233d0 prev 0x1923210 <col:23, col:67> sprintf 'int (char *, const char *, ...)'
FunctionDecl 0x1923500 prev 0x1923020 <line:357:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1923840 <col:27> vsprintf 'int (char *, const char *, __va_list_tag *)' extern
FunctionDecl 0x1923a60 prev 0x1923840 <col:23, col:68> vsprintf 'int (char *, const char *, __va_list_tag *)'
FunctionDecl 0x1923b90 prev 0x1923500 <line:358:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1923e50 <line:359:5> snprintf 'int (char *, unsigned long, const char *, ...)' extern
FunctionDecl 0x1924070 prev 0x1923e50 <col:1, col:58> snprintf 'int (char *, unsigned long, const char *, ...)'
FunctionDecl 0x19241a0 prev 0x1923b90 <line:360:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1924530 <line:361:5> vsnprintf 'int (char *, unsigned long, const char *, __va_list_tag *)' extern
FunctionDecl 0x1924800 prev 0x1924530 <col:1, col:68> vsnprintf 'int (char *, unsigned long, const char *, __va_list_tag *)'
FunctionDecl 0x1924940 prev 0x19241a0 <line:362:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1924b60 <line:363:1, col:59> scnprintf 'int (char *, size_t, const char *, ...)'
FunctionDecl 0x1924c40 prev 0x1924940 <line:364:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1924ee0 <line:365:1, col:69> vscnprintf 'int (char *, size_t, const char *, __va_list_tag *)'
FunctionDecl 0x1924fc0 prev 0x1924c40 <line:366:1, col:21> __printf 'int ()' extern
FunctionDecl 0x19251f0 <line:367:1, col:48> kasprintf 'char *(gfp_t, const char *, ...)'
FunctionDecl 0x19254c0 <line:368:1, col:65> kvasprintf 'char *(gfp_t, const char *, __va_list_tag *)' extern
FunctionDecl 0x19255a0 <line:370:1, col:20> __scanf 'int ()' extern
FunctionDecl 0x19257f0 <line:371:5> sscanf 'int (const char *restrict, const char *restrict, ...)' extern
FunctionDecl 0x19259b0 prev 0x19257f0 <col:1, col:43> sscanf 'int (const char *restrict, const char *restrict, ...)'
FunctionDecl 0x1925ae0 prev 0x19255a0 <line:372:1, col:20> __scanf 'int ()' extern
FunctionDecl 0x1925df0 <line:373:5> vsscanf 'int (const char *restrict, const char *restrict, __va_list_tag *)' extern
FunctionDecl 0x1926010 prev 0x1925df0 <col:1, col:48> vsscanf 'int (const char *restrict, const char *restrict, __va_list_tag *)'
FunctionDecl 0x1926270 <line:375:1, col:44> get_option 'int (char **, int *)' extern
FunctionDecl 0x19264f0 <line:376:1, col:63> get_options 'char *(const char *, int, int *)' extern
FunctionDecl 0x1927760 <line:377:1, col:66> memparse 'unsigned long long (const char *, char **)' extern
FunctionDecl 0x19278e0 <line:379:1, col:47> core_kernel_text 'int (unsigned long)' extern
FunctionDecl 0x1927a20 <line:380:1, col:47> core_kernel_data 'int (unsigned long)' extern
FunctionDecl 0x1927b60 <line:381:1, col:52> __kernel_text_address 'int (unsigned long)' extern
FunctionDecl 0x1927ca0 <line:382:1, col:50> kernel_text_address 'int (unsigned long)' extern
FunctionDecl 0x1927e20 <line:383:1, col:45> func_ptr_is_kernel_text 'int (void *)' extern
FunctionDecl 0x1928140 <line:386:1, col:52> session_of_pgrp 'struct pid *(struct pid *)' extern
FunctionDecl 0x1928280 <line:388:1, col:37> int_sqrt 'unsigned long (unsigned long)'
FunctionDecl 0x19283c0 <line:390:1, col:35> bust_spinlocks 'void (int)' extern
FunctionDecl 0x1928820 <line:397:1, col:38> print_tainted 'const char *(void)' extern
FunctionDecl 0x1928be0 <line:402:1, col:53> add_taint 'void (unsigned int, enum lockdep_ok)' extern
FunctionDecl 0x1928d20 <line:403:1, col:36> test_taint 'int (unsigned int)' extern
FunctionDecl 0x1928e90 <line:404:1, col:36> get_taint 'unsigned long (void)' extern
FunctionDecl 0x1929540 <line:436:1, line:441:1> hex_byte_pack 'char *(char *, u8)' static inline
FunctionDecl 0x192afb0 <line:447:1, line:452:1> hex_byte_pack_upper 'char *(char *, u8)' static inline
FunctionDecl 0x192b7f0 <line:462:1, col:36> mac_pton 'int (const char *, u8 *)'
FunctionDecl 0x192b930 <line:487:1, col:50> tracing_off_permanent 'void (void)' static inline
FunctionDecl 0x19472e0 <line:640:1, col:42> tracing_start 'void (void)' static inline
FunctionDecl 0x1947430 <line:641:1, col:41> tracing_stop 'void (void)' static inline
FunctionDecl 0x1947580 <line:642:1, col:49> trace_dump_stack 'void (int)' static inline
FunctionDecl 0x19476d0 <line:644:1, col:39> tracing_on 'void (void)' static inline
FunctionDecl 0x1947820 <line:645:1, col:40> tracing_off 'void (void)' static inline
FunctionDecl 0x1947970 <line:646:1, col:51> tracing_is_on 'int (void)' static inline
FunctionDecl 0x1947b00 <line:647:1, col:45> tracing_snapshot 'void (void)' static inline
FunctionDecl 0x1947c50 <line:648:1, col:51> tracing_snapshot_alloc 'void (void)' static inline
FunctionDecl 0x1947d30 prev 0x1924fc0 <line:650:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1947e60 <line:651:1, line:654:1> trace_printk 'int (const char *, ...)'
FunctionDecl 0x1948080 <line:655:1, line:659:1> ftrace_vprintk 'int (const char *, __va_list_tag *)' static inline
FunctionDecl 0x1948300 <line:660:1, col:72> ftrace_dump 'void (enum ftrace_dump_mode)' static inline
FunctionDecl 0x1948880 <../include/linux/list.h:24:1, line:28:1> INIT_LIST_HEAD 'void (struct list_head *)' static inline
FunctionDecl 0x1948d60 <line:37:1, line:45:1> __list_add 'void (struct list_head *, struct list_head *, struct list_head *)' static inline
FunctionDecl 0x195c460 <line:60:1, line:63:1> list_add 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x195c510 <col:2> 'void (struct list_head *, struct list_head *, struct list_head *)' Function 0x1948d60 '__list_add' 'void (struct list_head *, struct list_head *, struct list_head *)'
FunctionDecl 0x195c880 <line:74:1, line:77:1> list_add_tail 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x195c930 <col:2> 'void (struct list_head *, struct list_head *, struct list_head *)' Function 0x1948d60 '__list_add' 'void (struct list_head *, struct list_head *, struct list_head *)'
FunctionDecl 0x195cc10 <line:86:1, line:90:1> __list_del 'void (struct list_head *, struct list_head *)' static inline
FunctionDecl 0x195cf70 <line:99:1, line:102:1> __list_del_entry 'void (struct list_head *)' static inline
DeclRefExpr 0x195d018 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195cc10 '__list_del' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x18772b0 <line:104:1, line:109:1> list_del 'void (struct list_head *)' static inline
DeclRefExpr 0x1877358 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195cc10 '__list_del' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x1877950 <../include/linux/list.h:122:1, line:129:1> list_replace 'void (struct list_head *, struct list_head *)' static inline
FunctionDecl 0x1877ff0 <line:131:1, line:136:1> list_replace_init 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x18780a0 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x1877950 'list_replace' 'void (struct list_head *, struct list_head *)'
DeclRefExpr 0x1878198 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x195f420 <line:142:1, line:146:1> list_del_init 'void (struct list_head *)' static inline
DeclRefExpr 0x195f4c8 <col:2> 'void (struct list_head *)' Function 0x195cf70 '__list_del_entry' 'void (struct list_head *)'
DeclRefExpr 0x195f578 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x195f7c0 <line:153:1, line:157:1> list_move 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x195f870 <col:2> 'void (struct list_head *)' Function 0x195cf70 '__list_del_entry' 'void (struct list_head *)'
DeclRefExpr 0x195f920 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c460 'list_add' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x195fbb0 <line:164:1, line:169:1> list_move_tail 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x195fc60 <col:2> 'void (struct list_head *)' Function 0x195cf70 '__list_del_entry' 'void (struct list_head *)'
DeclRefExpr 0x195fd10 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c880 'list_add_tail' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x1960070 <line:176:1, line:180:1> list_is_last 'int (const struct list_head *, const struct list_head *)' static inline
FunctionDecl 0x1960400 <line:186:1, line:189:1> list_empty 'int (const struct list_head *)' static inline
FunctionDecl 0x19606c0 <line:204:1, line:208:1> list_empty_careful 'int (const struct list_head *)' static inline
FunctionDecl 0x1960bc0 <line:214:1, line:222:1> list_rotate_left 'void (struct list_head *)' static inline
DeclRefExpr 0x1960d00 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1960f18 <col:3> 'void (struct list_head *, struct list_head *)' Function 0x195fbb0 'list_move_tail' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x1961170 <line:228:1, line:231:1> list_is_singular 'int (const struct list_head *)' static inline
DeclRefExpr 0x1961250 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x19616a0 <line:233:1, line:243:1> __list_cut_position 'void (struct list_head *, struct list_head *, struct list_head *)' static inline
FunctionDecl 0x1962050 <line:259:1, line:271:1> list_cut_position 'void (struct list_head *, struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x1962108 <col:6> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1962260 <col:6> 'int (const struct list_head *)' Function 0x1961170 'list_is_singular' 'int (const struct list_head *)'
DeclRefExpr 0x1962628 <col:3> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x19626d8 <col:3> 'void (struct list_head *, struct list_head *, struct list_head *)' Function 0x19616a0 '__list_cut_position' 'void (struct list_head *, struct list_head *, struct list_head *)'
FunctionDecl 0x1962ad0 <line:273:1, line:285:1> __list_splice 'void (const struct list_head *, struct list_head *, struct list_head *)' static inline
FunctionDecl 0x1963380 <line:292:1, line:297:1> list_splice 'void (const struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x1963430 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1963500 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
FunctionDecl 0x19638a0 <line:304:1, line:309:1> list_splice_tail 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x1963950 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1963a38 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
FunctionDecl 0x1963d90 <line:318:1, line:325:1> list_splice_init 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x1963e40 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1963f28 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x19640c8 <col:3> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x1964390 <line:335:1, line:342:1> list_splice_tail_init 'void (struct list_head *, struct list_head *)' static inline
DeclRefExpr 0x1964440 <col:7> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1964528 <col:3> 'void (const struct list_head *, struct list_head *, struct list_head *)' Function 0x1962ad0 '__list_splice' 'void (const struct list_head *, struct list_head *, struct list_head *)'
DeclRefExpr 0x19646c8 <col:3> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x1964d00 <line:597:1, line:601:1> INIT_HLIST_NODE 'void (struct hlist_node *)' static inline
FunctionDecl 0x19651a0 <../include/linux/list.h:603:1, line:606:1> hlist_unhashed 'int (const struct hlist_node *)' static inline
FunctionDecl 0x196d090 <line:608:1, line:611:1> hlist_empty 'int (const struct hlist_head *)' static inline
FunctionDecl 0x196d2d0 <line:613:1, line:620:1> __hlist_del 'void (struct hlist_node *)' static inline
FunctionDecl 0x196d8b0 <line:622:1, line:627:1> hlist_del 'void (struct hlist_node *)' static inline
DeclRefExpr 0x196d958 <col:2> 'void (struct hlist_node *)' Function 0x196d2d0 '__hlist_del' 'void (struct hlist_node *)'
FunctionDecl 0x196de60 <../include/linux/list.h:629:1, line:635:1> hlist_del_init 'void (struct hlist_node *)' static inline
DeclRefExpr 0x196df08 <col:7> 'int (const struct hlist_node *)' Function 0x19651a0 'hlist_unhashed' 'int (const struct hlist_node *)'
DeclRefExpr 0x196e050 <col:3> 'void (struct hlist_node *)' Function 0x196d2d0 '__hlist_del' 'void (struct hlist_node *)'
DeclRefExpr 0x196e100 <col:3> 'void (struct hlist_node *)' Function 0x1964d00 'INIT_HLIST_NODE' 'void (struct hlist_node *)'
FunctionDecl 0x196e440 <line:637:1, line:645:1> hlist_add_head 'void (struct hlist_node *, struct hlist_head *)' static inline
FunctionDecl 0x196ec80 <line:648:1, line:655:1> hlist_add_before 'void (struct hlist_node *, struct hlist_node *)' static inline
FunctionDecl 0x196f320 <line:657:1, line:666:1> hlist_add_after 'void (struct hlist_node *, struct hlist_node *)' static inline
FunctionDecl 0x196fa00 <line:669:1, line:672:1> hlist_add_fake 'void (struct hlist_node *)' static inline
FunctionDecl 0x196fe50 <line:678:1, line:685:1> hlist_move_list 'void (struct hlist_head *, struct hlist_head *)' static inline
FunctionDecl 0x19709e0 <line:105:1, line:109:1> report_bug 'enum bug_trap_type (unsigned long, struct pt_regs *)' static inline
FunctionDecl 0x1981750 <line:51:1, col:61> do_no_restart_syscall 'long (struct restart_block *)' extern
FunctionDecl 0x1981890 <../include/linux/bottom_half.h:4:1, col:34> local_bh_disable 'void (void)' extern
FunctionDecl 0x19819c0 <line:5:1, col:34> _local_bh_enable 'void (void)' extern
FunctionDecl 0x1981af0 <line:6:1, col:33> local_bh_enable 'void (void)' extern
FunctionDecl 0x1981c60 <line:7:1, col:48> local_bh_enable_ip 'void (unsigned long)' extern
FunctionDecl 0x1982260 <line:370:1, line:372:1> lockdep_off 'void (void)' static inline
FunctionDecl 0x19823b0 <line:374:1, line:376:1> lockdep_on 'void (void)' static inline
FunctionDecl 0x198aa60 <line:465:1, line:467:1> print_irqtrace_events 'void (struct task_struct *)' static inline
FunctionDecl 0x198b4b0 <../include/linux/spinlock.h:145:1, line:149:1> do_raw_spin_lock 'void (raw_spinlock_t *)' static inline
DeclRefExpr 0x198b670 <col:37> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x198b5d0 <<invalid sloc>> barrier 'int ()'
FunctionDecl 0x19984a0 <../include/linux/spinlock.h:151:1, line:156:1> do_raw_spin_lock_flags 'void (raw_spinlock_t *, unsigned long *)' static inline
DeclRefExpr 0x19985a8 <col:49> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19988d0 <../include/linux/spinlock.h:158:1, line:161:1> do_raw_spin_trylock 'int (raw_spinlock_t *)' static inline
DeclRefExpr 0x1998978 <col:37> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1998c60 <../include/linux/spinlock.h:163:1, line:167:1> do_raw_spin_unlock 'void (raw_spinlock_t *)' static inline
DeclRefExpr 0x1998d08 <col:38> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1999130 <../include/linux/spinlock.h:280:1, line:283:1> spinlock_check 'raw_spinlock_t *(spinlock_t *)' static inline
FunctionDecl 0x19a8540 <line:291:1, line:294:1> spin_lock 'void (spinlock_t *)' static inline
DeclRefExpr 0x19a85e8 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19a8930 <../include/linux/spinlock.h:296:1, line:299:1> spin_lock_bh 'void (spinlock_t *)' static inline
DeclRefExpr 0x19a89d8 <col:8> 'void (void)' Function 0x1981890 'local_bh_disable' 'void (void)'
DeclRefExpr 0x19a8a40 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19a8e80 <../include/linux/spinlock.h:301:1, line:304:1> spin_trylock 'int (spinlock_t *)' static inline
DeclRefExpr 0x19a8f28 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19a9320 <../include/linux/spinlock.h:316:1, line:319:1> spin_lock_irq 'void (spinlock_t *)' static inline
DeclRefExpr 0x19a9490 <col:34> 'int ()' Function 0x19a93f0 'arch_local_irq_disable' 'int ()'
DeclRefExpr 0x19aaec8 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19a93f0 <<invalid sloc>> arch_local_irq_disable 'int ()'
FunctionDecl 0x19ab280 <../include/linux/spinlock.h:331:1, line:334:1> spin_unlock 'void (spinlock_t *)' static inline
DeclRefExpr 0x19ab328 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19ab670 <../include/linux/spinlock.h:336:1, line:339:1> spin_unlock_bh 'void (spinlock_t *)' static inline
DeclRefExpr 0x19ab718 <col:38> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19ab780 <col:37> 'void (void)' Function 0x1981af0 'local_bh_enable' 'void (void)'
FunctionDecl 0x19abad0 <../include/linux/spinlock.h:341:1, line:344:1> spin_unlock_irq 'void (spinlock_t *)' static inline
DeclRefExpr 0x19abc40 <col:33> 'int ()' Function 0x19abba0 'arch_local_irq_enable' 'int ()'
DeclRefExpr 0x19abd10 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19abba0 <<invalid sloc>> arch_local_irq_enable 'int ()'
FunctionDecl 0x19ac6f0 <../include/linux/spinlock.h:346:1, line:349:1> spin_unlock_irqrestore 'void (spinlock_t *, unsigned long)' static inline
DeclRefExpr 0x19ac8e0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19acad0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19acd00 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
DeclRefExpr 0x19ace88 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19ac840 <<invalid sloc>> typeof 'int ()'
FunctionDecl 0x19acc60 <<invalid sloc>> arch_local_irq_restore 'int ()'
FunctionDecl 0x19ad2b0 <line:351:1, line:354:1> spin_trylock_bh 'int (spinlock_t *)' static inline
DeclRefExpr 0x19ae7e0 <col:8> 'void (void)' Function 0x1981890 'local_bh_disable' 'void (void)'
DeclRefExpr 0x19ae848 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x19aecb0 <../include/linux/spinlock.h:356:1, line:359:1> spin_trylock_irq 'int (spinlock_t *)' static inline
DeclRefExpr 0x19aed58 <col:34> 'int ()' Function 0x19a93f0 'arch_local_irq_disable' 'int ()'
DeclRefExpr 0x19aee28 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19af168 <col:33> 'int ()' Function 0x19abba0 'arch_local_irq_enable' 'int ()'
FunctionDecl 0x19af3f0 <line:366:1, line:369:1> spin_unlock_wait 'void (spinlock_t *)' static inline
DeclRefExpr 0x19af560 <col:8> 'int ()' Function 0x19af4c0 'cpu_relax' 'int ()'
FunctionDecl 0x19af4c0 <<invalid sloc>> cpu_relax 'int ()'
FunctionDecl 0x19af930 <../include/linux/spinlock.h:371:1, line:374:1> spin_is_locked 'int (spinlock_t *)' static inline
FunctionDecl 0x19afce0 <../include/linux/spinlock.h:376:1, line:379:1> spin_is_contended 'int (spinlock_t *)' static inline
FunctionDecl 0x19b00b0 <../include/linux/spinlock.h:381:1, line:384:1> spin_can_lock 'int (spinlock_t *)' static inline
FunctionDecl 0x19b06e0 <../include/linux/atomic.h:15:1, line:18:1> atomic_add_unless 'int (atomic_t *, int, int)' static inline
DeclRefExpr 0x19b17b0 <col:9> 'int ()' Function 0x19b1710 '__atomic_add_unless' 'int ()'
FunctionDecl 0x19b1710 <<invalid sloc>> __atomic_add_unless 'int ()'
FunctionDecl 0x19b1b90 <line:44:1, line:60:1> atomic_inc_not_zero_hint 'int (atomic_t *, int)' static inline
DeclRefExpr 0x19b1de8 <col:33> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x19b20a0 <col:9> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
FunctionDecl 0x19b2000 <<invalid sloc>> atomic_cmpxchg 'int ()'
FunctionDecl 0x19b2620 <line:64:1, line:73:1> atomic_inc_unless_negative 'int (atomic_t *)' static inline
DeclRefExpr 0x19b3b78 <col:8> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b3df0 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
FunctionDecl 0x19b3d50 <<invalid sloc>> likely 'int ()'
FunctionDecl 0x19b40e0 <line:77:1, line:86:1> atomic_dec_unless_positive 'int (atomic_t *)' static inline
DeclRefExpr 0x19b4448 <col:8> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b45f8 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
FunctionDecl 0x19b4960 <line:97:1, line:111:1> atomic_dec_if_positive 'int (atomic_t *)' static inline
DeclRefExpr 0x19b4c80 <col:6> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19b4ef0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x19b5050 <col:9> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
DeclRefExpr 0x19b51d8 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
FunctionDecl 0x19b4be0 <<invalid sloc>> atomic_read 'int ()'
FunctionDecl 0x19b4e50 <<invalid sloc>> unlikely 'int ()'
FunctionDecl 0x19b5670 <line:115:1, line:124:1> atomic_or 'void (int, atomic_t *)' static inline
DeclRefExpr 0x19b5848 <col:9> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19b5a60 <col:11> 'int ()' Function 0x19b2000 'atomic_cmpxchg' 'int ()'
FunctionDecl 0x19b5e20 <line:144:1, line:149:1> atomic_long_read 'long (atomic_long_t *)' static inline
DeclRefExpr 0x19b5fc8 <col:15> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x19b6290 <line:151:1, line:156:1> atomic_long_set 'void (atomic_long_t *, long)' static inline
DeclRefExpr 0x19b6500 <col:2> 'int ()' Function 0x19b6460 'atomic_set' 'int ()'
FunctionDecl 0x19b6460 <<invalid sloc>> atomic_set 'int ()'
FunctionDecl 0x19b6730 <line:158:1, line:163:1> atomic_long_inc 'void (atomic_long_t *)' static inline
DeclRefExpr 0x19b7fd0 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x19b7f30 <<invalid sloc>> atomic_inc 'int ()'
FunctionDecl 0x19b8140 <line:165:1, line:170:1> atomic_long_dec 'void (atomic_long_t *)' static inline
DeclRefExpr 0x19b83b0 <col:2> 'int ()' Function 0x19b8310 'atomic_dec' 'int ()'
FunctionDecl 0x19b8310 <<invalid sloc>> atomic_dec 'int ()'
FunctionDecl 0x19b8620 <line:172:1, line:177:1> atomic_long_add 'void (long, atomic_long_t *)' static inline
DeclRefExpr 0x19b8890 <col:2> 'int ()' Function 0x19b87f0 'atomic_add' 'int ()'
FunctionDecl 0x19b87f0 <<invalid sloc>> atomic_add 'int ()'
FunctionDecl 0x19b8ac0 <line:179:1, line:184:1> atomic_long_sub 'void (long, atomic_long_t *)' static inline
DeclRefExpr 0x19b8d30 <col:2> 'int ()' Function 0x19b8c90 'atomic_sub' 'int ()'
FunctionDecl 0x19b8c90 <<invalid sloc>> atomic_sub 'int ()'
FunctionDecl 0x19b9840 <line:186:1, line:191:1> atomic_long_sub_and_test 'int (long, atomic_long_t *)' static inline
DeclRefExpr 0x19b9ab0 <col:9> 'int ()' Function 0x19b9a10 'atomic_sub_and_test' 'int ()'
FunctionDecl 0x19b9a10 <<invalid sloc>> atomic_sub_and_test 'int ()'
FunctionDecl 0x19b9cc0 <line:193:1, line:198:1> atomic_long_dec_and_test 'int (atomic_long_t *)' static inline
DeclRefExpr 0x19b9f30 <col:9> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
FunctionDecl 0x19b9e90 <<invalid sloc>> atomic_dec_and_test 'int ()'
FunctionDecl 0x19ba0c0 <line:200:1, line:205:1> atomic_long_inc_and_test 'int (atomic_long_t *)' static inline
DeclRefExpr 0x19ba330 <col:9> 'int ()' Function 0x19ba290 'atomic_inc_and_test' 'int ()'
FunctionDecl 0x19ba290 <<invalid sloc>> atomic_inc_and_test 'int ()'
FunctionDecl 0x19ba540 <line:207:1, line:212:1> atomic_long_add_negative 'int (long, atomic_long_t *)' static inline
DeclRefExpr 0x19ba7e0 <col:9> 'int ()' Function 0x19ba740 'atomic_add_negative' 'int ()'
FunctionDecl 0x19ba740 <<invalid sloc>> atomic_add_negative 'int ()'
FunctionDecl 0x19baab0 <line:214:1, line:219:1> atomic_long_add_return 'long (long, atomic_long_t *)' static inline
DeclRefExpr 0x19bad20 <col:15> 'int ()' Function 0x19bac80 'atomic_add_return' 'int ()'
FunctionDecl 0x19bac80 <<invalid sloc>> atomic_add_return 'int ()'
FunctionDecl 0x19bafb0 <line:221:1, line:226:1> atomic_long_sub_return 'long (long, atomic_long_t *)' static inline
DeclRefExpr 0x19bb220 <col:15> 'int ()' Function 0x19bb180 'atomic_sub_return' 'int ()'
FunctionDecl 0x19bb180 <<invalid sloc>> atomic_sub_return 'int ()'
FunctionDecl 0x19bb430 <line:228:1, line:233:1> atomic_long_inc_return 'long (atomic_long_t *)' static inline
DeclRefExpr 0x19bb6a0 <col:15> 'int ()' Function 0x19bb600 'atomic_inc_return' 'int ()'
FunctionDecl 0x19bb600 <<invalid sloc>> atomic_inc_return 'int ()'
FunctionDecl 0x19bb890 <line:235:1, line:240:1> atomic_long_dec_return 'long (atomic_long_t *)' static inline
DeclRefExpr 0x19bbb00 <col:15> 'int ()' Function 0x19bba60 'atomic_dec_return' 'int ()'
FunctionDecl 0x19bba60 <<invalid sloc>> atomic_dec_return 'int ()'
FunctionDecl 0x19bbe50 <line:242:1, line:247:1> atomic_long_add_unless 'long (atomic_long_t *, long, long)' static inline
DeclRefExpr 0x19bc008 <col:15> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
FunctionDecl 0x19bc3b0 <../include/linux/spinlock.h:401:1, col:67> _atomic_dec_and_lock 'int (atomic_t *, spinlock_t *)' extern
FunctionDecl 0x19c03d0 <line:14:1, col:82> default_wake_function 'int (wait_queue_t *, unsigned int, int, void *)'
FunctionDecl 0x19c1bf0 <line:68:1, col:98> __init_waitqueue_head 'void (wait_queue_head_t *, const char *, struct lock_class_key *)' extern
FunctionDecl 0x19c1e50 <line:86:1, line:91:1> init_waitqueue_entry 'void (wait_queue_t *, struct task_struct *)' static inline
DeclRefExpr 0x19c2130 <col:13> 'int (wait_queue_t *, unsigned int, int, void *)' Function 0x19c03d0 'default_wake_function' 'int (wait_queue_t *, unsigned int, int, void *)'
FunctionDecl 0x19c2390 <line:93:1, line:99:1> init_waitqueue_func_entry 'void (wait_queue_t *, wait_queue_func_t)' static inline
FunctionDecl 0x19c2840 <line:101:1, line:104:1> waitqueue_active 'int (wait_queue_head_t *)' static inline
DeclRefExpr 0x19c28e8 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x19c33b0 <line:106:1, col:68> add_wait_queue 'void (wait_queue_head_t *, wait_queue_t *)' extern
FunctionDecl 0x19c3570 <line:107:1, col:78> add_wait_queue_exclusive 'void (wait_queue_head_t *, wait_queue_t *)' extern
FunctionDecl 0x19c3730 <line:108:1, col:71> remove_wait_queue 'void (wait_queue_head_t *, wait_queue_t *)' extern
FunctionDecl 0x19c38f0 <line:110:1, line:113:1> __add_wait_queue 'void (wait_queue_head_t *, wait_queue_t *)' static inline
DeclRefExpr 0x19c39a0 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c460 'list_add' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x19c3c70 <line:118:1, line:123:1> __add_wait_queue_exclusive 'void (wait_queue_head_t *, wait_queue_t *)' static inline
DeclRefExpr 0x19c3e00 <col:2> 'void (wait_queue_head_t *, wait_queue_t *)' Function 0x19c38f0 '__add_wait_queue' 'void (wait_queue_head_t *, wait_queue_t *)'
FunctionDecl 0x19c4090 <line:125:1, line:129:1> __add_wait_queue_tail 'void (wait_queue_head_t *, wait_queue_t *)' static inline
DeclRefExpr 0x19c4140 <col:2> 'void (struct list_head *, struct list_head *)' Function 0x195c880 'list_add_tail' 'void (struct list_head *, struct list_head *)'
FunctionDecl 0x19c4430 <line:131:1, line:136:1> __add_wait_queue_tail_exclusive 'void (wait_queue_head_t *, wait_queue_t *)' static inline
DeclRefExpr 0x19c45c0 <col:2> 'void (wait_queue_head_t *, wait_queue_t *)' Function 0x19c4090 '__add_wait_queue_tail' 'void (wait_queue_head_t *, wait_queue_t *)'
FunctionDecl 0x19c47f0 <line:138:1, line:142:1> __remove_wait_queue 'void (wait_queue_head_t *, wait_queue_t *)' static inline
DeclRefExpr 0x19c48a0 <col:2> 'void (struct list_head *)' Function 0x18772b0 'list_del' 'void (struct list_head *)'
FunctionDecl 0x19c4c60 <line:144:1, col:74> __wake_up 'void (wait_queue_head_t *, unsigned int, int, void *)'
FunctionDecl 0x19c4f40 <line:145:1, col:77> __wake_up_locked_key 'void (wait_queue_head_t *, unsigned int, void *)'
FunctionDecl 0x19c5250 <line:146:1, col:83> __wake_up_sync_key 'void (wait_queue_head_t *, unsigned int, int, void *)'
FunctionDecl 0x19c5530 <line:147:1, col:70> __wake_up_locked 'void (wait_queue_head_t *, unsigned int, int)'
FunctionDecl 0x19c5770 <line:148:1, col:68> __wake_up_sync 'void (wait_queue_head_t *, unsigned int, int)'
FunctionDecl 0x19c5a50 <line:149:1, col:52> __wake_up_bit 'void (wait_queue_head_t *, void *, int)'
FunctionDecl 0x19c5f70 <line:150:1, col:90> __wait_on_bit 'int (wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned int)'
FunctionDecl 0x19c6300 <line:151:1, col:95> __wait_on_bit_lock 'int (wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned int)'
FunctionDecl 0x19c6510 <line:152:1, col:29> wake_up_bit 'void (void *, int)'
FunctionDecl 0x19c6690 <line:153:1, col:33> wake_up_atomic_t 'void (atomic_t *)'
FunctionDecl 0x19c6a70 <line:154:1, col:67> out_of_line_wait_on_bit 'int (void *, int, int (*)(void *), unsigned int)'
FunctionDecl 0x19c6dc0 <line:155:1, col:72> out_of_line_wait_on_bit_lock 'int (void *, int, int (*)(void *), unsigned int)'
FunctionDecl 0x19c7270 <line:156:1, col:75> out_of_line_wait_on_atomic_t 'int (atomic_t *, int (*)(atomic_t *), unsigned int)'
FunctionDecl 0x19c74c0 <line:157:1, col:45> bit_waitqueue 'wait_queue_head_t *(void *, int)'
FunctionDecl 0x19c79b0 <line:812:1, col:42> sleep_on 'void (wait_queue_head_t *)' extern
FunctionDecl 0x19c7bf0 <line:813:1, col:71> sleep_on_timeout 'long (wait_queue_head_t *, long)' extern
FunctionDecl 0x19c7d30 <line:814:1, col:56> interruptible_sleep_on 'void (wait_queue_head_t *)' extern
FunctionDecl 0x19c7ef0 <line:815:1, col:85> interruptible_sleep_on_timeout 'long (wait_queue_head_t *, long)' extern
FunctionDecl 0x19c81c0 <line:820:1, col:73> prepare_to_wait 'void (wait_queue_head_t *, wait_queue_t *, int)'
FunctionDecl 0x19d8dc0 <line:821:1, col:83> prepare_to_wait_exclusive 'void (wait_queue_head_t *, wait_queue_t *, int)'
FunctionDecl 0x19d90a0 <line:822:1, col:79> prepare_to_wait_event 'long (wait_queue_head_t *, wait_queue_t *, int)'
FunctionDecl 0x19d9270 <line:823:1, col:58> finish_wait 'void (wait_queue_head_t *, wait_queue_t *)'
FunctionDecl 0x19d95c0 <line:824:1, col:97> abort_exclusive_wait 'void (wait_queue_head_t *, wait_queue_t *, unsigned int, void *)'
FunctionDecl 0x19d9880 <line:825:1, col:84> autoremove_wake_function 'int (wait_queue_t *, unsigned int, int, void *)'
FunctionDecl 0x19d9b40 <line:826:1, col:77> wake_bit_function 'int (wait_queue_t *, unsigned int, int, void *)'
FunctionDecl 0x19dafa0 <line:870:1, line:876:1> wait_on_bit 'int (void *, int, int (*)(void *), unsigned int)' static inline
DeclRefExpr 0x19db120 <col:7> 'int ()' Function 0x19db080 'test_bit' 'int ()'
DeclRefExpr 0x19db2a8 <col:9> 'int (void *, int, int (*)(void *), unsigned int)' Function 0x19c6a70 'out_of_line_wait_on_bit' 'int (void *, int, int (*)(void *), unsigned int)'
FunctionDecl 0x19db080 <<invalid sloc>> test_bit 'int ()'
FunctionDecl 0x19db790 <line:894:1, line:900:1> wait_on_bit_lock 'int (void *, int, int (*)(void *), unsigned int)' static inline
DeclRefExpr 0x19db910 <col:7> 'int ()' Function 0x19db870 'test_and_set_bit' 'int ()'
DeclRefExpr 0x19dba98 <col:9> 'int (void *, int, int (*)(void *), unsigned int)' Function 0x19c6dc0 'out_of_line_wait_on_bit_lock' 'int (void *, int, int (*)(void *), unsigned int)'
FunctionDecl 0x19db870 <<invalid sloc>> test_and_set_bit 'int ()'
FunctionDecl 0x19dbef0 <line:912:1, line:918:1> wait_on_atomic_t 'int (atomic_t *, int (*)(atomic_t *), unsigned int)' static inline
DeclRefExpr 0x19dbfa8 <col:6> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
DeclRefExpr 0x19dc110 <col:9> 'int (atomic_t *, int (*)(atomic_t *), unsigned int)' Function 0x19c7270 'out_of_line_wait_on_atomic_t' 'int (atomic_t *, int (*)(atomic_t *), unsigned int)'
FunctionDecl 0x19dc750 <line:53:1, line:61:1> __seqcount_init 'void (seqcount_t *, const char *, struct lock_class_key *)' static inline
FunctionDecl 0x19e3140 <line:106:1, line:117:1> __read_seqcount_begin 'unsigned int (const seqcount_t *)' static inline
DeclRefExpr 0x19e33e8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x19e34f8 <col:3> 'int ()' Function 0x19af4c0 'cpu_relax' 'int ()'
FunctionDecl 0x19e3720 <line:128:1, line:133:1> raw_read_seqcount_begin 'unsigned int (const seqcount_t *)' static inline
DeclRefExpr 0x19e3838 <col:17> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x19e3a20 <col:2> 'int ()' Function 0x19e3980 'smp_rmb' 'int ()'
FunctionDecl 0x19e3980 <<invalid sloc>> smp_rmb 'int ()'
FunctionDecl 0x19e3be0 <line:144:1, line:148:1> read_seqcount_begin 'unsigned int (const seqcount_t *)' static inline
DeclRefExpr 0x19e3c98 <col:9> 'unsigned int (const seqcount_t *)' Function 0x19e3720 'raw_read_seqcount_begin' 'unsigned int (const seqcount_t *)'
FunctionDecl 0x19e3e50 <line:164:1, line:171:1> raw_seqcount_begin 'unsigned int (const seqcount_t *)' static inline
DeclRefExpr 0x19e4078 <col:2> 'int ()' Function 0x19e3980 'smp_rmb' 'int ()'
FunctionDecl 0x19e53f0 <line:187:1, line:190:1> __read_seqcount_retry 'int (const seqcount_t *, unsigned int)' static inline
DeclRefExpr 0x19e54a0 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
FunctionDecl 0x19e5780 <line:202:1, line:206:1> read_seqcount_retry 'int (const seqcount_t *, unsigned int)' static inline
DeclRefExpr 0x19e5830 <col:2> 'int ()' Function 0x19e3980 'smp_rmb' 'int ()'
DeclRefExpr 0x19e5898 <col:9> 'int (const seqcount_t *, unsigned int)' Function 0x19e53f0 '__read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
FunctionDecl 0x19e5b40 <line:210:1, line:214:1> raw_write_seqcount_begin 'void (seqcount_t *)' static inline
DeclRefExpr 0x19e5d40 <col:2> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
FunctionDecl 0x19e5ca0 <<invalid sloc>> smp_wmb 'int ()'
FunctionDecl 0x19e5e60 <line:216:1, line:220:1> raw_write_seqcount_end 'void (seqcount_t *)' static inline
DeclRefExpr 0x19e5f08 <col:2> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
FunctionDecl 0x19e61e0 <line:226:1, line:230:1> write_seqcount_begin_nested 'void (seqcount_t *, int)' static inline
DeclRefExpr 0x19e6290 <col:2> 'void (seqcount_t *)' Function 0x19e5b40 'raw_write_seqcount_begin' 'void (seqcount_t *)'
FunctionDecl 0x19e64b0 <../include/linux/seqlock.h:232:1, line:235:1> write_seqcount_begin 'void (seqcount_t *)' static inline
DeclRefExpr 0x19e6558 <col:2> 'void (seqcount_t *, int)' Function 0x19e61e0 'write_seqcount_begin_nested' 'void (seqcount_t *, int)'
FunctionDecl 0x19e6740 <line:237:1, line:241:1> write_seqcount_end 'void (seqcount_t *)' static inline
DeclRefExpr 0x19e6848 <col:2> 'void (seqcount_t *)' Function 0x19e5e60 'raw_write_seqcount_end' 'void (seqcount_t *)'
FunctionDecl 0x19e69e0 <line:250:1, line:254:1> write_seqcount_barrier 'void (seqcount_t *)' static inline
DeclRefExpr 0x19e6a88 <col:2> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
FunctionDecl 0x19e6ff0 <line:283:1, line:286:1> read_seqbegin 'unsigned int (const seqlock_t *)' static inline
DeclRefExpr 0x19e7098 <col:9> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
FunctionDecl 0x19edc10 <line:288:1, line:291:1> read_seqretry 'unsigned int (const seqlock_t *, unsigned int)' static inline
DeclRefExpr 0x19edcc0 <col:9> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
FunctionDecl 0x19edfd0 <line:298:1, line:302:1> write_seqlock 'void (seqlock_t *)' static inline
DeclRefExpr 0x19ee078 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x19ee1d0 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
FunctionDecl 0x19ee3c0 <line:304:1, line:308:1> write_sequnlock 'void (seqlock_t *)' static inline
DeclRefExpr 0x19ee468 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19ee568 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x19ee720 <line:310:1, line:314:1> write_seqlock_bh 'void (seqlock_t *)' static inline
DeclRefExpr 0x19ee7c8 <col:2> 'void (spinlock_t *)' Function 0x19a8930 'spin_lock_bh' 'void (spinlock_t *)'
DeclRefExpr 0x19ee8c8 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
FunctionDecl 0x19eeab0 <line:316:1, line:320:1> write_sequnlock_bh 'void (seqlock_t *)' static inline
DeclRefExpr 0x19eeb58 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19eec58 <col:2> 'void (spinlock_t *)' Function 0x19ab670 'spin_unlock_bh' 'void (spinlock_t *)'
FunctionDecl 0x19eee10 <line:322:1, line:326:1> write_seqlock_irq 'void (seqlock_t *)' static inline
DeclRefExpr 0x19eeeb8 <col:2> 'void (spinlock_t *)' Function 0x19a9320 'spin_lock_irq' 'void (spinlock_t *)'
DeclRefExpr 0x19eefb8 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
FunctionDecl 0x19ef170 <line:328:1, line:332:1> write_sequnlock_irq 'void (seqlock_t *)' static inline
DeclRefExpr 0x19ef218 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19ef318 <col:2> 'void (spinlock_t *)' Function 0x19abad0 'spin_unlock_irq' 'void (spinlock_t *)'
FunctionDecl 0x19ef550 <line:334:1, line:341:1> __write_seqlock_irqsave 'unsigned long (seqlock_t *)' static inline
DeclRefExpr 0x19ef700 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19ef8f0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19efeb0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x19f0030 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19f00f0 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x19f0498 <col:2> 'void (seqcount_t *)' Function 0x19e64b0 'write_seqcount_begin' 'void (seqcount_t *)'
FunctionDecl 0x19efe10 <<invalid sloc>> arch_local_irq_save 'int ()'
FunctionDecl 0x19f07c0 <line:346:1, line:351:1> write_sequnlock_irqrestore 'void (seqlock_t *, unsigned long)' static inline
DeclRefExpr 0x19f0870 <col:2> 'void (seqcount_t *)' Function 0x19e6740 'write_seqcount_end' 'void (seqcount_t *)'
DeclRefExpr 0x19f0970 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
FunctionDecl 0x19f0bd0 <line:358:1, line:361:1> read_seqlock_excl 'void (seqlock_t *)' static inline
DeclRefExpr 0x19f0c78 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
FunctionDecl 0x19f3020 <line:363:1, line:366:1> read_sequnlock_excl 'void (seqlock_t *)' static inline
DeclRefExpr 0x19f30c8 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x19f33b0 <line:378:1, line:384:1> read_seqbegin_or_lock 'void (seqlock_t *, int *)' static inline
DeclRefExpr 0x19f35c0 <col:10> 'unsigned int (const seqlock_t *)' Function 0x19e6ff0 'read_seqbegin' 'unsigned int (const seqlock_t *)'
DeclRefExpr 0x19f3720 <col:3> 'void (seqlock_t *)' Function 0x19f0bd0 'read_seqlock_excl' 'void (seqlock_t *)'
FunctionDecl 0x19f3a10 <line:386:1, line:389:1> need_seqretry 'int (seqlock_t *, int)' static inline
DeclRefExpr 0x19f3b88 <col:23> 'unsigned int (const seqlock_t *, unsigned int)' Function 0x19edc10 'read_seqretry' 'unsigned int (const seqlock_t *, unsigned int)'
FunctionDecl 0x19f3f40 <line:391:1, line:395:1> done_seqretry 'void (seqlock_t *, int)' static inline
DeclRefExpr 0x19f4078 <col:3> 'void (seqlock_t *)' Function 0x19f3020 'read_sequnlock_excl' 'void (seqlock_t *)'
FunctionDecl 0x19f4210 <line:397:1, line:400:1> read_seqlock_excl_bh 'void (seqlock_t *)' static inline
DeclRefExpr 0x19f42b8 <col:2> 'void (spinlock_t *)' Function 0x19a8930 'spin_lock_bh' 'void (spinlock_t *)'
FunctionDecl 0x19f4470 <line:402:1, line:405:1> read_sequnlock_excl_bh 'void (seqlock_t *)' static inline
DeclRefExpr 0x19f4518 <col:2> 'void (spinlock_t *)' Function 0x19ab670 'spin_unlock_bh' 'void (spinlock_t *)'
FunctionDecl 0x19f46d0 <line:407:1, line:410:1> read_seqlock_excl_irq 'void (seqlock_t *)' static inline
DeclRefExpr 0x19f4778 <col:2> 'void (spinlock_t *)' Function 0x19a9320 'spin_lock_irq' 'void (spinlock_t *)'
FunctionDecl 0x19f4930 <line:412:1, line:415:1> read_sequnlock_excl_irq 'void (seqlock_t *)' static inline
DeclRefExpr 0x19f49d8 <col:2> 'void (spinlock_t *)' Function 0x19abad0 'spin_unlock_irq' 'void (spinlock_t *)'
FunctionDecl 0x19f4b90 <line:417:1, line:423:1> __read_seqlock_excl_irqsave 'unsigned long (seqlock_t *)' static inline
DeclRefExpr 0x19f4d40 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19f4f90 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x19f5120 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x19f52a0 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x19f5360 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
FunctionDecl 0x19f5850 <line:428:1, line:432:1> read_sequnlock_excl_irqrestore 'void (seqlock_t *, unsigned long)' static inline
DeclRefExpr 0x19f5900 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
FunctionDecl 0x19f5bf0 <../include/linux/bitmap.h:91:1, col:64> __bitmap_empty 'int (const unsigned long *, int)' extern
FunctionDecl 0x19f5dc0 <line:92:1, col:63> __bitmap_full 'int (const unsigned long *, int)' extern
FunctionDecl 0x19f9e30 <line:93:1, line:94:56> __bitmap_equal 'int (const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fa0c0 <line:95:1, line:96:12> __bitmap_complement 'void (unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fa3d0 <line:97:1, line:98:70> __bitmap_shift_right 'void (unsigned long *, const unsigned long *, int, int)' extern
FunctionDecl 0x19fa6a0 <line:99:1, line:100:70> __bitmap_shift_left 'void (unsigned long *, const unsigned long *, int, int)' extern
FunctionDecl 0x19fa9c0 <line:101:1, line:102:42> __bitmap_and 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fad30 <line:103:1, line:104:42> __bitmap_or 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fb000 <line:105:1, line:106:42> __bitmap_xor 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fb2d0 <line:107:1, line:108:42> __bitmap_andnot 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fb520 <line:109:1, line:110:42> __bitmap_intersects 'int (const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fb760 <line:111:1, line:112:42> __bitmap_subset 'int (const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fb930 <line:113:1, col:65> __bitmap_weight 'int (const unsigned long *, int)' extern
FunctionDecl 0x19fbbc0 <line:115:1, col:58> bitmap_set 'void (unsigned long *, int, int)' extern
FunctionDecl 0x19fbe70 <line:116:1, col:63> bitmap_clear 'void (unsigned long *, int, int)' extern
FunctionDecl 0x19fc200 <line:117:1, line:121:31> bitmap_find_next_zero_area 'unsigned long (unsigned long *, unsigned long, unsigned long, unsigned int, unsigned long)' extern
FunctionDecl 0x19fc520 <line:123:1, line:124:39> bitmap_scnprintf 'int (char *, unsigned int, const unsigned long *, int)' extern
FunctionDecl 0x19fc8b0 <line:125:1, line:126:33> __bitmap_parse 'int (const char *, unsigned int, int, unsigned long *, int)' extern
FunctionDecl 0x19fcbd0 <line:127:1, line:128:33> bitmap_parse_user 'int (const char *, unsigned int, unsigned long *, int)' extern
FunctionDecl 0x19fce90 <line:129:1, line:130:39> bitmap_scnlistprintf 'int (char *, unsigned int, const unsigned long *, int)' extern
FunctionDecl 0x19fd120 <line:131:1, line:132:17> bitmap_parselist 'int (const char *, unsigned long *, int)' extern
FunctionDecl 0x19fd3e0 <line:133:1, line:134:33> bitmap_parselist_user 'int (const char *, unsigned int, unsigned long *, int)' extern
FunctionDecl 0x19fd780 <line:135:1, line:136:63> bitmap_remap 'void (unsigned long *, const unsigned long *, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fdaa0 <line:137:1, line:138:63> bitmap_bitremap 'int (int, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19fedc0 <line:139:1, line:140:40> bitmap_onto 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' extern
FunctionDecl 0x19ff090 <line:141:1, line:142:19> bitmap_fold 'void (unsigned long *, const unsigned long *, int, int)' extern
FunctionDecl 0x19ff330 <line:143:1, col:78> bitmap_find_free_region 'int (unsigned long *, int, int)' extern
FunctionDecl 0x19ff570 <line:144:1, col:76> bitmap_release_region 'void (unsigned long *, int, int)' extern
FunctionDecl 0x19ff7b0 <line:145:1, col:76> bitmap_allocate_region 'int (unsigned long *, int, int)' extern
FunctionDecl 0x19ffa40 <line:146:1, col:74> bitmap_copy_le 'void (void *, const unsigned long *, int)' extern
FunctionDecl 0x19ffcd0 <line:147:1, col:74> bitmap_ord_to_pos 'int (const unsigned long *, int, int)' extern
FunctionDecl 0x19ffee0 <line:159:1, line:167:1> bitmap_zero 'void (unsigned long *, int)' static inline
DeclRefExpr 0x19fff90 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a002f0 <col:13> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a00440 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
FunctionDecl 0x1a00250 <<invalid sloc>> BITS_TO_LONGS 'int ()'
FunctionDecl 0x1a00750 <line:169:1, line:177:1> bitmap_fill 'void (unsigned long *, int)' static inline
DeclRefExpr 0x1a00868 <col:18> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a00948 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a00ca0 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
FunctionDecl 0x1a01440 <line:179:1, line:188:1> bitmap_copy 'void (unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a014f8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a017e8 <col:13> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
DeclRefExpr 0x1a01938 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
FunctionDecl 0x1a01d70 <line:190:1, line:196:1> bitmap_and 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a01e30 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a02228 <col:9> 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fa9c0 '__bitmap_and' 'int (unsigned long *, const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a02630 <line:198:1, line:205:1> bitmap_or 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a026f0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a02a18 <col:3> 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fad30 '__bitmap_or' 'void (unsigned long *, const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a02e50 <line:207:1, line:214:1> bitmap_xor 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a02f10 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a03238 <col:3> 'void (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fb000 '__bitmap_xor' 'void (unsigned long *, const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a03620 <line:216:1, line:222:1> bitmap_andnot 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a036e0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a03b18 <col:9> 'int (unsigned long *, const unsigned long *, const unsigned long *, int)' Function 0x19fb2d0 '__bitmap_andnot' 'int (unsigned long *, const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a03e70 <line:224:1, line:231:1> bitmap_complement 'void (unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a03f28 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a04500 <col:3> 'void (unsigned long *, const unsigned long *, int)' Function 0x19fa0c0 '__bitmap_complement' 'void (unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a04840 <line:233:1, line:240:1> bitmap_equal 'int (const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a048f8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a04f58 <col:10> 'int (const unsigned long *, const unsigned long *, int)' Function 0x19f9e30 '__bitmap_equal' 'int (const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a052c0 <line:242:1, line:249:1> bitmap_intersects 'int (const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a05378 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a059e8 <col:10> 'int (const unsigned long *, const unsigned long *, int)' Function 0x19fb520 '__bitmap_intersects' 'int (const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a05d20 <line:251:1, line:258:1> bitmap_subset 'int (const unsigned long *, const unsigned long *, int)' static inline
DeclRefExpr 0x1a05dd8 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a06448 <col:10> 'int (const unsigned long *, const unsigned long *, int)' Function 0x19fb760 '__bitmap_subset' 'int (const unsigned long *, const unsigned long *, int)'
FunctionDecl 0x1a06710 <line:260:1, line:266:1> bitmap_empty 'int (const unsigned long *, int)' static inline
DeclRefExpr 0x1a067c0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a06d60 <col:10> 'int (const unsigned long *, int)' Function 0x19f5bf0 '__bitmap_empty' 'int (const unsigned long *, int)'
FunctionDecl 0x1a07010 <line:268:1, line:274:1> bitmap_full 'int (const unsigned long *, int)' static inline
DeclRefExpr 0x1a070c0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a07670 <col:10> 'int (const unsigned long *, int)' Function 0x19f5dc0 '__bitmap_full' 'int (const unsigned long *, int)'
FunctionDecl 0x1a078f0 <line:276:1, line:281:1> bitmap_weight 'int (const unsigned long *, int)' static inline
DeclRefExpr 0x1a079a0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a07b28 <col:10> 'unsigned long (unsigned long)' Function 0x185ca50 'hweight_long' 'unsigned long (unsigned long)'
DeclRefExpr 0x1a07fb8 <col:9> 'int (const unsigned long *, int)' Function 0x19fb930 '__bitmap_weight' 'int (const unsigned long *, int)'
FunctionDecl 0x1a08300 <line:283:1, line:290:1> bitmap_shift_right 'void (unsigned long *, const unsigned long *, int, int)' static inline
DeclRefExpr 0x1a083c0 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a086b0 <col:3> 'void (unsigned long *, const unsigned long *, int, int)' Function 0x19fa3d0 '__bitmap_shift_right' 'void (unsigned long *, const unsigned long *, int, int)'
FunctionDecl 0x1a08ac0 <line:292:1, line:299:1> bitmap_shift_left 'void (unsigned long *, const unsigned long *, int, int)' static inline
DeclRefExpr 0x1a08b80 <col:3> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1a091c8 <col:3> 'void (unsigned long *, const unsigned long *, int, int)' Function 0x19fa6a0 '__bitmap_shift_left' 'void (unsigned long *, const unsigned long *, int, int)'
FunctionDecl 0x1a095a0 <line:301:1, line:305:1> bitmap_parse 'int (const char *, unsigned int, unsigned long *, int)' static inline
DeclRefExpr 0x1a09660 <col:9> 'int (const char *, unsigned int, int, unsigned long *, int)' Function 0x19fc8b0 '__bitmap_parse' 'int (const char *, unsigned int, int, unsigned long *, int)'
FunctionDecl 0x1a09e00 <line:111:1, line:114:1> __node_set 'void (int, volatile nodemask_t *)' static inline
FunctionDecl 0x1a09f10 <<invalid sloc>> set_bit 'int ()'
FunctionDecl 0x1a0a170 <../include/linux/nodemask.h:117:1, line:120:1> __node_clear 'void (int, volatile nodemask_t *)' static inline
FunctionDecl 0x1a0a240 <<invalid sloc>> clear_bit 'int ()'
FunctionDecl 0x1a0a580 <line:123:1, line:126:1> __nodes_setall 'void (nodemask_t *, int)' static inline
FunctionDecl 0x1a0a7c0 <line:129:1, line:132:1> __nodes_clear 'void (nodemask_t *, int)' static inline
FunctionDecl 0x1a0aa80 <line:139:1, line:142:1> __node_test_and_set 'int (int, nodemask_t *)' static inline
FunctionDecl 0x1a0bc40 <line:146:1, line:150:1> __nodes_and 'void (nodemask_t *, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0bf80 <line:154:1, line:158:1> __nodes_or 'void (nodemask_t *, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0c2c0 <line:162:1, line:166:1> __nodes_xor 'void (nodemask_t *, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0c600 <line:170:1, line:174:1> __nodes_andnot 'void (nodemask_t *, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0c960 <line:178:1, line:182:1> __nodes_complement 'void (nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0ccc0 <line:186:1, line:190:1> __nodes_equal 'int (const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0cf80 <line:194:1, line:198:1> __nodes_intersects 'int (const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0d240 <line:202:1, line:206:1> __nodes_subset 'int (const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x1a0d510 <line:209:1, line:212:1> __nodes_empty 'int (const nodemask_t *, int)' static inline
FunctionDecl 0x1a0d750 <line:215:1, line:218:1> __nodes_full 'int (const nodemask_t *, int)' static inline
FunctionDecl 0x1a0d990 <line:221:1, line:224:1> __nodes_weight 'int (const nodemask_t *, int)' static inline
FunctionDecl 0x1a11310 <line:228:1, line:232:1> __nodes_shift_right 'void (nodemask_t *, const nodemask_t *, int, int)' static inline
FunctionDecl 0x1a11650 <line:236:1, line:240:1> __nodes_shift_left 'void (nodemask_t *, const nodemask_t *, int, int)' static inline
FunctionDecl 0x1a118a0 <line:246:1, line:249:1> __first_node 'int (const nodemask_t *)' static inline
FunctionDecl 0x1a11b10 <<invalid sloc>> find_first_bit 'int ()'
FunctionDecl 0x1a11fb0 <../include/linux/nodemask.h:252:1, line:255:1> __next_node 'int (int, const nodemask_t *)' static inline
FunctionDecl 0x1a12220 <<invalid sloc>> find_next_bit 'int ()'
FunctionDecl 0x1a12640 <../include/linux/nodemask.h:257:1, line:261:1> init_nodemask_of_node 'void (nodemask_t *, int)' static inline
DeclRefExpr 0x1a126f0 <col:26> 'void (nodemask_t *, int)' Function 0x1a0a7c0 '__nodes_clear' 'void (nodemask_t *, int)'
DeclRefExpr 0x1a128e8 <col:29> 'void (int, volatile nodemask_t *)' Function 0x1a09e00 '__node_set' 'void (int, volatile nodemask_t *)'
FunctionDecl 0x1a12b90 <line:275:1, line:279:1> __first_unset_node 'int (const nodemask_t *)' static inline
FunctionDecl 0x1a12e00 <<invalid sloc>> find_first_zero_bit 'int ()'
FunctionDecl 0x190d3a0 <../include/linux/nodemask.h:309:1, line:313:1> __nodemask_scnprintf 'int (char *, int, const nodemask_t *, int)' static inline
FunctionDecl 0x190d7d0 <line:317:1, line:321:1> __nodemask_parse_user 'int (const char *, int, nodemask_t *, int)' static inline
FunctionDecl 0x190db60 <line:325:1, line:329:1> __nodelist_scnprintf 'int (char *, int, const nodemask_t *, int)' static inline
FunctionDecl 0x190df10 <line:332:1, line:335:1> __nodelist_parse 'int (const char *, nodemask_t *, int)' static inline
FunctionDecl 0x190e310 <line:339:1, line:343:1> __node_remap 'int (int, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x190e7b0 <line:347:1, line:351:1> __nodes_remap 'void (nodemask_t *, const nodemask_t *, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x190eb00 <line:355:1, line:359:1> __nodes_onto 'void (nodemask_t *, const nodemask_t *, const nodemask_t *, int)' static inline
FunctionDecl 0x190ee40 <line:363:1, line:367:1> __nodes_fold 'void (nodemask_t *, const nodemask_t *, int, int)' static inline
FunctionDecl 0x1a22170 <line:452:1, line:455:1> node_state 'int (int, enum node_states)' static inline
FunctionDecl 0x1a22490 <line:457:1, line:459:1> node_set_state 'void (int, enum node_states)' static inline
FunctionDecl 0x1a22680 <line:461:1, line:463:1> node_clear_state 'void (int, enum node_states)' static inline
FunctionDecl 0x1a22870 <line:465:1, line:468:1> num_node_state 'int (enum node_states)' static inline
FunctionDecl 0x1a22a10 <line:486:1, line:489:1> node_random 'int (const nodemask_t *)' static inline
FunctionDecl 0x1a23240 <line:66:1, line:67:38> get_pageblock_flags_group 'unsigned long (struct page *, int, int)'
FunctionDecl 0x1a235b0 <line:68:1, line:69:38> set_pageblock_flags_group 'void (struct page *, unsigned long, int, int)'
FunctionDecl 0x1a2abd0 <line:78:1, line:81:1> get_pageblock_migratetype 'int (struct page *)' static inline
DeclRefExpr 0x1a2ac78 <col:9> 'unsigned long (struct page *, int, int)' Function 0x1a23240 'get_pageblock_flags_group' 'unsigned long (struct page *, int, int)'
FunctionDecl 0x1a2c130 <line:175:1, line:178:1> is_file_lru 'int (enum lru_list)' static inline
FunctionDecl 0x1a2c480 <line:180:1, line:183:1> is_active_lru 'int (enum lru_list)' static inline
FunctionDecl 0x1a2c7d0 <line:185:1, line:188:1> is_unevictable_lru 'int (enum lru_list)' static inline
FunctionDecl 0x1a2e980 <line:513:1, line:516:1> zone_set_flag 'void (struct zone *, zone_flags_t)' static inline
DeclRefExpr 0x1a2ea30 <col:2> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
FunctionDecl 0x1a352b0 <line:518:1, line:521:1> zone_test_and_set_flag 'int (struct zone *, zone_flags_t)' static inline
DeclRefExpr 0x1a35360 <col:9> 'int ()' Function 0x19db870 'test_and_set_bit' 'int ()'
FunctionDecl 0x1a35630 <line:523:1, line:526:1> zone_clear_flag 'void (struct zone *, zone_flags_t)' static inline
DeclRefExpr 0x1a356e0 <col:2> 'int ()' Function 0x1a0a240 'clear_bit' 'int ()'
FunctionDecl 0x1a359e0 <line:528:1, line:531:1> zone_is_reclaim_congested 'int (const struct zone *)' static inline
DeclRefExpr 0x1a35a88 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1a35ca0 <line:533:1, line:536:1> zone_is_reclaim_dirty 'int (const struct zone *)' static inline
DeclRefExpr 0x1a35d48 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1a35f60 <line:538:1, line:541:1> zone_is_reclaim_writeback 'int (const struct zone *)' static inline
DeclRefExpr 0x1a36008 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1a36220 <line:543:1, line:546:1> zone_is_reclaim_locked 'int (const struct zone *)' static inline
DeclRefExpr 0x1a362c8 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1a364e0 <line:548:1, line:551:1> zone_is_oom_locked 'int (const struct zone *)' static inline
DeclRefExpr 0x1a36588 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1a36820 <line:553:1, line:556:1> zone_end_pfn 'unsigned long (const struct zone *)' static inline
FunctionDecl 0x1a36bf0 <line:558:1, line:561:1> zone_spans_pfn 'bool (const struct zone *, unsigned long)' static inline
DeclRefExpr 0x1a36db8 <col:46> 'unsigned long (const struct zone *)' Function 0x1a36820 'zone_end_pfn' 'unsigned long (const struct zone *)'
FunctionDecl 0x1a37110 <line:563:1, line:566:1> zone_is_initialized 'bool (struct zone *)' static inline
FunctionDecl 0x1a37380 <line:568:1, line:571:1> zone_is_empty 'bool (struct zone *)' static inline
FunctionDecl 0x1a388e0 <line:787:1, line:790:1> pgdat_end_pfn 'unsigned long (pg_data_t *)' static inline
FunctionDecl 0x1a38c10 <line:792:1, line:795:1> pgdat_is_empty 'bool (pg_data_t *)' static inline
FunctionDecl 0x1a3f9c0 <line:99:1, col:55> mutex_destroy 'void (struct mutex *)' static inline
FunctionDecl 0x1a3fcd0 <line:119:1, line:120:31> __mutex_init 'void (struct mutex *, const char *, struct lock_class_key *)' extern
FunctionDecl 0x1a3fee0 <line:128:1, line:131:1> mutex_is_locked 'int (struct mutex *)' static inline
DeclRefExpr 0x1a3ff88 <col:9> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x1a401c0 <line:157:1, col:42> mutex_lock 'void (struct mutex *)' extern
FunctionDecl 0x1a403f0 <line:173:1, col:44> mutex_trylock 'int (struct mutex *)' extern
FunctionDecl 0x1a40540 <line:174:1, col:44> mutex_unlock 'void (struct mutex *)' extern
FunctionDecl 0x1a40790 <line:176:1, col:71> atomic_dec_and_mutex_lock 'int (atomic_t *, struct mutex *)' extern
FunctionDecl 0x1a40c60 <line:34:1, col:76> rwsem_down_read_failed 'struct rw_semaphore *(struct rw_semaphore *)' extern
FunctionDecl 0x1a40dd0 <line:35:1, col:77> rwsem_down_write_failed 'struct rw_semaphore *(struct rw_semaphore *)' extern
FunctionDecl 0x1a40f40 <line:36:1, col:61> rwsem_wake 'struct rw_semaphore *(struct rw_semaphore *)' extern
FunctionDecl 0x1a410b0 <line:37:1, col:74> rwsem_downgrade_wake 'struct rw_semaphore *(struct rw_semaphore *)' extern
FunctionDecl 0x1a41280 <line:43:1, line:46:1> rwsem_is_locked 'int (struct rw_semaphore *)' static inline
FunctionDecl 0x1a45df0 <line:67:1, line:68:31> __init_rwsem 'void (struct rw_semaphore *, const char *, struct lock_class_key *)' extern
FunctionDecl 0x1a45fd0 <line:80:1, col:47> down_read 'void (struct rw_semaphore *)' extern
FunctionDecl 0x1a46120 <line:85:1, col:54> down_read_trylock 'int (struct rw_semaphore *)' extern
FunctionDecl 0x1a46270 <line:90:1, col:48> down_write 'void (struct rw_semaphore *)' extern
FunctionDecl 0x1a463c0 <line:95:1, col:55> down_write_trylock 'int (struct rw_semaphore *)' extern
FunctionDecl 0x1a46510 <line:100:1, col:45> up_read 'void (struct rw_semaphore *)' extern
FunctionDecl 0x1a46660 <line:105:1, col:46> up_write 'void (struct rw_semaphore *)' extern
FunctionDecl 0x1a467b0 <line:110:1, col:53> downgrade_write 'void (struct rw_semaphore *)' extern
FunctionDecl 0x1a46e10 <line:105:1, line:111:1> cpumask_check 'unsigned int (unsigned int)' static inline
FunctionDecl 0x1a47060 <line:115:1, line:118:1> cpumask_first 'unsigned int (const struct cpumask *)' static inline
FunctionDecl 0x1a47320 <line:121:1, line:124:1> cpumask_next 'unsigned int (int, const struct cpumask *)' static inline
FunctionDecl 0x1a475d0 <line:126:1, line:129:1> cpumask_next_zero 'unsigned int (int, const struct cpumask *)' static inline
FunctionDecl 0x1a479a0 <line:131:1, line:136:1> cpumask_next_and 'unsigned int (int, const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a47ce0 <line:139:1, line:143:1> cpumask_any_but 'unsigned int (const struct cpumask *, unsigned int)' static inline
FunctionDecl 0x1a4b9d0 <line:255:1, line:258:1> cpumask_set_cpu 'void (unsigned int, struct cpumask *)' static inline
FunctionDecl 0x1a4bda0 <line:265:1, line:268:1> cpumask_clear_cpu 'void (int, struct cpumask *)' static inline
FunctionDecl 0x1a4c1b0 <line:291:1, line:294:1> cpumask_test_and_set_cpu 'int (int, struct cpumask *)' static inline
FunctionDecl 0x1a4c510 <line:305:1, line:308:1> cpumask_test_and_clear_cpu 'int (int, struct cpumask *)' static inline
FunctionDecl 0x1a4c5e0 <<invalid sloc>> test_and_clear_bit 'int ()'
FunctionDecl 0x1a4c940 <line:314:1, line:317:1> cpumask_setall 'void (struct cpumask *)' static inline
FunctionDecl 0x1a4cb60 <line:323:1, line:326:1> cpumask_clear 'void (struct cpumask *)' static inline
FunctionDecl 0x1a4cf30 <line:336:1, line:342:1> cpumask_and 'int (struct cpumask *, const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a4d310 <line:350:1, line:355:1> cpumask_or 'void (struct cpumask *, const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a4d650 <line:363:1, line:369:1> cpumask_xor 'void (struct cpumask *, const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a4fde0 <line:379:1, line:385:1> cpumask_andnot 'int (struct cpumask *, const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a50120 <line:392:1, line:397:1> cpumask_complement 'void (struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a50460 <line:404:1, line:409:1> cpumask_equal 'bool (const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a50720 <line:416:1, line:421:1> cpumask_intersects 'bool (const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a50a60 <line:430:1, line:435:1> cpumask_subset 'int (const struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a50d10 <line:441:1, line:444:1> cpumask_empty 'bool (const struct cpumask *)' static inline
FunctionDecl 0x1a50f30 <line:450:1, line:453:1> cpumask_full 'bool (const struct cpumask *)' static inline
FunctionDecl 0x1a51150 <line:459:1, line:462:1> cpumask_weight 'unsigned int (const struct cpumask *)' static inline
FunctionDecl 0x1a51510 <line:470:1, line:475:1> cpumask_shift_right 'void (struct cpumask *, const struct cpumask *, int)' static inline
FunctionDecl 0x1a51840 <line:483:1, line:488:1> cpumask_shift_left 'void (struct cpumask *, const struct cpumask *, int)' static inline
FunctionDecl 0x1a52ba0 <line:495:1, line:499:1> cpumask_copy 'void (struct cpumask *, const struct cpumask *)' static inline
FunctionDecl 0x1a53010 <line:542:1, line:546:1> cpumask_scnprintf 'int (char *, int, const struct cpumask *)' static inline
FunctionDecl 0x1a53410 <line:556:1, line:560:1> cpumask_parse_user 'int (const char *, int, struct cpumask *)' static inline
FunctionDecl 0x1a53770 <line:570:1, line:575:1> cpumask_parselist_user 'int (const char *, int, struct cpumask *)' static inline
FunctionDecl 0x1a53ad0 <line:586:1, line:591:1> cpulist_scnprintf 'int (char *, int, const struct cpumask *)' static inline
FunctionDecl 0x1a53e40 <line:600:1, line:606:1> cpumask_parse 'int (const char *, struct cpumask *)' static inline
DeclRefExpr 0x1a53f58 <col:13> 'char *(const char *, int)' Function 0x189fd50 'strchr' 'char *(const char *, int)'
DeclRefExpr 0x1a54178 <col:28> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
FunctionDecl 0x1a54500 <line:615:1, line:618:1> cpulist_parse 'int (const char *, struct cpumask *)' static inline
FunctionDecl 0x1a54760 <line:625:1, line:630:1> cpumask_size 'size_t (void)' static inline
DeclRefExpr 0x1a54800 <col:9> 'int ()' Function 0x1a00250 'BITS_TO_LONGS' 'int ()'
FunctionDecl 0x1a54e60 <line:676:1, line:679:1> alloc_cpumask_var 'bool (cpumask_var_t *, gfp_t)' static inline
FunctionDecl 0x1a551b0 <line:681:1, line:685:1> alloc_cpumask_var_node 'bool (cpumask_var_t *, gfp_t, int)' static inline
FunctionDecl 0x1a55400 <line:687:1, line:691:1> zalloc_cpumask_var 'bool (cpumask_var_t *, gfp_t)' static inline
DeclRefExpr 0x1a554b0 <col:2> 'void (struct cpumask *)' Function 0x1a4cb60 'cpumask_clear' 'void (struct cpumask *)'
FunctionDecl 0x1a55800 <line:693:1, line:698:1> zalloc_cpumask_var_node 'bool (cpumask_var_t *, gfp_t, int)' static inline
DeclRefExpr 0x1a558b8 <col:2> 'void (struct cpumask *)' Function 0x1a4cb60 'cpumask_clear' 'void (struct cpumask *)'
FunctionDecl 0x1a55b40 <line:700:1, line:702:1> alloc_bootmem_cpumask_var 'void (cpumask_var_t *)' static inline
FunctionDecl 0x1a55d00 <line:704:1, line:706:1> free_cpumask_var 'void (struct cpumask *)' static inline
FunctionDecl 0x1a55e50 <line:708:1, line:710:1> free_bootmem_cpumask_var 'void (struct cpumask *)' static inline
FunctionDecl 0x1a56230 <../include/linux/cpumask.h:726:1, col:54> set_cpu_possible 'void (unsigned int, bool)'
FunctionDecl 0x1a563f0 <line:727:1, col:52> set_cpu_present 'void (unsigned int, bool)'
FunctionDecl 0x1a565b0 <line:728:1, col:50> set_cpu_online 'void (unsigned int, bool)'
FunctionDecl 0x1a56770 <line:729:1, col:50> set_cpu_active 'void (unsigned int, bool)'
FunctionDecl 0x1a56950 <line:730:1, col:48> init_cpu_present 'void (const struct cpumask *)'
FunctionDecl 0x1a56aa0 <line:731:1, col:49> init_cpu_possible 'void (const struct cpumask *)'
FunctionDecl 0x1a56bf0 <line:732:1, col:47> init_cpu_online 'void (const struct cpumask *)'
FunctionDecl 0x1a58120 <line:748:1, line:751:1> __check_is_bitmap 'int (const unsigned long *)' static inline
FunctionDecl 0x1a585e0 <line:763:1, line:768:1> get_cpu_mask 'const struct cpumask *(unsigned int)' static inline
DeclRefExpr 0x1a58978 <col:25> 'int (const unsigned long *)' Function 0x1a58120 '__check_is_bitmap' 'int (const unsigned long *)'
FunctionDecl 0x1a58e80 <line:860:1, line:863:1> __cpu_set 'void (int, volatile cpumask_t *)' static inline
FunctionDecl 0x1a590f0 <line:866:1, line:869:1> __cpu_clear 'void (int, volatile cpumask_t *)' static inline
FunctionDecl 0x1a59410 <line:872:1, line:875:1> __cpus_setall 'void (cpumask_t *, int)' static inline
FunctionDecl 0x1a59650 <line:878:1, line:881:1> __cpus_clear 'void (cpumask_t *, int)' static inline
FunctionDecl 0x1a598d0 <line:887:1, line:890:1> __cpu_test_and_set 'int (int, cpumask_t *)' static inline
FunctionDecl 0x1a59d00 <line:893:1, line:897:1> __cpus_and 'int (cpumask_t *, const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a60180 <line:900:1, line:904:1> __cpus_or 'void (cpumask_t *, const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a604c0 <line:907:1, line:911:1> __cpus_xor 'void (cpumask_t *, const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a60800 <line:915:1, line:919:1> __cpus_andnot 'int (cpumask_t *, const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a60b60 <line:922:1, line:926:1> __cpus_equal 'int (const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a60e20 <line:929:1, line:933:1> __cpus_intersects 'int (const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a610e0 <line:936:1, line:940:1> __cpus_subset 'int (const cpumask_t *, const cpumask_t *, int)' static inline
FunctionDecl 0x1a613b0 <line:943:1, line:946:1> __cpus_empty 'int (const cpumask_t *, int)' static inline
FunctionDecl 0x1a615f0 <line:949:1, line:952:1> __cpus_weight 'int (const cpumask_t *, int)' static inline
FunctionDecl 0x1a619c0 <line:956:1, line:960:1> __cpus_shift_left 'void (cpumask_t *, const cpumask_t *, int, int)' static inline
FunctionDecl 0x1a61df0 <line:73:1, line:77:1> init_completion 'void (struct completion *)' static inline
DeclRefExpr 0x1a62000 <col:3> 'void (wait_queue_head_t *, const char *, struct lock_class_key *)' Function 0x19c1bf0 '__init_waitqueue_head' 'void (wait_queue_head_t *, const char *, struct lock_class_key *)'
FunctionDecl 0x1a657b0 <line:86:1, line:89:1> reinit_completion 'void (struct completion *)' static inline
FunctionDecl 0x1a659f0 <line:91:1, col:52> wait_for_completion 'void (struct completion *)' extern
FunctionDecl 0x1a65b40 <line:92:1, col:55> wait_for_completion_io 'void (struct completion *)' extern
FunctionDecl 0x1a65d10 <line:93:1, col:66> wait_for_completion_interruptible 'int (struct completion *)' extern
FunctionDecl 0x1a65e60 <line:94:1, col:61> wait_for_completion_killable 'int (struct completion *)' extern
FunctionDecl 0x1a660b0 <line:95:1, line:96:31> wait_for_completion_timeout 'unsigned long (struct completion *, unsigned long)' extern
FunctionDecl 0x1a66290 <line:97:1, line:98:32> wait_for_completion_io_timeout 'unsigned long (struct completion *, unsigned long)' extern
FunctionDecl 0x1a664f0 <line:99:1, line:100:45> wait_for_completion_interruptible_timeout 'long (struct completion *, unsigned long)' extern
FunctionDecl 0x1a666d0 <line:101:1, line:102:45> wait_for_completion_killable_timeout 'long (struct completion *, unsigned long)' extern
FunctionDecl 0x1a668b0 <line:103:1, col:57> try_wait_for_completion 'bool (struct completion *)' extern
FunctionDecl 0x1a66a00 <line:104:1, col:49> completion_done 'bool (struct completion *)' extern
FunctionDecl 0x1a66b50 <line:106:1, col:41> complete 'void (struct completion *)' extern
FunctionDecl 0x1a66ca0 <line:107:1, col:45> complete_all 'void (struct completion *)' extern
FunctionDecl 0x1a69210 <line:84:1, line:85:70> debug_object_init 'void (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a69400 <line:86:1, line:87:73> debug_object_init_on_stack 'void (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a69670 <line:88:1, line:89:80> debug_object_activate 'int (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a698a0 <line:90:1, line:91:70> debug_object_deactivate 'void (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a69a90 <line:92:1, line:93:70> debug_object_destroy 'void (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a69c80 <line:94:1, line:95:70> debug_object_free 'void (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a69e70 <line:96:1, line:97:71> debug_object_assert_init 'void (void *, struct debug_obj_descr *)' static inline
FunctionDecl 0x1a69fd0 <line:99:1, col:53> debug_objects_early_init 'void (void)' static inline
FunctionDecl 0x1a6a120 <line:100:1, col:51> debug_objects_mem_init 'void (void)' static inline
FunctionDecl 0x1a6a330 <line:106:1, line:107:69> debug_check_no_obj_freed 'void (const void *, unsigned long)' static inline
FunctionDecl 0x1a6b530 <../include/linux/rcupdate.h:61:1, line:63:1> rcutorture_record_test_transition 'void (void)' static inline
FunctionDecl 0x1a6b680 <line:64:1, line:66:1> rcutorture_record_progress 'void (unsigned long)' static inline
FunctionDecl 0x1a6b9c0 <line:152:1, line:153:39> call_rcu_bh 'void (struct callback_head *, void (*)(struct callback_head *))' extern
FunctionDecl 0x1a6bc60 <line:174:1, line:175:41> call_rcu_sched 'void (struct callback_head *, void (*)(struct callback_head *))' extern
FunctionDecl 0x1a6bda0 <line:177:1, col:35> synchronize_sched 'void (void)' extern
FunctionDecl 0x1a6bed0 <line:196:1, line:199:1> __rcu_read_lock 'void (void)' static inline
DeclRefExpr 0x1a6bf70 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1a6c090 <../include/linux/rcupdate.h:201:1, line:204:1> __rcu_read_unlock 'void (void)' static inline
DeclRefExpr 0x1a6c130 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1a6c250 <../include/linux/rcupdate.h:206:1, line:209:1> synchronize_rcu 'void (void)' static inline
DeclRefExpr 0x1a6c2f0 <col:2> 'void (void)' Function 0x1a6bda0 'synchronize_sched' 'void (void)'
FunctionDecl 0x1a6c410 <line:211:1, line:214:1> rcu_preempt_depth 'int (void)' static inline
FunctionDecl 0x1a6c5a0 <line:219:1, col:26> rcu_init 'void (void)' extern
FunctionDecl 0x1a6c6d0 <line:220:1, col:33> rcu_sched_qs 'void (int)' extern
FunctionDecl 0x1a6c810 <line:221:1, col:30> rcu_bh_qs 'void (int)' extern
FunctionDecl 0x1a6ca10 <line:222:1, col:50> rcu_check_callbacks 'void (int, int)' extern
FunctionDecl 0x1a6cbf0 <line:224:1, col:32> rcu_idle_enter 'void (void)' extern
FunctionDecl 0x1a6cd20 <line:225:1, col:31> rcu_idle_exit 'void (void)' extern
FunctionDecl 0x1a6ce50 <line:226:1, col:31> rcu_irq_enter 'void (void)' extern
FunctionDecl 0x1a6cf80 <line:227:1, col:30> rcu_irq_exit 'void (void)' extern
FunctionDecl 0x1a6d0b0 <line:233:1, col:43> rcu_user_enter 'void (void)' static inline
FunctionDecl 0x1a6d200 <line:234:1, col:42> rcu_user_exit 'void (void)' static inline
FunctionDecl 0x1a6d470 <line:235:1, line:236:35> rcu_user_hooks_switch 'void (struct task_struct *, struct task_struct *)' static inline
FunctionDecl 0x1a701a0 <line:275:1, col:37> wait_rcu_gp 'void (call_rcu_func_t *)'
FunctionDecl 0x1a702f0 <line:295:1, line:297:1> init_rcu_head_on_stack 'void (struct callback_head *)' static inline
FunctionDecl 0x1a70460 <line:299:1, line:301:1> destroy_rcu_head_on_stack 'void (struct callback_head *)' static inline
FunctionDecl 0x1a70610 <line:307:1, line:310:1> rcu_lockdep_current_cpu_online 'bool (void)' static inline
FunctionDecl 0x1a707c0 <line:425:1, line:428:1> rcu_read_lock_held 'int (void)' static inline
FunctionDecl 0x1a70950 <line:430:1, line:433:1> rcu_read_lock_bh_held 'int (void)' static inline
FunctionDecl 0x1a70ae0 <line:441:1, line:444:1> rcu_read_lock_sched_held 'int (void)' static inline
FunctionDecl 0x1a70e80 <line:769:1, line:776:1> rcu_read_lock 'void (void)' static inline
DeclRefExpr 0x1a70f20 <col:2> 'void (void)' Function 0x1a6bed0 '__rcu_read_lock' 'void (void)'
FunctionDecl 0x1a71190 <line:793:1, line:800:1> rcu_read_unlock 'void (void)' static inline
DeclRefExpr 0x1a71348 <col:2> 'void (void)' Function 0x1a6c090 '__rcu_read_unlock' 'void (void)'
FunctionDecl 0x1a714a0 <line:819:1, line:826:1> rcu_read_lock_bh 'void (void)' static inline
DeclRefExpr 0x1a71540 <col:2> 'void (void)' Function 0x1981890 'local_bh_disable' 'void (void)'
FunctionDecl 0x1a71790 <line:833:1, line:840:1> rcu_read_unlock_bh 'void (void)' static inline
DeclRefExpr 0x1a71948 <col:2> 'void (void)' Function 0x1981af0 'local_bh_enable' 'void (void)'
FunctionDecl 0x1a71aa0 <line:855:1, line:862:1> rcu_read_lock_sched 'void (void)' static inline
DeclRefExpr 0x1a71b40 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x18e0200 <line:876:1, line:883:1> rcu_read_unlock_sched 'void (void)' static inline
DeclRefExpr 0x18e03b8 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x18e0630 <../include/linux/rcupdate.h:1010:1, col:61> rcu_is_nocb_cpu 'bool (int)' static inline
FunctionDecl 0x18e07f0 <line:1020:1, line:1023:1> rcu_sys_is_idle 'bool (void)' static inline
FunctionDecl 0x18e09a0 <line:1025:1, line:1027:1> rcu_sysidle_force_exit 'void (void)' static inline
FunctionDecl 0x18e0c80 <../include/linux/math64.h:64:1, line:68:1> div_u64_rem 'u64 (u64, u32, u32 *)' static inline
DeclRefExpr 0x18e0e60 <col:15> 'int ()' Function 0x18e0dc0 'do_div' 'int ()'
FunctionDecl 0x18e0dc0 <<invalid sloc>> do_div 'int ()'
FunctionDecl 0x18e12b0 <line:72:1, col:65> div_s64_rem 's64 (s64, s32, s32 *)' extern
FunctionDecl 0x18e15c0 <line:76:1, col:67> div64_u64_rem 'u64 (u64, u64, u64 *)' extern
FunctionDecl 0x18e1810 <line:80:1, col:47> div64_u64 'u64 (u64, u64)' extern
FunctionDecl 0x18e1a50 <line:84:1, col:47> div64_s64 's64 (s64, s64)' extern
FunctionDecl 0x18e1c80 <line:97:1, line:101:1> div_u64 'u64 (u64, u32)' static inline
DeclRefExpr 0x18e1db0 <col:9> 'u64 (u64, u32, u32 *)' Function 0x18e0c80 'div_u64_rem' 'u64 (u64, u32, u32 *)'
FunctionDecl 0x1a8d360 <line:108:1, line:112:1> div_s64 's64 (s64, s32)' static inline
DeclRefExpr 0x1a8d490 <col:9> 's64 (s64, s32, s32 *)' Function 0x18e12b0 'div_s64_rem' 's64 (s64, s32, s32 *)'
FunctionDecl 0x1a8d8a0 <line:115:1, col:63> iter_div_u64_rem 'u32 (u64, u32, u64 *)'
FunctionDecl 0x1a8dae0 <line:117:1, line:134:1> __iter_div_u64_rem 'u32 (u64, u32, u64 *)' static inline
FunctionDecl 0x1a8dd80 <<invalid sloc>> asm 'int ()'
FunctionDecl 0x1a8e380 <../include/linux/math64.h:148:1, line:161:1> mul_u64_u32_shr 'u64 (u64, u32, unsigned int)' static inline
FunctionDecl 0x1a92770 <line:22:1, line:26:1> timespec_equal 'int (const struct timespec *, const struct timespec *)' static inline
FunctionDecl 0x1a92c70 <line:33:1, line:40:1> timespec_compare 'int (const struct timespec *, const struct timespec *)' static inline
FunctionDecl 0x1a93440 <line:42:1, line:49:1> timeval_compare 'int (const struct timeval *, const struct timeval *)' static inline
FunctionDecl 0x1a93db0 <line:51:1, line:53:54> mktime 'unsigned long (const unsigned int, const unsigned int, const unsigned int, const unsigned int, const unsigned int, const unsigned int)' extern
FunctionDecl 0x1a940e0 <line:55:1, col:78> set_normalized_timespec 'void (struct timespec *, time_t, s64)' extern
FunctionDecl 0x1a963c0 <line:62:1, line:63:32> timespec_add_safe 'struct timespec (const struct timespec, const struct timespec)' extern
FunctionDecl 0x1a965f0 <line:66:1, line:73:1> timespec_add 'struct timespec (struct timespec, struct timespec)' static inline
DeclRefExpr 0x1a96730 <col:2> 'void (struct timespec *, time_t, s64)' Function 0x1a940e0 'set_normalized_timespec' 'void (struct timespec *, time_t, s64)'
FunctionDecl 0x1a96c50 <line:78:1, line:85:1> timespec_sub 'struct timespec (struct timespec, struct timespec)' static inline
DeclRefExpr 0x1a96d90 <col:2> 'void (struct timespec *, time_t, s64)' Function 0x1a940e0 'set_normalized_timespec' 'void (struct timespec *, time_t, s64)'
FunctionDecl 0x1a97240 <line:97:1, line:106:1> timespec_valid 'bool (const struct timespec *)' static inline
FunctionDecl 0x1a97750 <line:108:1, line:116:1> timespec_valid_strict 'bool (const struct timespec *)' static inline
DeclRefExpr 0x1a977f8 <col:7> 'bool (const struct timespec *)' Function 0x1a97240 'timespec_valid' 'bool (const struct timespec *)'
FunctionDecl 0x1a97e10 <line:120:1, line:123:1> has_persistent_clock 'bool (void)' static inline
FunctionDecl 0x1a98060 <line:125:1, col:54> read_persistent_clock 'void (struct timespec *)' extern
FunctionDecl 0x1a981b0 <line:126:1, col:48> read_boot_clock 'void (struct timespec *)' extern
FunctionDecl 0x1a99440 <line:128:1, col:55> update_persistent_clock 'int (struct timespec)' extern
FunctionDecl 0x1a99580 <line:129:1, col:27> timekeeping_init 'void (void)'
FunctionDecl 0x1a99720 <line:132:1, col:31> get_seconds 'unsigned long (void)'
FunctionDecl 0x1a998c0 <line:133:1, col:41> current_kernel_time 'struct timespec (void)'
FunctionDecl 0x1a99a00 <line:134:1, col:43> __current_kernel_time 'struct timespec (void)'
FunctionDecl 0x1a99b40 <line:135:1, col:42> get_monotonic_coarse 'struct timespec (void)'
FunctionDecl 0x1a99e40 <line:136:1, line:137:50> get_xtime_and_monotonic_and_sleep_offset 'void (struct timespec *, struct timespec *, struct timespec *)'
FunctionDecl 0x1a99fa0 <line:138:1, col:57> timekeeping_inject_sleeptime 'void (struct timespec *)'
FunctionDecl 0x1a9a1d0 <line:156:1, col:47> do_gettimeofday 'void (struct timeval *)' extern
FunctionDecl 0x1a9a3a0 <line:157:1, col:53> do_settimeofday 'int (const struct timespec *)' extern
FunctionDecl 0x1a9a660 <line:158:1, line:159:36> do_sys_settimeofday 'int (const struct timespec *, const struct timezone *)' extern
FunctionDecl 0x1a9a9c0 <line:161:1, col:94> do_utimes 'long (int, const char *, struct timespec *, int)' extern
FunctionDecl 0x1a9add0 <line:163:1, line:164:28> do_setitimer 'int (int, struct itimerval *, struct itimerval *)' extern
FunctionDecl 0x1a9af20 <line:165:1, col:57> alarm_setitimer 'unsigned int (unsigned int)' extern
FunctionDecl 0x1a9b170 <line:166:1, col:59> do_getitimer 'int (int, struct itimerval *)' extern
FunctionDecl 0x1a9b3f0 <line:167:1, col:48> __getnstimeofday 'int (struct timespec *)' extern
FunctionDecl 0x1a9b540 <line:168:1, col:47> getnstimeofday 'void (struct timespec *)' extern
FunctionDecl 0x1a9b690 <line:169:1, col:48> getrawmonotonic 'void (struct timespec *)' extern
FunctionDecl 0x1a9b8f0 <line:170:1, line:171:27> getnstime_raw_and_real 'void (struct timespec *, struct timespec *)' extern
FunctionDecl 0x1a9ba50 <line:172:1, col:44> getboottime 'void (struct timespec *)' extern
FunctionDecl 0x1a9bba0 <line:173:1, col:55> monotonic_to_bootbased 'void (struct timespec *)' extern
FunctionDecl 0x1a9bcf0 <line:174:1, col:55> get_monotonic_boottime 'void (struct timespec *)' extern
FunctionDecl 0x1a9bf50 <line:176:1, col:71> timespec_trunc 'struct timespec (struct timespec, unsigned int)' extern
FunctionDecl 0x1a9c090 <line:177:1, col:43> timekeeping_valid_for_hres 'int (void)' extern
FunctionDecl 0x1a9c220 <line:178:1, col:42> timekeeping_max_deferment 'u64 (void)' extern
FunctionDecl 0x1a9c370 <line:179:1, col:57> timekeeping_inject_offset 'int (struct timespec *)' extern
FunctionDecl 0x1a9c4e0 <line:180:1, col:43> timekeeping_get_tai_offset 's32 (void)' extern
FunctionDecl 0x1a9c650 <line:181:1, col:54> timekeeping_set_tai_offset 'void (s32)' extern
FunctionDecl 0x1a9c7a0 <line:182:1, col:53> timekeeping_clocktai 'void (struct timespec *)' extern
FunctionDecl 0x1a9caa0 <line:185:1, col:38> do_sys_times 'void (struct tms *)' extern
FunctionDecl 0x1a9d1b0 <line:213:1, col:64> time_to_tm 'void (time_t, int, struct tm *)'
FunctionDecl 0x1a9d400 <line:222:1, line:225:1> timespec_to_ns 's64 (const struct timespec *)' static inline
FunctionDecl 0x1a9d840 <line:234:1, line:238:1> timeval_to_ns 's64 (const struct timeval *)' static inline
FunctionDecl 0x1a9dcd0 <line:246:1, col:53> ns_to_timespec 'struct timespec (const s64)' extern
FunctionDecl 0x1a9ded0 <line:254:1, col:51> ns_to_timeval 'struct timeval (const s64)' extern
FunctionDecl 0x1a9e150 <line:264:1, line:268:1> timespec_add_ns 'void (struct timespec *, u64)' static inline
DeclRefExpr 0x1a9e2b0 <col:15> 'u32 (u64, u32, u64 *)' Function 0x1a8dae0 '__iter_div_u64_rem' 'u32 (u64, u32, u64 *)'
FunctionDecl 0x1aa6870 <line:154:1, col:38> do_adjtimex 'int (struct timex *)' extern
FunctionDecl 0x1aa6ad0 <line:155:1, col:69> hardpps 'void (const struct timespec *, const struct timespec *)' extern
FunctionDecl 0x1aa6c60 <line:157:1, col:48> read_current_timer 'int (unsigned long *)'
FunctionDecl 0x1aa6da0 <line:158:1, col:32> ntp_notify_cmos_timer 'void (void)'
FunctionDecl 0x1aa6f10 <../include/linux/jiffies.h:57:1, col:57> register_refined_jiffies 'int (long)' extern
FunctionDecl 0x1aa7230 <line:80:1, col:24> get_jiffies_64 'u64 (void)'
FunctionDecl 0x1aa7410 <line:295:1, col:59> jiffies_to_msecs 'unsigned int (const unsigned long)' extern
FunctionDecl 0x1aa7550 <line:296:1, col:59> jiffies_to_usecs 'unsigned int (const unsigned long)' extern
FunctionDecl 0x1aa7710 <line:297:1, col:59> msecs_to_jiffies 'unsigned long (const unsigned int)' extern
FunctionDecl 0x1aa7850 <line:298:1, col:59> usecs_to_jiffies 'unsigned long (const unsigned int)' extern
FunctionDecl 0x1aa7a20 <line:299:1, col:70> timespec_to_jiffies 'unsigned long (const struct timespec *)' extern
FunctionDecl 0x1aa7c70 <line:300:1, line:301:27> jiffies_to_timespec 'void (const unsigned long, struct timespec *)' extern
FunctionDecl 0x1aa7e50 <line:302:1, col:68> timeval_to_jiffies 'unsigned long (const struct timeval *)' extern
FunctionDecl 0x1aa80a0 <line:303:1, line:304:32> jiffies_to_timeval 'void (const unsigned long, struct timeval *)' extern
FunctionDecl 0x1aa8280 <line:306:1, col:50> jiffies_to_clock_t 'clock_t (unsigned long)' extern
FunctionDecl 0x1aa8440 <line:307:1, line:310:1> jiffies_delta_to_clock_t 'clock_t (long)' static inline
DeclRefExpr 0x1ab6850 <col:9> 'clock_t (unsigned long)' Function 0x1aa8280 'jiffies_to_clock_t' 'clock_t (unsigned long)'
DeclRefExpr 0x1ab6878 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1ab6948 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
FunctionDecl 0x1ab6c20 <line:312:1, col:56> clock_t_to_jiffies 'unsigned long (unsigned long)' extern
FunctionDecl 0x1ab6da0 <line:313:1, col:39> jiffies_64_to_clock_t 'u64 (u64)' extern
FunctionDecl 0x1ab6ee0 <line:314:1, col:33> nsec_to_clock_t 'u64 (u64)' extern
FunctionDecl 0x1ab7020 <line:315:1, col:36> nsecs_to_jiffies64 'u64 (u64)' extern
FunctionDecl 0x1ab7160 <line:316:1, col:44> nsecs_to_jiffies 'unsigned long (u64)' extern
FunctionDecl 0x1ab7760 <line:144:1, line:147:1> ktime_set 'ktime_t (const long, const unsigned long)' static inline
FunctionDecl 0x1ab7d00 <line:156:1, line:165:1> ktime_sub 'ktime_t (const ktime_t, const ktime_t)' static inline
FunctionDecl 0x1ab8400 <line:174:1, line:191:1> ktime_add 'ktime_t (const ktime_t, const ktime_t)' static inline
FunctionDecl 0x1ab8b90 <line:200:1, col:55> ktime_add_ns 'ktime_t (const ktime_t, u64)' extern
FunctionDecl 0x1ab8d80 <line:209:1, col:55> ktime_sub_ns 'ktime_t (const ktime_t, u64)' extern
FunctionDecl 0x1ab8f80 <line:217:1, line:221:1> timespec_to_ktime 'ktime_t (const struct timespec)' static inline
FunctionDecl 0x1ab9550 <line:229:1, line:234:1> timeval_to_ktime 'ktime_t (const struct timeval)' static inline
FunctionDecl 0x1ab9bb0 <line:242:1, line:246:1> ktime_to_timespec 'struct timespec (const ktime_t)' static inline
FunctionDecl 0x1aba120 <line:254:1, line:259:1> ktime_to_timeval 'struct timeval (const ktime_t)' static inline
FunctionDecl 0x1aba750 <line:267:1, line:270:1> ktime_to_ns 's64 (const ktime_t)' static inline
FunctionDecl 0x1abac30 <line:283:1, line:286:1> ktime_equal 'int (const ktime_t, const ktime_t)' static inline
FunctionDecl 0x1abaf70 <line:298:1, line:305:1> ktime_compare 'int (const ktime_t, const ktime_t)' static inline
FunctionDecl 0x1abb430 <line:307:1, line:311:1> ktime_to_us 's64 (const ktime_t)' static inline
DeclRefExpr 0x1abb558 <col:22> 'struct timeval (const ktime_t)' Function 0x1aba120 'ktime_to_timeval' 'struct timeval (const ktime_t)'
FunctionDecl 0x1abb910 <line:313:1, line:317:1> ktime_to_ms 's64 (const ktime_t)' static inline
DeclRefExpr 0x1abba38 <col:22> 'struct timeval (const ktime_t)' Function 0x1aba120 'ktime_to_timeval' 'struct timeval (const ktime_t)'
FunctionDecl 0x1abbee0 <../include/linux/ktime.h:319:1, line:322:1> ktime_us_delta 's64 (const ktime_t, const ktime_t)' static inline
DeclRefExpr 0x1abbf90 <col:15> 's64 (const ktime_t)' Function 0x1abb430 'ktime_to_us' 's64 (const ktime_t)'
DeclRefExpr 0x1abbfb8 <col:27> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1ab7d00 'ktime_sub' 'ktime_t (const ktime_t, const ktime_t)'
FunctionDecl 0x1abc340 <line:324:1, line:327:1> ktime_add_us 'ktime_t (const ktime_t, const u64)' static inline
DeclRefExpr 0x1abc3f0 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
FunctionDecl 0x1abc6f0 <../include/linux/ktime.h:329:1, line:332:1> ktime_add_ms 'ktime_t (const ktime_t, const u64)' static inline
DeclRefExpr 0x1abc7a0 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
FunctionDecl 0x1abca80 <../include/linux/ktime.h:334:1, line:337:1> ktime_sub_us 'ktime_t (const ktime_t, const u64)' static inline
DeclRefExpr 0x1abcb30 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8d80 'ktime_sub_ns' 'ktime_t (const ktime_t, u64)'
FunctionDecl 0x1abcde0 <../include/linux/ktime.h:339:1, col:67> ktime_add_safe 'ktime_t (const ktime_t, const ktime_t)' extern
FunctionDecl 0x1abd040 <line:375:1, line:380:1> ns_to_ktime 'ktime_t (u64)' static inline
DeclRefExpr 0x1abd278 <col:9> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
FunctionDecl 0x1abd450 <line:382:1, line:387:1> ms_to_ktime 'ktime_t (u64)' static inline
DeclRefExpr 0x1abd688 <col:9> 'ktime_t (const ktime_t, const u64)' Function 0x1abc6f0 'ktime_add_ms' 'ktime_t (const ktime_t, const u64)'
FunctionDecl 0x1abe110 <line:94:1, line:95:51> init_timer_key 'void (struct timer_list *, unsigned int, const char *, struct lock_class_key *)'
FunctionDecl 0x1abe300 <line:103:1, col:71> destroy_timer_on_stack 'void (struct timer_list *)' static inline
FunctionDecl 0x1abe5f0 <line:104:1, line:109:1> init_timer_on_stack_key 'void (struct timer_list *, unsigned int, const char *, struct lock_class_key *)' static inline
DeclRefExpr 0x1abe6b0 <col:2> 'void (struct timer_list *, unsigned int, const char *, struct lock_class_key *)' Function 0x1abe110 'init_timer_key' 'void (struct timer_list *, unsigned int, const char *, struct lock_class_key *)'
FunctionDecl 0x1ac17e0 <line:169:1, line:172:1> timer_pending 'int (const struct timer_list *)' static inline
FunctionDecl 0x1ac1be0 <line:174:1, col:59> add_timer_on 'void (struct timer_list *, int)' extern
FunctionDecl 0x1ac1dc0 <line:175:1, col:47> del_timer 'int (struct timer_list *)' extern
FunctionDecl 0x1ac2010 <line:176:1, col:69> mod_timer 'int (struct timer_list *, unsigned long)' extern
FunctionDecl 0x1ac21f0 <line:177:1, col:77> mod_timer_pending 'int (struct timer_list *, unsigned long)' extern
FunctionDecl 0x1ac23d0 <line:178:1, col:76> mod_timer_pinned 'int (struct timer_list *, unsigned long)' extern
FunctionDecl 0x1ac25b0 <line:180:1, col:66> set_timer_slack 'void (struct timer_list *, int)' extern
FunctionDecl 0x1ac26f0 <line:195:1, col:64> get_next_timer_interrupt 'unsigned long (unsigned long)' extern
FunctionDecl 0x1ac2830 <line:227:1, line:229:1> init_timer_stats 'void (void)' static inline
FunctionDecl 0x1ac2990 <line:231:1, line:233:1> timer_stats_timer_set_start_info 'void (struct timer_list *)' static inline
FunctionDecl 0x1ac2b00 <line:235:1, line:237:1> timer_stats_timer_clear_start_info 'void (struct timer_list *)' static inline
FunctionDecl 0x1ac2c70 <line:240:1, col:47> add_timer 'void (struct timer_list *)' extern
FunctionDecl 0x1ac2dc0 <line:242:1, col:58> try_to_del_timer_sync 'int (struct timer_list *)' extern
FunctionDecl 0x1ac2f00 <line:252:1, col:29> init_timers 'void (void)' extern
FunctionDecl 0x1ac3030 <line:253:1, col:34> run_local_timers 'void (void)' extern
FunctionDecl 0x1ac3410 <line:255:1, col:56> it_real_fn 'enum hrtimer_restart (struct hrtimer *)' extern
FunctionDecl 0x1ac61a0 <line:257:1, col:55> __round_jiffies 'unsigned long (unsigned long, int)'
FunctionDecl 0x1ac6360 <line:258:1, col:64> __round_jiffies_relative 'unsigned long (unsigned long, int)'
FunctionDecl 0x1ac64a0 <line:259:1, col:44> round_jiffies 'unsigned long (unsigned long)'
FunctionDecl 0x1ac65e0 <line:260:1, col:53> round_jiffies_relative 'unsigned long (unsigned long)'
FunctionDecl 0x1ac67a0 <line:262:1, col:58> __round_jiffies_up 'unsigned long (unsigned long, int)'
FunctionDecl 0x1ac6960 <line:263:1, col:67> __round_jiffies_up_relative 'unsigned long (unsigned long, int)'
FunctionDecl 0x1ac6aa0 <line:264:1, col:47> round_jiffies_up 'unsigned long (unsigned long)'
FunctionDecl 0x1ac6be0 <line:265:1, col:56> round_jiffies_up_relative 'unsigned long (unsigned long)'
FunctionDecl 0x1ac7100 <line:20:1, col:48> delayed_work_timer_fn 'void (unsigned long)'
FunctionDecl 0x1aca1a0 <line:136:1, line:139:1> to_delayed_work 'struct delayed_work *(struct work_struct *)' static inline
FunctionDecl 0x1aca970 <line:199:1, col:73> __init_work 'void (struct work_struct *, int)' static inline
FunctionDecl 0x1acaae0 <line:200:1, col:70> destroy_work_on_stack 'void (struct work_struct *)' static inline
FunctionDecl 0x1acacd0 <line:201:1, col:78> work_static 'unsigned int (struct work_struct *)' static inline
FunctionDecl 0x1ad2450 <line:460:1, col:58> destroy_workqueue 'void (struct workqueue_struct *)' extern
FunctionDecl 0x1ad26c0 <line:462:1, col:61> alloc_workqueue_attrs 'struct workqueue_attrs *(gfp_t)'
FunctionDecl 0x1ad2890 <line:463:1, col:56> free_workqueue_attrs 'void (struct workqueue_attrs *)'
FunctionDecl 0x1ad2b50 <line:464:1, line:465:41> apply_workqueue_attrs 'int (struct workqueue_struct *, const struct workqueue_attrs *)'
FunctionDecl 0x1ad2e40 <line:467:1, line:468:28> queue_work_on 'bool (int, struct workqueue_struct *, struct work_struct *)' extern
FunctionDecl 0x1ad31c0 <line:469:1, line:470:50> queue_delayed_work_on 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' extern
FunctionDecl 0x1ad34a0 <line:471:1, line:472:51> mod_delayed_work_on 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' extern
FunctionDecl 0x1ad3610 <line:474:1, col:56> flush_workqueue 'void (struct workqueue_struct *)' extern
FunctionDecl 0x1ad3760 <line:475:1, col:56> drain_workqueue 'void (struct workqueue_struct *)' extern
FunctionDecl 0x1ad38a0 <line:476:1, col:38> flush_scheduled_work 'void (void)' extern
FunctionDecl 0x1ad6630 <line:478:1, col:49> schedule_on_each_cpu 'int (work_func_t)' extern
FunctionDecl 0x1ad6910 <line:480:1, col:69> execute_in_process_context 'int (work_func_t, struct execute_work *)'
FunctionDecl 0x1ad6af0 <line:482:1, col:48> flush_work 'bool (struct work_struct *)' extern
FunctionDecl 0x1ad6c40 <line:483:1, col:54> cancel_work_sync 'bool (struct work_struct *)' extern
FunctionDecl 0x1ad6e10 <line:485:1, col:58> flush_delayed_work 'bool (struct delayed_work *)' extern
FunctionDecl 0x1ad6f60 <line:486:1, col:59> cancel_delayed_work 'bool (struct delayed_work *)' extern
FunctionDecl 0x1ad70b0 <line:487:1, col:64> cancel_delayed_work_sync 'bool (struct delayed_work *)' extern
FunctionDecl 0x1ad7300 <line:489:1, line:490:24> workqueue_set_max_active 'void (struct workqueue_struct *, int)' extern
FunctionDecl 0x1ad7440 <line:491:1, col:46> current_is_workqueue_rescuer 'bool (void)' extern
FunctionDecl 0x1ad7680 <line:492:1, col:69> workqueue_congested 'bool (int, struct workqueue_struct *)' extern
FunctionDecl 0x1ad77e0 <line:493:1, col:55> work_busy 'unsigned int (struct work_struct *)' extern
FunctionDecl 0x1ad78b0 prev 0x1947d30 <line:494:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1ad79e0 <col:23, col:64> set_worker_desc 'void (const char *, ...)'
FunctionDecl 0x1ad7c30 <line:495:1, col:76> print_worker_info 'void (const char *, struct task_struct *)' extern
FunctionDecl 0x1ad7ec0 <line:507:1, line:511:1> queue_work 'bool (struct workqueue_struct *, struct work_struct *)' static inline
DeclRefExpr 0x1ad7f70 <col:9> 'bool (int, struct workqueue_struct *, struct work_struct *)' Function 0x1ad2e40 'queue_work_on' 'bool (int, struct workqueue_struct *, struct work_struct *)'
FunctionDecl 0x1ad83a0 <line:521:1, line:526:1> queue_delayed_work 'bool (struct workqueue_struct *, struct delayed_work *, unsigned long)' static inline
DeclRefExpr 0x1ad8458 <col:9> 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad31c0 'queue_delayed_work_on' 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)'
FunctionDecl 0x1ad8850 <line:536:1, line:541:1> mod_delayed_work 'bool (struct workqueue_struct *, struct delayed_work *, unsigned long)' static inline
DeclRefExpr 0x1ad8908 <col:9> 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad34a0 'mod_delayed_work_on' 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)'
FunctionDecl 0x1ad8c90 <line:550:1, line:553:1> schedule_work_on 'bool (int, struct work_struct *)' static inline
DeclRefExpr 0x1ad8d40 <col:9> 'bool (int, struct workqueue_struct *, struct work_struct *)' Function 0x1ad2e40 'queue_work_on' 'bool (int, struct workqueue_struct *, struct work_struct *)'
FunctionDecl 0x1ad8f90 <line:566:1, line:569:1> schedule_work 'bool (struct work_struct *)' static inline
DeclRefExpr 0x1ad9038 <col:9> 'bool (struct workqueue_struct *, struct work_struct *)' Function 0x1ad7ec0 'queue_work' 'bool (struct workqueue_struct *, struct work_struct *)'
FunctionDecl 0x1ad9430 <line:580:1, line:584:1> schedule_delayed_work_on 'bool (int, struct delayed_work *, unsigned long)' static inline
DeclRefExpr 0x1ad94e8 <col:9> 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad31c0 'queue_delayed_work_on' 'bool (int, struct workqueue_struct *, struct delayed_work *, unsigned long)'
FunctionDecl 0x1ad9880 <line:594:1, line:598:1> schedule_delayed_work 'bool (struct delayed_work *, unsigned long)' static inline
DeclRefExpr 0x1ad9930 <col:9> 'bool (struct workqueue_struct *, struct delayed_work *, unsigned long)' Function 0x1ad83a0 'queue_delayed_work' 'bool (struct workqueue_struct *, struct delayed_work *, unsigned long)'
FunctionDecl 0x1ad9bd0 <line:603:1, line:606:1> keventd_up 'bool (void)' static inline
FunctionDecl 0x1adb970 <line:80:1, col:44> init_srcu_struct 'int (struct srcu_struct *)'
FunctionDecl 0x1adbac0 <line:85:1, col:43> process_srcu 'void (struct work_struct *)'
FunctionDecl 0x1adbe80 <line:130:1, line:131:38> call_srcu 'void (struct srcu_struct *, struct callback_head *, void (*)(struct callback_head *))'
FunctionDecl 0x1adc060 <line:133:1, col:48> cleanup_srcu_struct 'void (struct srcu_struct *)'
FunctionDecl 0x1adc1b0 <line:134:1, col:44> __srcu_read_lock 'int (struct srcu_struct *)'
FunctionDecl 0x1adc400 <line:135:1, col:56> __srcu_read_unlock 'void (struct srcu_struct *, int)'
FunctionDecl 0x1adc560 <line:136:1, col:45> synchronize_srcu 'void (struct srcu_struct *)'
FunctionDecl 0x1adc6b0 <line:137:1, col:55> synchronize_srcu_expedited 'void (struct srcu_struct *)'
FunctionDecl 0x1adc880 <line:138:1, col:51> srcu_batches_completed 'long (struct srcu_struct *)'
FunctionDecl 0x1adc9d0 <line:139:1, col:41> srcu_barrier 'void (struct srcu_struct *)'
FunctionDecl 0x1adcb20 <line:167:1, line:170:1> srcu_read_lock_held 'int (struct srcu_struct *)' static inline
FunctionDecl 0x1adcd60 <line:218:1, line:224:1> srcu_read_lock 'int (struct srcu_struct *)' static inline
DeclRefExpr 0x1adce78 <col:15> 'int (struct srcu_struct *)' Function 0x1adc1b0 '__srcu_read_lock' 'int (struct srcu_struct *)'
FunctionDecl 0x1add1e0 <line:233:1, line:238:1> srcu_read_unlock 'void (struct srcu_struct *, int)' static inline
DeclRefExpr 0x1add2f0 <col:2> 'void (struct srcu_struct *, int)' Function 0x1adc400 '__srcu_read_unlock' 'void (struct srcu_struct *, int)'
FunctionDecl 0x1add530 <line:249:1, line:252:1> smp_mb__after_srcu_read_unlock 'void (void)' static inline
FunctionDecl 0x1adfb60 <line:92:1, col:66> srcu_init_notifier_head 'void (struct srcu_notifier_head *)' extern
FunctionDecl 0x1ae0080 <line:203:1, col:80> pgdat_resize_lock 'void (struct pglist_data *, unsigned long *)' static inline
FunctionDecl 0x1ae0270 <line:204:1, col:82> pgdat_resize_unlock 'void (struct pglist_data *, unsigned long *)' static inline
FunctionDecl 0x1ae0460 <line:205:1, col:66> pgdat_resize_init 'void (struct pglist_data *)' static inline
FunctionDecl 0x1ae0650 <line:207:1, line:210:1> zone_span_seqbegin 'unsigned int (struct zone *)' static inline
FunctionDecl 0x1ae0920 <line:211:1, line:214:1> zone_span_seqretry 'int (struct zone *, unsigned int)' static inline
FunctionDecl 0x1ae0b60 <line:215:1, col:60> zone_span_writelock 'void (struct zone *)' static inline
FunctionDecl 0x1ae0cd0 <line:216:1, col:62> zone_span_writeunlock 'void (struct zone *)' static inline
FunctionDecl 0x1ae4d60 <line:217:1, col:58> zone_seqlock_init 'void (struct zone *)' static inline
FunctionDecl 0x1ae4eb0 <line:219:1, line:224:1> mhp_notimplemented 'int (const char *)' static inline
DeclRefExpr 0x1ae4f58 <col:2> 'int (const char *, ...)' Function 0x1876460 'printk' 'int (const char *, ...)'
DeclRefExpr 0x1ae50e0 <col:2> 'void (void)' Function 0x1878550 'dump_stack' 'void (void)'
FunctionDecl 0x1ae5280 <../include/linux/memory_hotplug.h:226:1, line:228:1> register_page_bootmem_info_node 'void (struct pglist_data *)' static inline
FunctionDecl 0x1ae5410 <line:230:1, line:233:1> try_online_node 'int (int)' static inline
FunctionDecl 0x1ae55b0 <line:235:1, col:47> lock_memory_hotplug 'void (void)' static inline
FunctionDecl 0x1ae5700 <line:236:1, col:49> unlock_memory_hotplug 'void (void)' static inline
FunctionDecl 0x1ae5910 <line:248:1, line:252:1> is_mem_section_removable 'int (unsigned long, unsigned long)' static inline
FunctionDecl 0x1ae5ab0 <line:254:1, col:47> try_offline_node 'void (int)' static inline
FunctionDecl 0x1ae5c80 <line:256:1, line:259:1> offline_pages 'int (unsigned long, unsigned long)' static inline
FunctionDecl 0x1ae5fd0 <../include/linux/memory_hotplug.h:261:1, col:65> remove_memory 'void (int, u64, u64)' static inline
FunctionDecl 0x1ae6600 <line:264:1, line:265:56> walk_memory_range 'int (unsigned long, unsigned long, void *, int (*)(struct memory_block *, void *))' extern
FunctionDecl 0x1ae68e0 <line:266:1, col:51> add_memory 'int (int, u64, u64)' extern
FunctionDecl 0x1ae6b20 <line:267:1, col:56> arch_add_memory 'int (int, u64, u64)' extern
FunctionDecl 0x1ae6d70 prev 0x1ae5c80 <line:268:1, col:73> offline_pages 'int (unsigned long, unsigned long)' extern
FunctionDecl 0x1ae6f50 <line:269:1, col:58> is_memblock_offlined 'bool (struct memory_block *)' extern
FunctionDecl 0x1ae7180 prev 0x1ae5fd0 <line:270:1, col:55> remove_memory 'void (int, u64, u64)' extern
FunctionDecl 0x1ae73e0 <line:271:1, col:77> sparse_add_one_section 'int (struct zone *, unsigned long)' extern
FunctionDecl 0x1ae76e0 <line:272:1, col:80> sparse_remove_one_section 'void (struct zone *, struct mem_section *)' extern
FunctionDecl 0x1ae7940 <line:273:1, line:274:26> sparse_decode_mem_map 'struct page *(unsigned long, unsigned long)' extern
FunctionDecl 0x1ae7c10 <line:800:1, col:61> build_all_zonelists 'void (pg_data_t *, struct zone *)'
FunctionDecl 0x1ae7f10 <line:801:1, col:78> wakeup_kswapd 'void (struct zone *, int, enum zone_type)'
FunctionDecl 0x1ae8310 <line:802:1, line:803:37> zone_watermark_ok 'bool (struct zone *, int, unsigned long, int, int)'
FunctionDecl 0x1ae8660 <line:804:1, line:805:37> zone_watermark_ok_safe 'bool (struct zone *, int, unsigned long, int, int)'
FunctionDecl 0x1ae8b80 <line:810:1, line:812:37> init_currently_empty_zone 'int (struct zone *, unsigned long, unsigned long, enum memmap_context)' extern
FunctionDecl 0x1ae8de0 <line:814:1, col:46> lruvec_init 'void (struct lruvec *)' extern
FunctionDecl 0x1ae8fd0 <line:816:1, line:823:1> lruvec_zone 'struct zone *(struct lruvec *)' static inline
FunctionDecl 0x1ae9690 <line:828:1, col:85> memory_present 'void (int, unsigned long, unsigned long)' static inline
FunctionDecl 0x1ae97f0 <line:834:1, col:68> local_memory_node 'int (int)' static inline
FunctionDecl 0x1ae9a30 <line:846:1, line:849:1> populated_zone 'int (struct zone *)' static inline
FunctionDecl 0x1ae9d00 <line:853:1, line:860:1> zone_movable_is_highmem 'int (void)' static inline
FunctionDecl 0x1ae9f20 <line:862:1, line:870:1> is_highmem_idx 'int (enum zone_type)' static inline
FunctionDecl 0x1aea100 <line:878:1, line:888:1> is_highmem 'int (struct zone *)' static inline
FunctionDecl 0x1aea6b0 <line:892:1, line:893:39> min_free_kbytes_sysctl_handler 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1aeab20 <line:895:1, line:896:39> lowmem_reserve_ratio_sysctl_handler 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1aeb040 <line:897:1, line:898:39> percpu_pagelist_fraction_sysctl_handler 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1aeb390 <line:899:1, line:900:37> sysctl_min_unmapped_ratio_sysctl_handler 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1aeb6e0 <line:901:1, line:902:37> sysctl_min_slab_ratio_sysctl_handler 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1aeba30 <line:904:1, line:905:37> numa_zonelist_order_handler 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1aebd10 <line:921:1, col:51> first_online_pgdat 'struct pglist_data *(void)' extern
FunctionDecl 0x1aebf00 <line:922:1, col:71> next_online_pgdat 'struct pglist_data *(struct pglist_data *)' extern
FunctionDecl 0x1aec0f0 <line:923:1, col:48> next_zone 'struct zone *(struct zone *)' extern
FunctionDecl 0x1aec3a0 <line:953:1, line:956:1> zonelist_zone 'struct zone *(struct zoneref *)' static inline
FunctionDecl 0x1aec640 <line:958:1, line:961:1> zonelist_zone_idx 'int (struct zoneref *)' static inline
FunctionDecl 0x1aec860 <line:963:1, line:971:1> zonelist_node_idx 'int (struct zoneref *)' static inline
FunctionDecl 0x1aeccf0 <line:986:1, line:989:24> next_zones_zonelist 'struct zoneref *(struct zoneref *, enum zone_type, nodemask_t *, struct zone **)'
FunctionDecl 0x1aee9e0 <line:1003:1, line:1010:1> first_zones_zonelist 'struct zoneref *(struct zonelist *, enum zone_type, nodemask_t *, struct zone **)' static inline
DeclRefExpr 0x1aeeaa0 <col:9> 'struct zoneref *(struct zoneref *, enum zone_type, nodemask_t *, struct zone **)' Function 0x1aeccf0 'next_zones_zonelist' 'struct zoneref *(struct zoneref *, enum zone_type, nodemask_t *, struct zone **)'
FunctionDecl 0x1aeee00 <line:1046:1, line:1049:1> early_pfn_to_nid 'unsigned long (unsigned long)' static inline
FunctionDecl 0x1aef0a0 prev 0x1ae9690 <line:1234:1, col:68> memory_present 'void (int, unsigned long, unsigned long)'
FunctionDecl 0x1aef4a0 <../include/linux/mmzone.h:1268:1, line:1272:1> memmap_valid_within 'int (unsigned long, struct page *, struct zone *)' static inline
FunctionDecl 0x1aef650 <../include/linux/smp.h:15:1, col:26> cpu_idle 'void (void)' extern
FunctionDecl 0x1aefe10 <line:28:1, line:29:17> smp_call_function_single 'int (int, smp_call_func_t, void *, int)'
FunctionDecl 0x1af00f0 <line:34:1, col:59> on_each_cpu 'int (smp_call_func_t, void *, int)'
FunctionDecl 0x1af0460 <line:40:1, line:41:24> on_each_cpu_mask 'void (const struct cpumask *, smp_call_func_t, void *, bool)'
FunctionDecl 0x1af4130 <line:48:1, line:50:18> on_each_cpu_cond 'void (bool (*)(int, void *), smp_call_func_t, void *, bool, gfp_t)'
FunctionDecl 0x1af44c0 <line:52:1, line:53:13> __smp_call_function_single 'void (int, struct call_single_data *, int)'
FunctionDecl 0x1af4610 <line:126:1, col:42> smp_send_stop 'void (void)' static inline
FunctionDecl 0x1af4860 <line:132:1, line:135:1> up_smp_call_function 'int (smp_call_func_t, void *)' static inline
FunctionDecl 0x1af4a00 <line:139:1, col:51> smp_send_reschedule 'void (int)' static inline
FunctionDecl 0x1af4b50 <line:143:1, col:47> call_function_init 'void (void)' static inline
FunctionDecl 0x1af4ec0 <line:145:1, line:150:1> smp_call_function_any 'int (const struct cpumask *, smp_call_func_t, void *, int)' static inline
DeclRefExpr 0x1af4f80 <col:9> 'int (int, smp_call_func_t, void *, int)' Function 0x1aefe10 'smp_call_function_single' 'int (int, smp_call_func_t, void *, int)'
FunctionDecl 0x1af5210 <line:152:1, col:48> kick_all_cpus_sync 'void (void)' static inline
FunctionDecl 0x1af5360 <line:185:1, col:42> arch_disable_smp_support 'void (void)' extern
FunctionDecl 0x1af5490 <line:187:1, col:33> smp_setup_processor_id 'void (void)'
FunctionDecl 0x1afd7a0 <line:153:1, col:72> __alloc_reserved_percpu 'void *(size_t, size_t)' extern
FunctionDecl 0x1afd8e0 <line:154:1, col:56> is_kernel_percpu_address 'bool (unsigned long)' extern
FunctionDecl 0x1afdca0 <line:161:1, col:63> __alloc_percpu 'void *(size_t, size_t)' extern
FunctionDecl 0x1afdde0 <line:162:1, col:47> free_percpu 'void (void *)' extern
FunctionDecl 0x1afdfa0 <line:163:1, col:50> per_cpu_ptr_to_phys 'phys_addr_t (void *)' extern
FunctionDecl 0x1afe0e0 <line:173:1, col:43> __bad_size_call_parameter 'void (void)' extern
FunctionDecl 0x1afe210 <../include/linux/topology.h:49:1, col:34> arch_update_cpu_topology 'int (void)'
FunctionDecl 0x1afe340 <line:220:1, line:223:1> numa_node_id 'int (void)' static inline
DeclRefExpr 0x1afe4a0 <col:9> 'int ()' Function 0x1afe400 'cpu_to_node' 'int ()'
FunctionDecl 0x1afe400 <<invalid sloc>> cpu_to_node 'int ()'
FunctionDecl 0x1afe600 <../include/linux/topology.h:270:1, line:273:1> numa_mem_id 'int (void)' static inline
DeclRefExpr 0x1afe6a0 <col:9> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
FunctionDecl 0x1b1a370 <line:277:1, line:280:1> cpu_to_mem 'int (int)' static inline
DeclRefExpr 0x1b1a418 <col:9> 'int ()' Function 0x1afe400 'cpu_to_node' 'int ()'
FunctionDecl 0x1b1a680 <line:157:1, line:167:1> allocflags_to_migratetype 'int (gfp_t)' static inline
DeclRefExpr 0x1b1a7f0 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1b1ab80 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
FunctionDecl 0x1b1a750 <<invalid sloc>> WARN_ON 'int ()'
FunctionDecl 0x1b1b1b0 <line:252:1, line:261:1> gfp_zone 'enum zone_type (gfp_t)' static inline
FunctionDecl 0x1b29720 <line:270:1, line:276:1> gfp_zonelist 'int (gfp_t)' static inline
FunctionDecl 0x1b297f0 <<invalid sloc>> IS_ENABLED 'int ()'
FunctionDecl 0x1b29c60 <line:287:1, line:290:1> node_zonelist 'struct zonelist *(int, gfp_t)' static inline
DeclRefExpr 0x1b29da8 <col:42> 'int (gfp_t)' Function 0x1b29720 'gfp_zonelist' 'int (gfp_t)'
FunctionDecl 0x1b2a0e0 <line:293:1, col:67> arch_free_page 'void (struct page *, int)' static inline
FunctionDecl 0x1b2a2d0 <line:296:1, col:68> arch_alloc_page 'void (struct page *, int)' static inline
FunctionDecl 0x1b2a670 <line:299:1, line:301:57> __alloc_pages_nodemask 'struct page *(gfp_t, unsigned int, struct zonelist *, nodemask_t *)'
FunctionDecl 0x1b2a980 <line:303:1, line:308:1> __alloc_pages 'struct page *(gfp_t, unsigned int, struct zonelist *)' static inline
DeclRefExpr 0x1b2aa38 <col:9> 'struct page *(gfp_t, unsigned int, struct zonelist *, nodemask_t *)' Function 0x1b2a670 '__alloc_pages_nodemask' 'struct page *(gfp_t, unsigned int, struct zonelist *, nodemask_t *)'
FunctionDecl 0x1b2af20 <../include/linux/gfp.h:310:1, line:318:1> alloc_pages_node 'struct page *(int, gfp_t, unsigned int)' static inline
DeclRefExpr 0x1b2b088 <col:9> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
DeclRefExpr 0x1b2b148 <col:9> 'struct page *(gfp_t, unsigned int, struct zonelist *)' Function 0x1b2a980 '__alloc_pages' 'struct page *(gfp_t, unsigned int, struct zonelist *)'
DeclRefExpr 0x1b2b1c0 <col:40> 'struct zonelist *(int, gfp_t)' Function 0x1b29c60 'node_zonelist' 'struct zonelist *(int, gfp_t)'
FunctionDecl 0x1b2b5f0 <line:320:1, line:326:1> alloc_pages_exact_node 'struct page *(int, gfp_t, unsigned int)' static inline
DeclRefExpr 0x1b2b848 <col:27> 'int (int, enum node_states)' Function 0x1a22170 'node_state' 'int (int, enum node_states)'
DeclRefExpr 0x1b2bb70 <col:9> 'struct page *(gfp_t, unsigned int, struct zonelist *)' Function 0x1b2a980 '__alloc_pages' 'struct page *(gfp_t, unsigned int, struct zonelist *)'
DeclRefExpr 0x1b2bbe8 <col:40> 'struct zonelist *(int, gfp_t)' Function 0x1b29c60 'node_zonelist' 'struct zonelist *(int, gfp_t)'
FunctionDecl 0x1b2bf40 <line:351:1, col:73> __get_free_pages 'unsigned long (gfp_t, unsigned int)' extern
FunctionDecl 0x1b2c0c0 <line:352:1, col:52> get_zeroed_page 'unsigned long (gfp_t)' extern
FunctionDecl 0x1b2c300 <line:354:1, col:52> alloc_pages_exact 'void *(size_t, gfp_t)'
FunctionDecl 0x1b2c4c0 <line:355:1, col:46> free_pages_exact 'void (void *, size_t)'
FunctionDecl 0x1b2c790 <line:357:1, col:65> alloc_pages_exact_nid 'void *(int, size_t, gfp_t)'
FunctionDecl 0x1b2d290 <line:365:1, col:63> __free_pages 'void (struct page *, unsigned int)' extern
FunctionDecl 0x1b2d490 <line:366:1, col:62> free_pages 'void (unsigned long, unsigned int)' extern
FunctionDecl 0x1b2d670 <line:367:1, col:59> free_hot_cold_page 'void (struct page *, int)' extern
FunctionDecl 0x1b2d8d0 <line:368:1, col:69> free_hot_cold_page_list 'void (struct list_head *, int)' extern
FunctionDecl 0x1b2dab0 <line:370:1, col:74> __free_memcg_kmem_pages 'void (struct page *, unsigned int)' extern
FunctionDecl 0x1b2dc70 <line:371:1, col:73> free_memcg_kmem_pages 'void (unsigned long, unsigned int)' extern
FunctionDecl 0x1b2ddb0 <line:376:1, col:26> page_alloc_init 'void (void)'
FunctionDecl 0x1b2e070 <line:377:1, col:67> drain_zone_pages 'void (struct zone *, struct per_cpu_pages *)'
FunctionDecl 0x1b2e1b0 <line:378:1, col:26> drain_all_pages 'void (void)'
FunctionDecl 0x1b2e2e0 <line:379:1, col:35> drain_local_pages 'void (void *)'
FunctionDecl 0x1b2e510 <line:391:1, col:43> gfp_pfmemalloc_allowed 'bool (gfp_t)'
FunctionDecl 0x1b2e650 <line:393:1, col:38> pm_restrict_gfp_mask 'void (void)' extern
FunctionDecl 0x1b2e780 <line:394:1, col:37> pm_restore_gfp_mask 'void (void)' extern
FunctionDecl 0x1b2e8b0 <line:399:1, line:402:1> pm_suspended_storage 'bool (void)' static inline
FunctionDecl 0x1b2ea60 <../include/linux/kmemleak.h:61:1, line:63:1> kmemleak_init 'void (void)' static inline
FunctionDecl 0x1b2edc0 <line:64:1, line:67:1> kmemleak_alloc 'void (const void *, size_t, int, gfp_t)' static inline
FunctionDecl 0x1b2f1d0 <line:68:1, line:72:1> kmemleak_alloc_recursive 'void (const void *, size_t, int, unsigned long, gfp_t)' static inline
FunctionDecl 0x1b33220 <line:73:1, line:75:1> kmemleak_alloc_percpu 'void (const void *, size_t)' static inline
FunctionDecl 0x1b333c0 <line:76:1, line:78:1> kmemleak_free 'void (const void *)' static inline
FunctionDecl 0x1b33590 <line:79:1, line:81:1> kmemleak_free_part 'void (const void *, size_t)' static inline
FunctionDecl 0x1b33770 <line:82:1, line:84:1> kmemleak_free_recursive 'void (const void *, unsigned long)' static inline
FunctionDecl 0x1b338d0 <line:85:1, line:87:1> kmemleak_free_percpu 'void (const void *)' static inline
FunctionDecl 0x1b33a20 <line:88:1, line:90:1> kmemleak_not_leak 'void (const void *)' static inline
FunctionDecl 0x1b33b70 <line:91:1, line:93:1> kmemleak_ignore 'void (const void *)' static inline
FunctionDecl 0x1b33e50 <line:94:1, line:96:1> kmemleak_scan_area 'void (const void *, size_t, gfp_t)' static inline
FunctionDecl 0x1b34020 <line:97:1, line:99:1> kmemleak_erase 'void (void **)' static inline
FunctionDecl 0x1b34170 <line:100:1, line:102:1> kmemleak_no_scan 'void (const void *)' static inline
FunctionDecl 0x1b34470 <../include/linux/slab.h:113:1, col:27> slab_is_available 'int (void)'
FunctionDecl 0x1b34a20 <col:1, line:117:20> kmem_cache_create 'struct kmem_cache *(const char *, size_t, size_t, unsigned long, void (*)(void *))'
FunctionDecl 0x1b35110 <line:118:1, line:120:56> kmem_cache_create_memcg 'struct kmem_cache *(struct mem_cgroup *, const char *, size_t, size_t, unsigned long, void (*)(void *), struct kmem_cache *)'
FunctionDecl 0x1b35310 <line:121:1, col:44> kmem_cache_destroy 'void (struct kmem_cache *)'
FunctionDecl 0x1b354e0 <line:122:1, col:42> kmem_cache_shrink 'int (struct kmem_cache *)'
FunctionDecl 0x1b35730 <line:123:1, col:49> kmem_cache_free 'void (struct kmem_cache *, void *)'
FunctionDecl 0x1b35950 <line:142:1, col:24> kfree 'void (const void *)'
FunctionDecl 0x1b35a90 <line:143:1, col:25> kzfree 'void (const void *)'
FunctionDecl 0x1b35c50 <line:144:1, col:26> ksize 'size_t (const void *)'
FunctionDecl 0x1b35e70 <line:259:1, line:299:1> kmalloc_index 'int (size_t)' static inline
DeclRefExpr 0x1b387f0 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1b38750 <<invalid sloc>> BUG 'int ()'
FunctionDecl 0x1b38ac0 <../include/linux/slab.h:302:1, col:41> __kmalloc 'void *(size_t, gfp_t)'
FunctionDecl 0x1b38d20 <line:303:1, col:56> kmem_cache_alloc 'void *(struct kmem_cache *, gfp_t)'
FunctionDecl 0x1b38ff0 <line:309:1, line:312:1> __kmalloc_node 'void *(size_t, gfp_t, int)' static inline
DeclRefExpr 0x1b390f0 <col:9> 'void *(size_t, gfp_t)' Function 0x1b38ac0 '__kmalloc' 'void *(size_t, gfp_t)'
FunctionDecl 0x1b394e0 <../include/linux/slab.h:314:1, line:317:1> kmem_cache_alloc_node 'void *(struct kmem_cache *, gfp_t, int)' static inline
DeclRefExpr 0x1b395e0 <col:9> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
FunctionDecl 0x1b399b0 <../include/linux/slab.h:338:1, line:342:1> kmem_cache_alloc_trace 'void *(struct kmem_cache *, gfp_t, size_t)' static inline
DeclRefExpr 0x1b39ab0 <col:9> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
FunctionDecl 0x1b39ea0 <../include/linux/slab.h:344:1, line:350:1> kmem_cache_alloc_node_trace 'void *(struct kmem_cache *, gfp_t, int, size_t)' static inline
DeclRefExpr 0x1b39fa0 <col:9> 'void *(struct kmem_cache *, gfp_t, int)' Function 0x1b394e0 'kmem_cache_alloc_node' 'void *(struct kmem_cache *, gfp_t, int)'
FunctionDecl 0x1b3a3a0 <../include/linux/slab.h:361:1, line:370:1> kmalloc_order 'void *(size_t, gfp_t, unsigned int)' static inline
DeclRefExpr 0x1b3a6e0 <col:17> 'unsigned long (gfp_t, unsigned int)' Function 0x1b2bf40 '__get_free_pages' 'unsigned long (gfp_t, unsigned int)'
DeclRefExpr 0x1b3a898 <col:2> 'void (const void *, size_t, int, gfp_t)' Function 0x1b2edc0 'kmemleak_alloc' 'void (const void *, size_t, int, gfp_t)'
FunctionDecl 0x1b3aca0 <../include/linux/slab.h:375:1, line:379:1> kmalloc_order_trace 'void *(size_t, gfp_t, unsigned int)' static inline
DeclRefExpr 0x1b3ada0 <col:9> 'void *(size_t, gfp_t, unsigned int)' Function 0x1b3a3a0 'kmalloc_order' 'void *(size_t, gfp_t, unsigned int)'
FunctionDecl 0x1b3b090 <../include/linux/slab.h:382:1, line:386:1> kmalloc_large 'void *(size_t, gfp_t)' static inline
DeclRefExpr 0x1b3b2b0 <col:23> 'int ()' Function 0x1b3b210 'get_order' 'int ()'
DeclRefExpr 0x1b3b390 <col:9> 'void *(size_t, gfp_t, unsigned int)' Function 0x1b3aca0 'kmalloc_order_trace' 'void *(size_t, gfp_t, unsigned int)'
FunctionDecl 0x1b3b210 <<invalid sloc>> get_order 'int ()'
FunctionDecl 0x1b3b690 <../include/linux/slab.h:441:1, line:459:1> kmalloc 'void *(size_t, gfp_t)' static inline
DeclRefExpr 0x1b3b780 <col:6> '<builtin fn type>' Function 0x18c8750 '__builtin_constant_p' 'int ()'
DeclRefExpr 0x1b3bb08 <col:16> 'int (size_t)' Function 0x1b35e70 'kmalloc_index' 'int (size_t)'
DeclRefExpr 0x1b3be50 <col:9> 'void *(size_t, gfp_t)' Function 0x1b38ac0 '__kmalloc' 'void *(size_t, gfp_t)'
FunctionDecl 0x1b3c020 <line:466:1, line:479:1> kmalloc_size 'int (int)' static inline
FunctionDecl 0x1b3c670 <../include/linux/slab.h:481:1, line:496:1> kmalloc_node 'void *(size_t, gfp_t, int)' static inline
DeclRefExpr 0x1b3cc40 <col:9> 'void *(size_t, gfp_t, int)' Function 0x1b38ff0 '__kmalloc_node' 'void *(size_t, gfp_t, int)'
FunctionDecl 0x1b3eae0 <line:543:1, col:43> memcg_update_all_caches 'int (int)'
FunctionDecl 0x1b3ee80 <line:546:1, col:56> cache_show 'int (struct kmem_cache *, struct seq_file *)'
FunctionDecl 0x1b3f060 <line:547:1, col:46> print_slabinfo_header 'void (struct seq_file *)'
FunctionDecl 0x1b3f360 <line:555:1, line:560:1> kmalloc_array 'void *(size_t, size_t, gfp_t)' static inline
DeclRefExpr 0x1b3f710 <col:9> 'void *(size_t, gfp_t)' Function 0x1b38ac0 '__kmalloc' 'void *(size_t, gfp_t)'
FunctionDecl 0x1b3fa60 <line:568:1, line:571:1> kcalloc 'void *(size_t, size_t, gfp_t)' static inline
DeclRefExpr 0x1b3fb18 <col:9> 'void *(size_t, size_t, gfp_t)' Function 0x1b3f360 'kmalloc_array' 'void *(size_t, size_t, gfp_t)'
FunctionDecl 0x1b3fec0 <line:623:1, line:626:1> kmem_cache_zalloc 'void *(struct kmem_cache *, gfp_t)' static inline
DeclRefExpr 0x1b3ff70 <col:9> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
FunctionDecl 0x1b40290 <../include/linux/slab.h:633:1, line:636:1> kzalloc 'void *(size_t, gfp_t)' static inline
DeclRefExpr 0x1b40340 <col:9> 'void *(size_t, gfp_t)' Function 0x1b3b690 'kmalloc' 'void *(size_t, gfp_t)'
FunctionDecl 0x1b406f0 <line:644:1, line:647:1> kzalloc_node 'void *(size_t, gfp_t, int)' static inline
DeclRefExpr 0x1b407a8 <col:9> 'void *(size_t, gfp_t, int)' Function 0x1b3c670 'kmalloc_node' 'void *(size_t, gfp_t, int)'
FunctionDecl 0x1b40af0 <line:652:1, line:655:1> kmem_cache_size 'unsigned int (struct kmem_cache *)' static inline
FunctionDecl 0x1b40df0 <../include/linux/kdev_t.h:23:1, line:26:1> old_valid_dev 'int (dev_t)' static inline
FunctionDecl 0x1b41460 <line:28:1, line:31:1> old_encode_dev 'u16 (dev_t)' static inline
FunctionDecl 0x1b41a90 <line:33:1, line:36:1> old_decode_dev 'dev_t (u16)' static inline
FunctionDecl 0x1b41ec0 <line:38:1, line:41:1> new_valid_dev 'int (dev_t)' static inline
FunctionDecl 0x1b420a0 <line:43:1, line:48:1> new_encode_dev 'u32 (dev_t)' static inline
FunctionDecl 0x17a4c10 <line:50:1, line:55:1> new_decode_dev 'dev_t (u32)' static inline
FunctionDecl 0x17a5330 <line:57:1, line:60:1> huge_valid_dev 'int (dev_t)' static inline
FunctionDecl 0x17a5550 <line:62:1, line:65:1> huge_encode_dev 'u64 (dev_t)' static inline
DeclRefExpr 0x17a55f8 <col:9> 'u32 (dev_t)' Function 0x1b420a0 'new_encode_dev' 'u32 (dev_t)'
FunctionDecl 0x17a5840 <line:67:1, line:70:1> huge_decode_dev 'dev_t (u64)' static inline
DeclRefExpr 0x17a58e8 <col:9> 'dev_t (u32)' Function 0x17a4c10 'new_decode_dev' 'dev_t (u32)'
FunctionDecl 0x17a5ab0 <line:72:1, line:75:1> sysv_valid_dev 'int (dev_t)' static inline
FunctionDecl 0x17a6170 <line:77:1, line:80:1> sysv_encode_dev 'u32 (dev_t)' static inline
FunctionDecl 0x17a6770 <line:82:1, line:85:1> sysv_major 'unsigned int (u32)' static inline
FunctionDecl 0x17a69f0 <line:87:1, line:90:1> sysv_minor 'unsigned int (u32)' static inline
FunctionDecl 0x17a6cd0 <../include/linux/bit_spinlock.h:15:1, line:35:1> bit_spin_lock 'void (int, unsigned long *)' static inline
DeclRefExpr 0x17a6d80 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x17a6fc0 <../include/linux/bit_spinlock.h:40:1, line:51:1> bit_spin_trylock 'int (int, unsigned long *)' static inline
DeclRefExpr 0x17a7070 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x17a72b0 <line:56:1, line:66:1> bit_spin_unlock 'void (int, unsigned long *)' static inline
DeclRefExpr 0x17a7360 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x17a7560 <../include/linux/bit_spinlock.h:73:1, line:83:1> __bit_spin_unlock 'void (int, unsigned long *)' static inline
DeclRefExpr 0x17a7610 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x17a7810 <../include/linux/bit_spinlock.h:88:1, line:97:1> bit_spin_is_locked 'int (int, unsigned long *)' static inline
FunctionDecl 0x17a7e50 <line:43:1, line:47:1> INIT_HLIST_BL_NODE 'void (struct hlist_bl_node *)' static inline
FunctionDecl 0x17a82f0 <../include/linux/list_bl.h:51:1, line:54:1> hlist_bl_unhashed 'int (const struct hlist_bl_node *)' static inline
FunctionDecl 0x17afb20 <line:56:1, line:60:1> hlist_bl_first 'struct hlist_bl_node *(struct hlist_bl_head *)' static inline
FunctionDecl 0x17aff90 <line:62:1, line:69:1> hlist_bl_set_first 'void (struct hlist_bl_head *, struct hlist_bl_node *)' static inline
FunctionDecl 0x17b0410 <line:71:1, line:74:1> hlist_bl_empty 'int (const struct hlist_bl_head *)' static inline
FunctionDecl 0x17b0820 <line:76:1, line:86:1> hlist_bl_add_head 'void (struct hlist_bl_node *, struct hlist_bl_head *)' static inline
DeclRefExpr 0x17b0958 <col:32> 'struct hlist_bl_node *(struct hlist_bl_head *)' Function 0x17afb20 'hlist_bl_first' 'struct hlist_bl_node *(struct hlist_bl_head *)'
DeclRefExpr 0x17b0e18 <col:2> 'void (struct hlist_bl_head *, struct hlist_bl_node *)' Function 0x17aff90 'hlist_bl_set_first' 'void (struct hlist_bl_head *, struct hlist_bl_node *)'
FunctionDecl 0x17b1050 <line:88:1, line:101:1> __hlist_bl_del 'void (struct hlist_bl_node *)' static inline
FunctionDecl 0x17b1860 <line:103:1, line:108:1> hlist_bl_del 'void (struct hlist_bl_node *)' static inline
DeclRefExpr 0x17b1908 <col:2> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
FunctionDecl 0x17b1dd0 <../include/linux/list_bl.h:110:1, line:116:1> hlist_bl_del_init 'void (struct hlist_bl_node *)' static inline
DeclRefExpr 0x17b1e78 <col:7> 'int (const struct hlist_bl_node *)' Function 0x17a82f0 'hlist_bl_unhashed' 'int (const struct hlist_bl_node *)'
DeclRefExpr 0x17b1fc0 <col:3> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
DeclRefExpr 0x17b2070 <col:3> 'void (struct hlist_bl_node *)' Function 0x17a7e50 'INIT_HLIST_BL_NODE' 'void (struct hlist_bl_node *)'
FunctionDecl 0x17b22c0 <line:118:1, line:121:1> hlist_bl_lock 'void (struct hlist_bl_head *)' static inline
DeclRefExpr 0x17b2368 <col:2> 'void (int, unsigned long *)' Function 0x17a6cd0 'bit_spin_lock' 'void (int, unsigned long *)'
FunctionDecl 0x17b2570 <line:123:1, line:126:1> hlist_bl_unlock 'void (struct hlist_bl_head *)' static inline
DeclRefExpr 0x17b2618 <col:2> 'void (int, unsigned long *)' Function 0x17a7560 '__bit_spin_unlock' 'void (int, unsigned long *)'
FunctionDecl 0x17b2880 <line:128:1, line:131:1> hlist_bl_is_locked 'bool (struct hlist_bl_head *)' static inline
DeclRefExpr 0x17b2928 <col:9> 'int (int, unsigned long *)' Function 0x17a7810 'bit_spin_is_locked' 'int (int, unsigned long *)'
FunctionDecl 0x17b2c50 <../include/linux/rculist_bl.h:10:1, line:18:1> hlist_bl_set_first_rcu 'void (struct hlist_bl_head *, struct hlist_bl_node *)' static inline
DeclRefExpr 0x17b2d20 <col:3> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
FunctionDecl 0x17b3340 <../include/linux/rculist_bl.h:20:1, line:24:1> hlist_bl_first_rcu 'struct hlist_bl_node *(struct hlist_bl_head *)' static inline
DeclRefExpr 0x17b38c0 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
FunctionDecl 0x17b3820 <<invalid sloc>> smp_read_barrier_depends 'int ()'
FunctionDecl 0x1b43850 <../include/linux/rculist_bl.h:46:1, line:52:1> hlist_bl_del_init_rcu 'void (struct hlist_bl_node *)' static inline
DeclRefExpr 0x1b438f8 <col:7> 'int (const struct hlist_bl_node *)' Function 0x17a82f0 'hlist_bl_unhashed' 'int (const struct hlist_bl_node *)'
DeclRefExpr 0x1b439e0 <col:3> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
FunctionDecl 0x1b43d00 <line:73:1, line:77:1> hlist_bl_del_rcu 'void (struct hlist_bl_node *)' static inline
DeclRefExpr 0x1b43da8 <col:2> 'void (struct hlist_bl_node *)' Function 0x17b1050 '__hlist_bl_del' 'void (struct hlist_bl_node *)'
FunctionDecl 0x1b44160 <line:98:1, line:113:1> hlist_bl_add_head_rcu 'void (struct hlist_bl_node *, struct hlist_bl_head *)' static inline
DeclRefExpr 0x1b442d8 <col:10> 'struct hlist_bl_node *(struct hlist_bl_head *)' Function 0x17afb20 'hlist_bl_first' 'struct hlist_bl_node *(struct hlist_bl_head *)'
DeclRefExpr 0x1b44748 <col:2> 'void (struct hlist_bl_head *, struct hlist_bl_node *)' Function 0x17b2c50 'hlist_bl_set_first_rcu' 'void (struct hlist_bl_head *, struct hlist_bl_node *)'
FunctionDecl 0x1b45010 <line:36:1, col:41> lockref_get 'void (struct lockref *)' extern
FunctionDecl 0x1b451e0 <line:37:1, col:49> lockref_get_not_zero 'int (struct lockref *)' extern
FunctionDecl 0x1b45330 <line:38:1, col:48> lockref_get_or_lock 'int (struct lockref *)' extern
FunctionDecl 0x1b45480 <line:39:1, col:48> lockref_put_or_lock 'int (struct lockref *)' extern
FunctionDecl 0x1b455d0 <line:41:1, col:47> lockref_mark_dead 'void (struct lockref *)' extern
FunctionDecl 0x1b45720 <line:42:1, col:49> lockref_get_not_dead 'int (struct lockref *)' extern
FunctionDecl 0x1b45950 <line:45:1, line:48:1> __lockref_is_dead 'int (const struct lockref *)' static inline
FunctionDecl 0x1b469a0 <line:73:1, line:77:1> partial_name_hash 'unsigned long (unsigned long, unsigned long)' static inline
FunctionDecl 0x1b46d80 <line:83:1, line:86:1> end_name_hash 'unsigned long (unsigned long)' static inline
FunctionDecl 0x1b47050 <line:89:1, col:71> full_name_hash 'unsigned int (const unsigned char *, unsigned int)' extern
FunctionDecl 0x1b49ed0 <line:226:1, line:229:1> dname_external 'int (const struct dentry *)' static inline
FunctionDecl 0x1b4a290 <line:234:1, col:58> d_instantiate 'void (struct dentry *, struct inode *)' extern
FunctionDecl 0x1b4a520 <line:235:1, col:76> d_instantiate_unique 'struct dentry *(struct dentry *, struct inode *)' extern
FunctionDecl 0x1b4a720 <line:236:1, col:76> d_materialise_unique 'struct dentry *(struct dentry *, struct inode *)' extern
FunctionDecl 0x1b4a990 <line:237:1, col:69> d_instantiate_no_diralias 'int (struct dentry *, struct inode *)' extern
FunctionDecl 0x1b4aaf0 <line:238:1, col:43> __d_drop 'void (struct dentry *)' extern
FunctionDecl 0x1b4ac40 <line:239:1, col:41> d_drop 'void (struct dentry *)' extern
FunctionDecl 0x1b4ad90 <line:240:1, col:37> d_delete 'void (struct dentry *)' extern
FunctionDecl 0x1b4aff0 <line:241:1, col:81> d_set_d_op 'void (struct dentry *, const struct dentry_operations *)' extern
FunctionDecl 0x1b4b280 <line:244:1, col:68> d_alloc 'struct dentry *(struct dentry *, const struct qstr *)' extern
FunctionDecl 0x1b4b510 <line:245:1, col:80> d_alloc_pseudo 'struct dentry *(struct super_block *, const struct qstr *)' extern
FunctionDecl 0x1b4ec30 <line:246:1, col:70> d_splice_alias 'struct dentry *(struct inode *, struct dentry *)' extern
FunctionDecl 0x1b4ef60 <line:247:1, col:79> d_add_ci 'struct dentry *(struct dentry *, struct inode *, struct qstr *)' extern
FunctionDecl 0x1b4f160 <line:248:1, col:59> d_find_any_alias 'struct dentry *(struct inode *)' extern
FunctionDecl 0x1b4f2d0 <line:249:1, col:53> d_obtain_alias 'struct dentry *(struct inode *)' extern
FunctionDecl 0x1b4f4a0 <line:250:1, col:50> shrink_dcache_sb 'void (struct super_block *)' extern
FunctionDecl 0x1b4f5f0 <line:251:1, col:49> shrink_dcache_parent 'void (struct dentry *)' extern
FunctionDecl 0x1b4f740 <line:252:1, col:58> shrink_dcache_for_umount 'void (struct super_block *)' extern
FunctionDecl 0x1b4f910 <line:253:1, col:40> d_invalidate 'int (struct dentry *)' extern
FunctionDecl 0x1b4fa80 <line:256:1, col:50> d_make_root 'struct dentry *(struct inode *)' extern
FunctionDecl 0x1b4fbd0 <line:259:1, col:39> d_genocide 'void (struct dentry *)' extern
FunctionDecl 0x1b4fdb0 <line:261:1, col:54> d_tmpfile 'void (struct dentry *, struct inode *)' extern
FunctionDecl 0x1b4ff30 <line:263:1, col:50> d_find_alias 'struct dentry *(struct inode *)' extern
FunctionDecl 0x1b50100 <line:264:1, col:43> d_prune_aliases 'void (struct inode *)' extern
FunctionDecl 0x1b50250 <line:267:1, col:42> have_submounts 'int (struct dentry *)' extern
FunctionDecl 0x1b503a0 <line:268:1, col:52> check_submounts_and_drop 'int (struct dentry *)' extern
FunctionDecl 0x1b504f0 <line:273:1, col:37> d_rehash 'void (struct dentry *)' extern
FunctionDecl 0x1b50700 <line:284:1, line:288:1> d_add 'void (struct dentry *, struct inode *)' static inline
DeclRefExpr 0x1b507b0 <col:2> 'void (struct dentry *, struct inode *)' Function 0x1b4a290 'd_instantiate' 'void (struct dentry *, struct inode *)'
DeclRefExpr 0x1b508d8 <col:2> 'void (struct dentry *)' Function 0x1b504f0 'd_rehash' 'void (struct dentry *)'
FunctionDecl 0x1b50b60 <line:298:1, line:305:1> d_add_unique 'struct dentry *(struct dentry *, struct inode *)' static inline
DeclRefExpr 0x1b50cd8 <col:8> 'struct dentry *(struct dentry *, struct inode *)' Function 0x1b4a520 'd_instantiate_unique' 'struct dentry *(struct dentry *, struct inode *)'
DeclRefExpr 0x1b50e50 <col:2> 'void (struct dentry *)' Function 0x1b504f0 'd_rehash' 'void (struct dentry *)'
FunctionDecl 0x1b512c0 <line:307:1, col:67> dentry_update_name_case 'void (struct dentry *, struct qstr *)' extern
FunctionDecl 0x1b51530 <line:310:1, col:52> d_move 'void (struct dentry *, struct dentry *)' extern
FunctionDecl 0x1b517c0 <line:311:1, col:66> d_ancestor 'struct dentry *(struct dentry *, struct dentry *)' extern
FunctionDecl 0x1b51a50 <line:314:1, col:74> d_lookup 'struct dentry *(const struct dentry *, const struct qstr *)' extern
FunctionDecl 0x1b51ce0 <line:315:1, col:71> d_hash_and_lookup 'struct dentry *(struct dentry *, struct qstr *)' extern
FunctionDecl 0x1b51ee0 <line:316:1, col:76> __d_lookup 'struct dentry *(const struct dentry *, const struct qstr *)' extern
FunctionDecl 0x1b52200 <line:317:1, line:318:43> __d_lookup_rcu 'struct dentry *(const struct dentry *, const struct qstr *, unsigned int *)' extern
FunctionDecl 0x1b523e0 <line:320:1, line:323:1> d_count 'unsigned int (const struct dentry *)' static inline
FunctionDecl 0x1b527b0 <line:326:1, col:55> d_validate 'int (struct dentry *, struct dentry *)' extern
FunctionDecl 0x1b53b80 <line:331:1, col:75> dynamic_dname 'char *(struct dentry *, char *, int, const char *, ...)' extern
FunctionDecl 0x1b53de0 <line:332:1, col:55> simple_dname 'char *(struct dentry *, char *, int)' extern
FunctionDecl 0x1b541c0 <line:334:1, col:76> __d_path 'char *(const struct path *, const struct path *, char *, int)' extern
FunctionDecl 0x1b544c0 <line:335:1, col:62> d_absolute_path 'char *(const struct path *, char *, int)' extern
FunctionDecl 0x1b54710 <line:336:1, col:53> d_path 'char *(const struct path *, char *, int)' extern
FunctionDecl 0x1b54960 <line:337:1, col:58> dentry_path_raw 'char *(struct dentry *, char *, int)' extern
FunctionDecl 0x1b54bb0 <line:338:1, col:54> dentry_path 'char *(struct dentry *, char *, int)' extern
FunctionDecl 0x1b54de0 <line:350:1, line:355:1> dget_dlock 'struct dentry *(struct dentry *)' static inline
FunctionDecl 0x1b55180 <line:357:1, line:362:1> dget 'struct dentry *(struct dentry *)' static inline
DeclRefExpr 0x1b55268 <col:3> 'void (struct lockref *)' Function 0x1b45010 'lockref_get' 'void (struct lockref *)'
FunctionDecl 0x1b55540 <line:364:1, col:56> dget_parent 'struct dentry *(struct dentry *)' extern
FunctionDecl 0x1b556c0 <line:373:1, line:376:1> d_unhashed 'int (const struct dentry *)' static inline
DeclRefExpr 0x1b55768 <col:9> 'int (const struct hlist_bl_node *)' Function 0x17a82f0 'hlist_bl_unhashed' 'int (const struct hlist_bl_node *)'
FunctionDecl 0x1b55950 <line:378:1, line:381:1> d_unlinked 'int (const struct dentry *)' static inline
DeclRefExpr 0x1b559f8 <col:9> 'int (const struct dentry *)' Function 0x1b556c0 'd_unhashed' 'int (const struct dentry *)'
FunctionDecl 0x1b55d70 <line:383:1, line:386:1> cant_mount 'int (const struct dentry *)' static inline
FunctionDecl 0x1b56020 <line:388:1, line:393:1> dont_mount 'void (struct dentry *)' static inline
DeclRefExpr 0x1b560c8 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1b56350 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x1b565d0 <line:395:1, col:33> dput 'void (struct dentry *)' extern
FunctionDecl 0x1b567a0 <line:397:1, line:400:1> d_managed 'bool (const struct dentry *)' static inline
FunctionDecl 0x1b56ae0 <line:402:1, line:405:1> d_mountpoint 'bool (const struct dentry *)' static inline
FunctionDecl 0x1b56e70 <line:410:1, line:413:1> __d_set_type 'void (struct dentry *, unsigned int)' static inline
FunctionDecl 0x1b57210 <line:415:1, line:418:1> __d_clear_type 'void (struct dentry *)' static inline
DeclRefExpr 0x1b572b8 <col:2> 'void (struct dentry *, unsigned int)' Function 0x1b56e70 '__d_set_type' 'void (struct dentry *, unsigned int)'
FunctionDecl 0x1b57550 <line:420:1, line:425:1> d_set_type 'void (struct dentry *, unsigned int)' static inline
DeclRefExpr 0x1b57600 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1b577a8 <col:2> 'void (struct dentry *, unsigned int)' Function 0x1b56e70 '__d_set_type' 'void (struct dentry *, unsigned int)'
DeclRefExpr 0x1b578a0 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x1a311a0 <line:427:1, line:430:1> __d_entry_type 'unsigned int (const struct dentry *)' static inline
FunctionDecl 0x1a31420 <line:432:1, line:435:1> d_is_directory 'bool (const struct dentry *)' static inline
DeclRefExpr 0x1a314c8 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
FunctionDecl 0x1a31740 <line:437:1, line:440:1> d_is_autodir 'bool (const struct dentry *)' static inline
DeclRefExpr 0x1a317e8 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
FunctionDecl 0x1a31a00 <line:442:1, line:445:1> d_is_symlink 'bool (const struct dentry *)' static inline
DeclRefExpr 0x1a31aa8 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
FunctionDecl 0x1a31cc0 <line:447:1, line:450:1> d_is_file 'bool (const struct dentry *)' static inline
DeclRefExpr 0x1a31d68 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
FunctionDecl 0x1a31f80 <line:452:1, line:455:1> d_is_negative 'bool (const struct dentry *)' static inline
DeclRefExpr 0x1a32028 <col:9> 'unsigned int (const struct dentry *)' Function 0x1a311a0 '__d_entry_type' 'unsigned int (const struct dentry *)'
FunctionDecl 0x1a32240 <line:457:1, line:460:1> d_is_positive 'bool (const struct dentry *)' static inline
DeclRefExpr 0x1a322e8 <col:10> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
FunctionDecl 0x1a32570 <line:464:1, line:467:1> vfs_pressure_ratio 'unsigned long (unsigned long)' static inline
DeclRefExpr 0x1a32618 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1a327a8 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
FunctionDecl 0x1a32e30 <line:12:1, col:41> path_get 'void (const struct path *)' extern
FunctionDecl 0x1a32f80 <line:13:1, col:41> path_put 'void (const struct path *)' extern
FunctionDecl 0x1a331e0 <line:15:1, line:18:1> path_equal 'int (const struct path *, const struct path *)' static inline
FunctionDecl 0x1a34370 <line:37:1, col:27> __bad_uid 'void (void)' extern
FunctionDecl 0x1a344a0 <line:38:1, col:27> __bad_gid 'void (void)' extern
FunctionDecl 0x1a34960 <line:49:1, line:52:1> __kuid_val 'uid_t (kuid_t)' static inline
FunctionDecl 0x1a34b80 <line:54:1, line:57:1> __kgid_val 'gid_t (kgid_t)' static inline
FunctionDecl 0x1a34e40 <line:70:1, line:73:1> uid_eq 'bool (kuid_t, kuid_t)' static inline
DeclRefExpr 0x1a34ef0 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1a34fc8 <col:29> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
FunctionDecl 0x1b68950 <line:75:1, line:78:1> gid_eq 'bool (kgid_t, kgid_t)' static inline
DeclRefExpr 0x1b68a00 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b68ad8 <col:29> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
FunctionDecl 0x1b68d20 <line:80:1, line:83:1> uid_gt 'bool (kuid_t, kuid_t)' static inline
DeclRefExpr 0x1b68dd0 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b68e80 <col:28> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
FunctionDecl 0x1b690c0 <line:85:1, line:88:1> gid_gt 'bool (kgid_t, kgid_t)' static inline
DeclRefExpr 0x1b69170 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b69220 <col:28> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
FunctionDecl 0x1b69460 <line:90:1, line:93:1> uid_gte 'bool (kuid_t, kuid_t)' static inline
DeclRefExpr 0x1b69510 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b695c0 <col:29> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
FunctionDecl 0x1b69800 <line:95:1, line:98:1> gid_gte 'bool (kgid_t, kgid_t)' static inline
DeclRefExpr 0x1b698b0 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b69960 <col:29> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
FunctionDecl 0x1b69ba0 <line:100:1, line:103:1> uid_lt 'bool (kuid_t, kuid_t)' static inline
DeclRefExpr 0x1b69c50 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b69d00 <col:28> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
FunctionDecl 0x1b69f40 <line:105:1, line:108:1> gid_lt 'bool (kgid_t, kgid_t)' static inline
DeclRefExpr 0x1b69ff0 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6a0a0 <col:28> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
FunctionDecl 0x1b6a2e0 <line:110:1, line:113:1> uid_lte 'bool (kuid_t, kuid_t)' static inline
DeclRefExpr 0x1b6a390 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
DeclRefExpr 0x1b6a440 <col:29> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
FunctionDecl 0x1b6a680 <line:115:1, line:118:1> gid_lte 'bool (kgid_t, kgid_t)' static inline
DeclRefExpr 0x1b6a730 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
DeclRefExpr 0x1b6a7e0 <col:29> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
FunctionDecl 0x1b6a9e0 <line:120:1, line:123:1> uid_valid 'bool (kuid_t)' static inline
DeclRefExpr 0x1b6aa88 <col:10> 'bool (kuid_t, kuid_t)' Function 0x1a34e40 'uid_eq' 'bool (kuid_t, kuid_t)'
FunctionDecl 0x1b6ad80 <line:125:1, line:128:1> gid_valid 'bool (kgid_t)' static inline
DeclRefExpr 0x1b6ae28 <col:10> 'bool (kgid_t, kgid_t)' Function 0x1b68950 'gid_eq' 'bool (kgid_t, kgid_t)'
FunctionDecl 0x1b6b220 <line:152:1, line:155:1> make_kuid 'kuid_t (struct user_namespace *, uid_t)' static inline
FunctionDecl 0x1b6b510 <line:157:1, line:160:1> make_kgid 'kgid_t (struct user_namespace *, gid_t)' static inline
FunctionDecl 0x1b6b800 <line:162:1, line:165:1> from_kuid 'uid_t (struct user_namespace *, kuid_t)' static inline
DeclRefExpr 0x1b6b8b0 <col:9> 'uid_t (kuid_t)' Function 0x1a34960 '__kuid_val' 'uid_t (kuid_t)'
FunctionDecl 0x1b6bb10 <line:167:1, line:170:1> from_kgid 'gid_t (struct user_namespace *, kgid_t)' static inline
DeclRefExpr 0x1b6bbc0 <col:9> 'gid_t (kgid_t)' Function 0x1a34b80 '__kgid_val' 'gid_t (kgid_t)'
FunctionDecl 0x1b6bde0 <line:172:1, line:178:1> from_kuid_munged 'uid_t (struct user_namespace *, kuid_t)' static inline
DeclRefExpr 0x1b6bef8 <col:14> 'uid_t (struct user_namespace *, kuid_t)' Function 0x1b6b800 'from_kuid' 'uid_t (struct user_namespace *, kuid_t)'
FunctionDecl 0x1b6c3d0 <line:180:1, line:186:1> from_kgid_munged 'gid_t (struct user_namespace *, kgid_t)' static inline
DeclRefExpr 0x1b6c4e8 <col:14> 'gid_t (struct user_namespace *, kgid_t)' Function 0x1b6bb10 'from_kgid' 'gid_t (struct user_namespace *, kgid_t)'
FunctionDecl 0x1b6da70 <line:188:1, line:191:1> kuid_has_mapping 'bool (struct user_namespace *, kuid_t)' static inline
FunctionDecl 0x1b6dd10 <line:193:1, line:196:1> kgid_has_mapping 'bool (struct user_namespace *, kgid_t)' static inline
FunctionDecl 0x1b6eb80 <line:34:1, col:43> list_lru_destroy 'void (struct list_lru *)'
FunctionDecl 0x1b6ed50 <line:35:1, col:39> list_lru_init 'int (struct list_lru *)'
FunctionDecl 0x1b6efe0 <line:53:1, col:63> list_lru_add 'bool (struct list_lru *, struct list_head *)'
FunctionDecl 0x1b6f1f0 <line:66:1, col:63> list_lru_del 'bool (struct list_lru *, struct list_head *)'
FunctionDecl 0x1b6f470 <line:77:1, col:64> list_lru_count_node 'unsigned long (struct list_lru *, int)'
FunctionDecl 0x1b6f650 <line:78:1, line:87:1> list_lru_count 'unsigned long (struct list_lru *)' static inline
FunctionDecl 0x1b703e0 <line:112:1, line:114:31> list_lru_walk_node 'unsigned long (struct list_lru *, int, list_lru_walk_cb, void *, unsigned long *)'
FunctionDecl 0x1b70760 <line:116:1, line:130:1> list_lru_walk 'unsigned long (struct list_lru *, list_lru_walk_cb, void *, unsigned long)' static inline
FunctionDecl 0x1b71510 <line:76:1, line:79:1> init_llist_head 'void (struct llist_head *)' static inline
FunctionDecl 0x1b76ea0 <line:158:1, line:161:1> llist_empty 'bool (const struct llist_head *)' static inline
FunctionDecl 0x1b77270 <line:163:1, line:166:1> llist_next 'struct llist_node *(struct llist_node *)' static inline
FunctionDecl 0x1b77640 <line:168:1, line:170:31> llist_add_batch 'bool (struct llist_node *, struct llist_node *, struct llist_head *)' extern
FunctionDecl 0x1b778e0 <line:178:1, line:181:1> llist_add 'bool (struct llist_node *, struct llist_head *)' static inline
DeclRefExpr 0x1b77990 <col:9> 'bool (struct llist_node *, struct llist_node *, struct llist_head *)' Function 0x1b77640 'llist_add_batch' 'bool (struct llist_node *, struct llist_node *, struct llist_head *)'
FunctionDecl 0x1b77ce0 <line:191:1, line:194:1> llist_del_all 'struct llist_node *(struct llist_head *)' static inline
DeclRefExpr 0x1b77e50 <col:9> 'int ()' Function 0x1b77db0 'xchg' 'int ()'
FunctionDecl 0x1b77db0 <<invalid sloc>> xchg 'int ()'
FunctionDecl 0x1b78150 <line:196:1, col:66> llist_del_first 'struct llist_node *(struct llist_head *)' extern
FunctionDecl 0x1b782c0 <line:198:1, col:63> llist_reverse_order 'struct llist_node *(struct llist_node *)'
FunctionDecl 0x1b78400 <../include/linux/radixtree.h:54:1, line:57:1> radix_tree_is_indirect_ptr 'int (void *)' static inline
FunctionDecl 0x1b78ac0 <line:150:1, line:153:1> radix_tree_deref_slot 'void *(void **)' static inline
DeclRefExpr 0x1b78f20 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
FunctionDecl 0x1b79320 <line:165:1, line:169:1> radix_tree_deref_slot_protected 'void *(void **, spinlock_t *)' static inline
FunctionDecl 0x1b79700 <line:178:1, line:181:1> radix_tree_deref_retry 'int (void *)' static inline
DeclRefExpr 0x1b797a8 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
FunctionDecl 0x1b799f0 <line:188:1, line:192:1> radix_tree_exceptional_entry 'int (void *)' static inline
FunctionDecl 0x1b79c90 <line:199:1, line:203:1> radix_tree_exception 'int (void *)' static inline
DeclRefExpr 0x1b79d38 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
FunctionDecl 0x1b7a0b0 <line:213:1, line:217:1> radix_tree_replace_slot 'void (void **, void *)' static inline
DeclRefExpr 0x1b7a220 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1b7a248 <col:9> 'int (void *)' Function 0x1b78400 'radix_tree_is_indirect_ptr' 'int (void *)'
DeclRefExpr 0x1b7a340 <col:3> 'int ()' Function 0x19e5ca0 'smp_wmb' 'int ()'
FunctionDecl 0x1b7a180 <<invalid sloc>> BUG_ON 'int ()'
FunctionDecl 0x1b7a8d0 <line:219:1, col:70> radix_tree_insert 'int (struct radix_tree_root *, unsigned long, void *)'
FunctionDecl 0x1b7ab30 <line:220:1, col:64> radix_tree_lookup 'void *(struct radix_tree_root *, unsigned long)'
FunctionDecl 0x1b86160 <line:221:1, col:70> radix_tree_lookup_slot 'void **(struct radix_tree_root *, unsigned long)'
FunctionDecl 0x1b86340 <line:222:1, col:64> radix_tree_delete 'void *(struct radix_tree_root *, unsigned long)'
FunctionDecl 0x1b866b0 <line:223:1, line:225:53> radix_tree_gang_lookup 'unsigned int (struct radix_tree_root *, void **, unsigned long, unsigned int)'
FunctionDecl 0x1b86af0 <line:226:1, line:228:53> radix_tree_gang_lookup_slot 'unsigned int (struct radix_tree_root *, void ***, unsigned long *, unsigned long, unsigned int)'
FunctionDecl 0x1b86df0 <line:229:1, line:230:48> radix_tree_next_hole 'unsigned long (struct radix_tree_root *, unsigned long, unsigned long)'
FunctionDecl 0x1b87040 <line:231:1, line:232:48> radix_tree_prev_hole 'unsigned long (struct radix_tree_root *, unsigned long, unsigned long)'
FunctionDecl 0x1b87190 <line:233:1, col:38> radix_tree_preload 'int (gfp_t)'
FunctionDecl 0x1b872d0 <line:234:1, col:44> radix_tree_maybe_preload 'int (gfp_t)'
FunctionDecl 0x1b87410 <line:235:1, col:26> radix_tree_init 'void (void)'
FunctionDecl 0x1b876f0 <line:236:1, line:237:41> radix_tree_tag_set 'void *(struct radix_tree_root *, unsigned long, unsigned int)'
FunctionDecl 0x1b87940 <line:238:1, line:239:41> radix_tree_tag_clear 'void *(struct radix_tree_root *, unsigned long, unsigned int)'
FunctionDecl 0x1b87c30 <line:240:1, line:241:41> radix_tree_tag_get 'int (struct radix_tree_root *, unsigned long, unsigned int)'
FunctionDecl 0x1b88030 <line:242:1, line:245:19> radix_tree_gang_lookup_tag 'unsigned int (struct radix_tree_root *, void **, unsigned long, unsigned int, unsigned int)'
FunctionDecl 0x1b88440 <line:246:1, line:249:19> radix_tree_gang_lookup_tag_slot 'unsigned int (struct radix_tree_root *, void ***, unsigned long, unsigned int, unsigned int)'
FunctionDecl 0x1b888d0 <line:250:1, line:253:43> radix_tree_range_tag_if_tagged 'unsigned long (struct radix_tree_root *, unsigned long *, unsigned long, unsigned long, unsigned int, unsigned int)'
FunctionDecl 0x1b88b50 <line:254:1, col:69> radix_tree_tagged 'int (struct radix_tree_root *, unsigned int)'
FunctionDecl 0x1b88db0 <line:255:1, col:78> radix_tree_locate_item 'unsigned long (struct radix_tree_root *, void *)'
FunctionDecl 0x1b88ef0 <line:257:1, line:260:1> radix_tree_preload_end 'void (void)' static inline
DeclRefExpr 0x1b88f90 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1b89480 <line:293:1, line:307:1> radix_tree_iter_init 'void **(struct radix_tree_iter *, unsigned long)' static inline
FunctionDecl 0x1b89a80 <line:322:1, line:323:53> radix_tree_next_chunk 'void **(struct radix_tree_root *, struct radix_tree_iter *, unsigned int)'
FunctionDecl 0x1b89c90 <line:331:1, line:335:1> radix_tree_chunk_size 'unsigned int (struct radix_tree_iter *)' static inline
FunctionDecl 0x1b8c610 <line:348:1, line:380:1> radix_tree_next_slot 'void **(void **, struct radix_tree_iter *, unsigned int)' static inline
DeclRefExpr 0x1b8c890 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1b8cc40 <col:44> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1b8cdc8 <col:22> 'int ()' Function 0x1860410 '__ffs' 'int ()'
DeclRefExpr 0x1b8d368 <col:19> 'unsigned int (struct radix_tree_iter *)' Function 0x1b89c90 'radix_tree_chunk_size' 'unsigned int (struct radix_tree_iter *)'
DeclRefExpr 0x1b8d610 <col:8> 'int ()' Function 0x19b3d50 'likely' 'int ()'
FunctionDecl 0x1b8e230 <line:61:1, col:63> rb_insert_color 'void (struct rb_node *, struct rb_root *)' extern
FunctionDecl 0x1b8e420 <line:62:1, col:56> rb_erase 'void (struct rb_node *, struct rb_root *)' extern
FunctionDecl 0x1b8e670 <line:66:1, col:54> rb_next 'struct rb_node *(const struct rb_node *)' extern
FunctionDecl 0x1b8e7e0 <line:67:1, col:54> rb_prev 'struct rb_node *(const struct rb_node *)' extern
FunctionDecl 0x1b8ea30 <line:68:1, col:55> rb_first 'struct rb_node *(const struct rb_root *)' extern
FunctionDecl 0x1b8eba0 <line:69:1, col:54> rb_last 'struct rb_node *(const struct rb_root *)' extern
FunctionDecl 0x1b8ed10 <line:72:1, col:65> rb_first_postorder 'struct rb_node *(const struct rb_root *)' extern
FunctionDecl 0x1b8ee80 <line:73:1, col:64> rb_next_postorder 'struct rb_node *(const struct rb_node *)' extern
FunctionDecl 0x1b8f180 <line:76:1, line:77:28> rb_replace_node 'void (struct rb_node *, struct rb_node *, struct rb_root *)' extern
FunctionDecl 0x1b8f4f0 <line:79:1, line:86:1> rb_link_node 'void (struct rb_node *, struct rb_node *, struct rb_node **)' static inline
FunctionDecl 0x1b96a60 <line:75:1, line:80:1> get_pid 'struct pid *(struct pid *)' static inline
DeclRefExpr 0x1b96b48 <col:3> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x1b96e30 <line:82:1, col:36> put_pid 'void (struct pid *)' extern
FunctionDecl 0x1b970e0 <line:83:1, col:67> pid_task 'struct task_struct *(struct pid *, enum pid_type)' extern
FunctionDecl 0x1b972e0 <line:84:1, col:71> get_pid_task 'struct task_struct *(struct pid *, enum pid_type)' extern
FunctionDecl 0x1b97570 <line:86:1, col:77> get_task_pid 'struct pid *(struct task_struct *, enum pid_type)' extern
FunctionDecl 0x1b977e0 <line:91:1, col:63> attach_pid 'void (struct task_struct *, enum pid_type)' extern
FunctionDecl 0x1b979d0 <line:92:1, col:63> detach_pid 'void (struct task_struct *, enum pid_type)' extern
FunctionDecl 0x1b97ce0 <line:93:1, line:94:19> change_pid 'void (struct task_struct *, enum pid_type, struct pid *)' extern
FunctionDecl 0x1b97ff0 <line:95:1, line:96:18> transfer_pid 'void (struct task_struct *, struct task_struct *, enum pid_type)' extern
FunctionDecl 0x1b98370 <line:110:1, col:64> find_pid_ns 'struct pid *(int, struct pid_namespace *)' extern
FunctionDecl 0x1b98550 <line:111:1, col:36> find_vpid 'struct pid *(int)' extern
FunctionDecl 0x1b986b0 <line:116:1, col:39> find_get_pid 'struct pid *(int)' extern
FunctionDecl 0x1b98890 <line:117:1, col:62> find_ge_pid 'struct pid *(int, struct pid_namespace *)' extern
FunctionDecl 0x1b98af0 <line:118:1, col:64> next_pidmap 'int (struct pid_namespace *, unsigned int)'
FunctionDecl 0x1b98cf0 <line:120:1, col:54> alloc_pid 'struct pid *(struct pid_namespace *)' extern
FunctionDecl 0x1b98e40 <line:121:1, col:37> free_pid 'void (struct pid *)' extern
FunctionDecl 0x1b99010 <line:122:1, col:60> disable_pid_allocation 'void (struct pid_namespace *)' extern
FunctionDecl 0x1b99200 <line:134:1, line:140:1> ns_of_pid 'struct pid_namespace *(struct pid *)' static inline
FunctionDecl 0x1b99830 <line:148:1, line:151:1> is_child_reaper 'bool (struct pid *)' static inline
FunctionDecl 0x1b99c50 <line:164:1, line:170:1> pid_nr 'pid_t (struct pid *)' static inline
FunctionDecl 0x1b9a1c0 <line:172:1, col:58> pid_nr_ns 'pid_t (struct pid *, struct pid_namespace *)'
FunctionDecl 0x1b9a320 <line:173:1, col:30> pid_vnr 'pid_t (struct pid *)'
FunctionDecl 0x1ba5060 <line:43:1, col:44> current_user_ns 'struct user_namespace *(void)'
FunctionDecl 0x1ba5370 <line:114:1, line:120:1> cap_combine 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' static inline
FunctionDecl 0x1ba5c50 <line:122:1, line:128:1> cap_intersect 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' static inline
FunctionDecl 0x1ba64f0 <line:130:1, line:136:1> cap_drop 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' static inline
FunctionDecl 0x1ba6db0 <line:138:1, line:143:1> cap_invert 'kernel_cap_t (const kernel_cap_t)' static inline
FunctionDecl 0x1ba7550 <line:145:1, line:153:1> cap_isclear 'int (const kernel_cap_t)' static inline
FunctionDecl 0x1ba7c50 <line:162:1, line:167:1> cap_issubset 'int (const kernel_cap_t, const kernel_cap_t)' static inline
DeclRefExpr 0x1ba7da8 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba64f0 'cap_drop' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1ba7f20 <col:9> 'int (const kernel_cap_t)' Function 0x1ba7550 'cap_isclear' 'int (const kernel_cap_t)'
FunctionDecl 0x1ba8110 <line:171:1, line:175:1> cap_is_fs_cap 'int (int)' static inline
FunctionDecl 0x1bb0c40 <../include/linux/capability.h:177:1, line:181:1> cap_drop_fs_set 'kernel_cap_t (const kernel_cap_t)' static inline
DeclRefExpr 0x1bb18f0 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba64f0 'cap_drop' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
FunctionDecl 0x1bb1b40 <line:183:1, line:189:1> cap_raise_fs_set 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' static inline
DeclRefExpr 0x1bb27f0 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5370 'cap_combine' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1bb2840 <col:7> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5c50 'cap_intersect' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
FunctionDecl 0x1bb2a80 <line:191:1, line:195:1> cap_drop_nfsd_set 'kernel_cap_t (const kernel_cap_t)' static inline
DeclRefExpr 0x1bb3730 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba64f0 'cap_drop' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
FunctionDecl 0x1bb3980 <line:197:1, line:203:1> cap_raise_nfsd_set 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' static inline
DeclRefExpr 0x1a163e0 <col:9> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5370 'cap_combine' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
DeclRefExpr 0x1a16430 <col:7> 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)' Function 0x1ba5c50 'cap_intersect' 'kernel_cap_t (const kernel_cap_t, const kernel_cap_t)'
FunctionDecl 0x1a16780 <line:205:1, col:58> has_capability 'bool (struct task_struct *, int)' extern
FunctionDecl 0x1a16a80 <line:206:1, line:207:44> has_ns_capability 'bool (struct task_struct *, struct user_namespace *, int)' extern
FunctionDecl 0x1a16c60 <line:208:1, col:66> has_capability_noaudit 'bool (struct task_struct *, int)' extern
FunctionDecl 0x1a16ec0 <line:209:1, line:210:45> has_ns_capability_noaudit 'bool (struct task_struct *, struct user_namespace *, int)' extern
FunctionDecl 0x1a17010 <line:211:1, col:28> capable 'bool (int)' extern
FunctionDecl 0x1a17260 <line:212:1, col:58> ns_capable 'bool (struct user_namespace *, int)' extern
FunctionDecl 0x1a17510 <line:213:1, col:61> inode_capable 'bool (const struct inode *, int)' extern
FunctionDecl 0x1a17890 <line:214:1, col:88> file_ns_capable 'bool (const struct file *, struct user_namespace *, int)' extern
FunctionDecl 0x1a17b90 <line:217:1, col:97> get_vfs_caps_from_disk 'int (const struct dentry *, struct cpu_vfs_cap_data *)' extern
FunctionDecl 0x1a18040 <line:32:1, line:37:1> sema_init 'void (struct semaphore *, int)' static inline
FunctionDecl 0x1a18c20 <../include/linux/semaphore.h:39:1, col:39> down 'void (struct semaphore *)' extern
FunctionDecl 0x1a18f30 <line:44:1, col:37> up 'void (struct semaphore *)' extern
FunctionDecl 0x1bcc600 <line:68:1, col:47> register_shrinker 'int (struct shrinker *)' extern
FunctionDecl 0x1bcc7d0 <line:69:1, col:50> unregister_shrinker 'void (struct shrinker *)' extern
FunctionDecl 0x1bcce70 <line:18:1, col:58> percpu_down_read 'void (struct percpu_rw_semaphore *)' extern
FunctionDecl 0x1bccfc0 <line:19:1, col:56> percpu_up_read 'void (struct percpu_rw_semaphore *)' extern
FunctionDecl 0x1bcd110 <line:21:1, col:59> percpu_down_write 'void (struct percpu_rw_semaphore *)' extern
FunctionDecl 0x1bcd260 <line:22:1, col:57> percpu_up_write 'void (struct percpu_rw_semaphore *)' extern
FunctionDecl 0x1bcd550 <line:24:1, line:25:42> __percpu_init_rwsem 'int (struct percpu_rw_semaphore *, const char *, struct lock_class_key *)' extern
FunctionDecl 0x1bcd6b0 <line:26:1, col:59> percpu_free_rwsem 'void (struct percpu_rw_semaphore *)' extern
FunctionDecl 0x1bcf5d0 <line:57:1, col:40> get_max_files 'unsigned long (void)' extern
FunctionDecl 0x1beab30 <line:92:1, line:96:1> percpu_counter_init 'int (struct percpu_counter *, s64)' static inline
FunctionDecl 0x1beae50 <line:98:1, line:100:1> percpu_counter_destroy 'void (struct percpu_counter *)' static inline
FunctionDecl 0x1beb0c0 <line:102:1, line:105:1> percpu_counter_set 'void (struct percpu_counter *, s64)' static inline
FunctionDecl 0x1beb390 <line:107:1, line:115:1> percpu_counter_compare 'int (struct percpu_counter *, s64)' static inline
FunctionDecl 0x1beb8b0 <line:117:1, line:123:1> percpu_counter_add 'void (struct percpu_counter *, s64)' static inline
DeclRefExpr 0x1beb960 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1bebab0 <col:28> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1bebd80 <../include/linux/percpu_counter.h:125:1, line:129:1> __percpu_counter_add 'void (struct percpu_counter *, s64, s32)' static inline
DeclRefExpr 0x1bebe38 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
FunctionDecl 0x1bec0d0 <line:131:1, line:134:1> percpu_counter_read 's64 (struct percpu_counter *)' static inline
FunctionDecl 0x1bec2f0 <line:140:1, line:143:1> percpu_counter_read_positive 's64 (struct percpu_counter *)' static inline
FunctionDecl 0x1bec510 <line:145:1, line:148:1> percpu_counter_sum_positive 's64 (struct percpu_counter *)' static inline
DeclRefExpr 0x1bec5b8 <col:9> 's64 (struct percpu_counter *)' Function 0x1bec2f0 'percpu_counter_read_positive' 's64 (struct percpu_counter *)'
FunctionDecl 0x1bec7b0 <line:150:1, line:153:1> percpu_counter_sum 's64 (struct percpu_counter *)' static inline
DeclRefExpr 0x1bec858 <col:9> 's64 (struct percpu_counter *)' Function 0x1bec0d0 'percpu_counter_read' 's64 (struct percpu_counter *)'
FunctionDecl 0x1beca70 <line:155:1, line:158:1> percpu_counter_initialized 'int (struct percpu_counter *)' static inline
FunctionDecl 0x1becc20 <line:162:1, line:165:1> percpu_counter_inc 'void (struct percpu_counter *)' static inline
DeclRefExpr 0x1beccc8 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
FunctionDecl 0x1bece80 <line:167:1, line:170:1> percpu_counter_dec 'void (struct percpu_counter *)' static inline
DeclRefExpr 0x1becf28 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
FunctionDecl 0x1bed180 <line:172:1, line:175:1> percpu_counter_sub 'void (struct percpu_counter *, s64)' static inline
DeclRefExpr 0x1bed230 <col:2> 'void (struct percpu_counter *, s64)' Function 0x1beb8b0 'percpu_counter_add' 'void (struct percpu_counter *, s64)'
FunctionDecl 0x1c01440 <line:40:1, col:73> qtree_write_dquot 'int (struct qtree_mem_dqinfo *, struct dquot *)'
FunctionDecl 0x1c01630 <line:41:1, col:72> qtree_read_dquot 'int (struct qtree_mem_dqinfo *, struct dquot *)'
FunctionDecl 0x1c01820 <line:42:1, col:74> qtree_delete_dquot 'int (struct qtree_mem_dqinfo *, struct dquot *)'
FunctionDecl 0x1c01a10 <line:43:1, col:75> qtree_release_dquot 'int (struct qtree_mem_dqinfo *, struct dquot *)'
FunctionDecl 0x1c01c70 <line:44:1, col:65> qtree_entry_unused 'int (struct qtree_mem_dqinfo *, char *)'
FunctionDecl 0x1c01e50 <line:45:1, line:54:1> qtree_depth 'int (struct qtree_mem_dqinfo *)' static inline
FunctionDecl 0x1c027c0 <line:38:1, line:41:1> __kprojid_val 'projid_t (kprojid_t)' static inline
FunctionDecl 0x1c02a40 <line:50:1, line:53:1> projid_eq 'bool (kprojid_t, kprojid_t)' static inline
DeclRefExpr 0x1c02af0 <col:9> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c02bc8 <col:32> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
FunctionDecl 0x1c02e10 <line:55:1, line:58:1> projid_lt 'bool (kprojid_t, kprojid_t)' static inline
DeclRefExpr 0x1c02ec0 <col:9> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
DeclRefExpr 0x1c02f70 <col:31> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
FunctionDecl 0x1c03170 <line:60:1, line:63:1> projid_valid 'bool (kprojid_t)' static inline
DeclRefExpr 0x1c03218 <col:10> 'bool (kprojid_t, kprojid_t)' Function 0x1c02a40 'projid_eq' 'bool (kprojid_t, kprojid_t)'
FunctionDecl 0x1c081f0 <line:79:1, line:82:1> make_kprojid 'kprojid_t (struct user_namespace *, projid_t)' static inline
FunctionDecl 0x1c084e0 <line:84:1, line:87:1> from_kprojid 'projid_t (struct user_namespace *, kprojid_t)' static inline
DeclRefExpr 0x1c08590 <col:9> 'projid_t (kprojid_t)' Function 0x1c027c0 '__kprojid_val' 'projid_t (kprojid_t)'
FunctionDecl 0x1c087b0 <line:89:1, line:95:1> from_kprojid_munged 'projid_t (struct user_namespace *, kprojid_t)' static inline
DeclRefExpr 0x1c088c8 <col:20> 'projid_t (struct user_namespace *, kprojid_t)' Function 0x1c084e0 'from_kprojid' 'projid_t (struct user_namespace *, kprojid_t)'
FunctionDecl 0x1c08d90 <line:97:1, line:100:1> kprojid_has_mapping 'bool (struct user_namespace *, kprojid_t)' static inline
FunctionDecl 0x1c0a5e0 <line:71:1, col:55> qid_eq 'bool (struct kqid, struct kqid)' extern
FunctionDecl 0x1c0a7c0 <line:72:1, col:55> qid_lt 'bool (struct kqid, struct kqid)' extern
FunctionDecl 0x1c0aa50 <line:73:1, col:66> from_kqid 'qid_t (struct user_namespace *, struct kqid)' extern
FunctionDecl 0x1c0ac40 <line:74:1, col:73> from_kqid_munged 'qid_t (struct user_namespace *, struct kqid)' extern
FunctionDecl 0x1c0ae10 <line:75:1, col:38> qid_valid 'bool (struct kqid)' extern
FunctionDecl 0x1c0b140 <line:91:1, line:111:1> make_kqid 'struct kqid (struct user_namespace *, enum quota_type, qid_t)' static inline
DeclRefExpr 0x1c0b4d8 <col:14> 'kuid_t (struct user_namespace *, uid_t)' Function 0x1b6b220 'make_kuid' 'kuid_t (struct user_namespace *, uid_t)'
DeclRefExpr 0x1c0b730 <col:14> 'kgid_t (struct user_namespace *, gid_t)' Function 0x1b6b510 'make_kgid' 'kgid_t (struct user_namespace *, gid_t)'
DeclRefExpr 0x1c0b990 <col:17> 'kprojid_t (struct user_namespace *, projid_t)' Function 0x1c081f0 'make_kprojid' 'kprojid_t (struct user_namespace *, projid_t)'
DeclRefExpr 0x1c0baf0 <col:3> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1c0be00 <line:119:1, line:138:1> make_kqid_invalid 'struct kqid (enum quota_type)' static inline
DeclRefExpr 0x1c143f0 <col:3> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1c146f0 <line:144:1, line:150:1> make_kqid_uid 'struct kqid (kuid_t)' static inline
FunctionDecl 0x1c14ba0 <line:156:1, line:162:1> make_kqid_gid 'struct kqid (kgid_t)' static inline
FunctionDecl 0x1c15050 <line:168:1, line:174:1> make_kqid_projid 'struct kqid (kprojid_t)' static inline
FunctionDecl 0x1c15ff0 <line:229:1, col:61> mark_info_dirty 'void (struct super_block *, int)' extern
FunctionDecl 0x1c16250 <line:230:1, line:233:1> info_dirty 'int (struct mem_dqinfo *)' static inline
DeclRefExpr 0x1c162f8 <col:9> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1c16d20 <line:255:1, line:258:1> dqstats_inc 'void (unsigned int)' static inline
DeclRefExpr 0x1c16dc8 <col:2> 'void (struct percpu_counter *)' Function 0x1becc20 'percpu_counter_inc' 'void (struct percpu_counter *)'
FunctionDecl 0x1c17040 <line:260:1, line:263:1> dqstats_dec 'void (unsigned int)' static inline
DeclRefExpr 0x1c170e8 <col:2> 'void (struct percpu_counter *)' Function 0x1bece80 'percpu_counter_dec' 'void (struct percpu_counter *)'
FunctionDecl 0x1c1cca0 <line:367:1, line:370:1> dquot_state_flag 'unsigned int (unsigned int, int)' static inline
FunctionDecl 0x1c1cfa0 <line:372:1, line:375:1> dquot_generic_flag 'unsigned int (unsigned int, int)' static inline
FunctionDecl 0x1c1f810 <line:381:1, line:385:1> quota_send_warning 'void (struct kqid, dev_t, const char)' static inline
FunctionDecl 0x1c20060 <line:398:1, col:56> register_quota_format 'int (struct quota_format_type *)'
FunctionDecl 0x1c20230 <line:399:1, col:59> unregister_quota_format 'void (struct quota_format_type *)'
FunctionDecl 0x1c20dd0 <line:300:1, line:301:57> iov_iter_copy_from_user_atomic 'size_t (struct page *, struct iov_iter *, unsigned long, size_t)'
FunctionDecl 0x1c210c0 <line:302:1, line:303:57> iov_iter_copy_from_user 'size_t (struct page *, struct iov_iter *, unsigned long, size_t)'
FunctionDecl 0x1c21330 <line:304:1, col:55> iov_iter_advance 'void (struct iov_iter *, size_t)'
FunctionDecl 0x1c21590 <line:305:1, col:64> iov_iter_fault_in_readable 'int (struct iov_iter *, size_t)'
FunctionDecl 0x1c217c0 <line:306:1, col:58> iov_iter_single_seg_count 'size_t (const struct iov_iter *)'
FunctionDecl 0x1c21bc0 <line:308:1, line:318:1> iov_iter_init 'void (struct iov_iter *, const struct iovec *, unsigned long, size_t, size_t)' static inline
DeclRefExpr 0x1c22048 <col:2> 'void (struct iov_iter *, size_t)' Function 0x1c21330 'iov_iter_advance' 'void (struct iov_iter *, size_t)'
FunctionDecl 0x1c22300 <line:320:1, line:323:1> iov_iter_count 'size_t (struct iov_iter *)' static inline
FunctionDecl 0x1c28990 <line:400:1, line:402:39> pagecache_write_begin 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **)'
FunctionDecl 0x1c28e50 <line:404:1, line:406:36> pagecache_write_end 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *)'
FunctionDecl 0x1c2a6e0 <line:479:1, col:58> mapping_tagged 'int (struct address_space *, int)'
FunctionDecl 0x1c2a8c0 <line:484:1, line:488:1> mapping_mapped 'int (struct address_space *)' static inline
DeclRefExpr 0x1c2ab58 <col:4> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x1c2ada0 <line:496:1, line:499:1> mapping_writably_mapped 'int (struct address_space *)' static inline
FunctionDecl 0x1c2f9a0 <line:615:1, line:618:1> inode_unhashed 'int (struct inode *)' static inline
DeclRefExpr 0x1c2fa48 <col:9> 'int (const struct hlist_node *)' Function 0x19651a0 'hlist_unhashed' 'int (const struct hlist_node *)'
FunctionDecl 0x1c2ffa0 <line:643:1, col:59> lock_two_nondirectories 'void (struct inode *, struct inode *)'
FunctionDecl 0x1c30190 <line:644:1, col:61> unlock_two_nondirectories 'void (struct inode *, struct inode *)'
FunctionDecl 0x1c30370 <line:656:1, line:677:1> i_size_read 'loff_t (const struct inode *)' static inline
FunctionDecl 0x1c30690 <line:684:1, line:699:1> i_size_write 'void (struct inode *, loff_t)' static inline
FunctionDecl 0x1c30960 <line:706:1, line:709:1> i_uid_read 'uid_t (const struct inode *)' static inline
DeclRefExpr 0x1c30a08 <col:9> 'uid_t (struct user_namespace *, kuid_t)' Function 0x1b6b800 'from_kuid' 'uid_t (struct user_namespace *, kuid_t)'
FunctionDecl 0x1c30c80 <line:711:1, line:714:1> i_gid_read 'gid_t (const struct inode *)' static inline
DeclRefExpr 0x1c30d28 <col:9> 'gid_t (struct user_namespace *, kgid_t)' Function 0x1b6bb10 'from_kgid' 'gid_t (struct user_namespace *, kgid_t)'
FunctionDecl 0x1c31060 <line:716:1, line:719:1> i_uid_write 'void (struct inode *, uid_t)' static inline
DeclRefExpr 0x1c31180 <col:17> 'kuid_t (struct user_namespace *, uid_t)' Function 0x1b6b220 'make_kuid' 'kuid_t (struct user_namespace *, uid_t)'
FunctionDecl 0x1c31430 <line:721:1, line:724:1> i_gid_write 'void (struct inode *, gid_t)' static inline
DeclRefExpr 0x1c31550 <col:17> 'kgid_t (struct user_namespace *, gid_t)' Function 0x1b6b510 'make_kgid' 'kgid_t (struct user_namespace *, gid_t)'
FunctionDecl 0x1c31780 <line:726:1, line:729:1> iminor 'unsigned int (const struct inode *)' static inline
FunctionDecl 0x1c31b90 <../include/linux/fs.h:731:1, line:734:1> imajor 'unsigned int (const struct inode *)' static inline
FunctionDecl 0x1c31f60 <../include/linux/fs.h:736:1, col:55> I_BDEV 'struct block_device *(struct inode *)' extern
FunctionDecl 0x1c32880 <line:763:1, line:767:1> ra_has_index 'int (struct file_ra_state *, unsigned long)' static inline
FunctionDecl 0x1c33e00 <line:820:1, line:824:1> get_file 'struct file *(struct file *)' static inline
DeclRefExpr 0x1c33ea8 <col:2> 'void (atomic_long_t *)' Function 0x19b6730 'atomic_long_inc' 'void (atomic_long_t *)'
FunctionDecl 0x1c34130 <line:861:1, col:56> file_take_write 'void (struct file *)' static inline
FunctionDecl 0x1c342a0 <line:862:1, col:59> file_release_write 'void (struct file *)' static inline
FunctionDecl 0x1c34410 <line:863:1, col:57> file_reset_write 'void (struct file *)' static inline
FunctionDecl 0x1c34580 <line:864:1, col:57> file_check_state 'void (struct file *)' static inline
FunctionDecl 0x1c34770 <line:865:1, line:868:1> file_check_writeable 'int (struct file *)' static inline
FunctionDecl 0x1c36190 <line:926:1, col:59> locks_start_grace 'void (struct net *, struct lock_manager *)'
FunctionDecl 0x1c36370 <line:927:1, col:43> locks_end_grace 'void (struct lock_manager *)'
FunctionDecl 0x1c36540 <line:928:1, col:32> locks_in_grace 'int (struct net *)'
FunctionDecl 0x1c43800 <../include/linux/fs.h:992:1, col:66> send_sigio 'void (struct fown_struct *, int, int)' extern
FunctionDecl 0x1c43b00 <line:1033:1, line:1036:1> fcntl_getlk 'int (struct file *, struct flock *)' static inline
FunctionDecl 0x1c43ef0 <../include/linux/fs.h:1038:1, line:1042:1> fcntl_setlk 'int (unsigned int, struct file *, unsigned int, struct flock *)' static inline
FunctionDecl 0x1c44280 <../include/linux/fs.h:1045:1, line:1048:1> fcntl_getlk64 'int (struct file *, struct flock64 *)' static inline
FunctionDecl 0x1c44670 <../include/linux/fs.h:1050:1, line:1054:1> fcntl_setlk64 'int (unsigned int, struct file *, unsigned int, struct flock64 *)' static inline
FunctionDecl 0x1c449e0 <../include/linux/fs.h:1056:1, line:1059:1> fcntl_setlease 'int (unsigned int, struct file *, long)' static inline
FunctionDecl 0x1c44ba0 <line:1061:1, line:1064:1> fcntl_getlease 'int (struct file *)' static inline
FunctionDecl 0x1c44d50 <line:1066:1, line:1069:1> locks_init_lock 'void (struct file_lock *)' static inline
FunctionDecl 0x1c44f70 <line:1071:1, line:1074:1> __locks_copy_lock 'void (struct file_lock *, struct file_lock *)' static inline
FunctionDecl 0x1c451a0 <line:1076:1, line:1079:1> locks_copy_lock 'void (struct file_lock *, struct file_lock *)' static inline
FunctionDecl 0x1c45440 <line:1081:1, line:1084:1> locks_remove_posix 'void (struct file *, fl_owner_t)' static inline
FunctionDecl 0x1c455e0 <line:1086:1, line:1089:1> locks_remove_flock 'void (struct file *)' static inline
FunctionDecl 0x1c45880 <line:1091:1, line:1094:1> posix_test_lock 'void (struct file *, struct file_lock *)' static inline
FunctionDecl 0x1c45bd0 <line:1096:1, line:1100:1> posix_lock_file 'int (struct file *, struct file_lock *, struct file_lock *)' static inline
FunctionDecl 0x1c45ec0 <../include/linux/fs.h:1102:1, line:1105:1> posix_lock_file_wait 'int (struct file *, struct file_lock *)' static inline
FunctionDecl 0x1c46120 <../include/linux/fs.h:1107:1, line:1110:1> posix_unblock_lock 'int (struct file_lock *)' static inline
FunctionDecl 0x1c46380 <../include/linux/fs.h:1112:1, line:1115:1> vfs_test_lock 'int (struct file *, struct file_lock *)' static inline
FunctionDecl 0x1c46770 <line:1117:1, line:1121:1> vfs_lock_file 'int (struct file *, unsigned int, struct file_lock *, struct file_lock *)' static inline
FunctionDecl 0x1c469f0 <../include/linux/fs.h:1123:1, line:1126:1> vfs_cancel_lock 'int (struct file *, struct file_lock *)' static inline
FunctionDecl 0x1c46c40 <line:1128:1, line:1132:1> flock_lock_file_wait 'int (struct file *, struct file_lock *)' static inline
FunctionDecl 0x1c46fb0 <../include/linux/fs.h:1134:1, line:1137:1> __break_lease 'int (struct inode *, unsigned int, unsigned int)' static inline
FunctionDecl 0x1c4a7b0 <line:1139:1, line:1142:1> lease_get_mtime 'void (struct inode *, struct timespec *)' static inline
FunctionDecl 0x1c4aaf0 <line:1144:1, line:1148:1> generic_setlease 'int (struct file *, long, struct file_lock **)' static inline
FunctionDecl 0x1c4add0 <../include/linux/fs.h:1150:1, line:1154:1> vfs_setlease 'int (struct file *, long, struct file_lock **)' static inline
FunctionDecl 0x1c4b030 <../include/linux/fs.h:1156:1, line:1159:1> lease_modify 'int (struct file_lock **, int)' static inline
FunctionDecl 0x1c4b3a0 <../include/linux/fs.h:1161:1, line:1165:1> lock_may_read 'int (struct inode *, loff_t, unsigned long)' static inline
FunctionDecl 0x1c4b650 <line:1167:1, line:1171:1> lock_may_write 'int (struct inode *, loff_t, unsigned long)' static inline
FunctionDecl 0x1c4bd80 <line:1187:1, col:74> fasync_helper 'int (int, struct file *, int, struct fasync_struct **)' extern
FunctionDecl 0x1c4c130 <line:1188:1, col:117> fasync_insert_entry 'struct fasync_struct *(int, struct file *, struct fasync_struct **, struct fasync_struct *)' extern
FunctionDecl 0x1c4c3b0 <line:1189:1, col:70> fasync_remove_entry 'int (struct file *, struct fasync_struct **)' extern
FunctionDecl 0x1c4c570 <line:1190:1, col:47> fasync_alloc 'struct fasync_struct *(void)' extern
FunctionDecl 0x1c4c740 <line:1191:1, col:47> fasync_free 'void (struct fasync_struct *)' extern
FunctionDecl 0x1c4ca20 <line:1194:1, col:58> kill_fasync 'void (struct fasync_struct **, int, int)' extern
FunctionDecl 0x1c4cdb0 <line:1196:1, col:80> __f_setown 'int (struct file *, struct pid *, enum pid_type, int)' extern
FunctionDecl 0x1c4d0b0 <line:1197:1, col:68> f_setown 'int (struct file *, unsigned long, int)' extern
FunctionDecl 0x1c4d210 <line:1198:1, col:39> f_delown 'void (struct file *)' extern
FunctionDecl 0x1c4d3a0 <line:1199:1, col:40> f_getown 'pid_t (struct file *)' extern
FunctionDecl 0x1c4d570 <line:1200:1, col:48> send_sigurg 'int (struct fown_struct *)' extern
FunctionDecl 0x1c50a70 <line:1330:1, col:62> current_fs_time 'struct timespec (struct super_block *)' extern
FunctionDecl 0x1c50c40 <line:1336:1, col:54> __sb_end_write 'void (struct super_block *, int)'
FunctionDecl 0x1c50f30 <line:1337:1, col:66> __sb_start_write 'int (struct super_block *, int, bool)'
FunctionDecl 0x1c510c0 <line:1346:1, line:1349:1> sb_end_write 'void (struct super_block *)' static inline
DeclRefExpr 0x1c51168 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
FunctionDecl 0x1c51390 <line:1358:1, line:1361:1> sb_end_pagefault 'void (struct super_block *)' static inline
DeclRefExpr 0x1c51438 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
FunctionDecl 0x1c51610 <line:1370:1, line:1373:1> sb_end_intwrite 'void (struct super_block *)' static inline
DeclRefExpr 0x1c516b8 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
FunctionDecl 0x1c51890 <line:1394:1, line:1397:1> sb_start_write 'void (struct super_block *)' static inline
DeclRefExpr 0x1c51938 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
FunctionDecl 0x1c51c10 <line:1399:1, line:1402:1> sb_start_write_trylock 'int (struct super_block *)' static inline
DeclRefExpr 0x1c51cb8 <col:9> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
FunctionDecl 0x1c51ef0 <line:1423:1, line:1426:1> sb_start_pagefault 'void (struct super_block *)' static inline
DeclRefExpr 0x1c51f98 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
FunctionDecl 0x1c52190 <line:1441:1, line:1444:1> sb_start_intwrite 'void (struct super_block *)' static inline
DeclRefExpr 0x1c52238 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
FunctionDecl 0x1c524b0 <line:1447:1, col:61> inode_owner_or_capable 'bool (const struct inode *)' extern
FunctionDecl 0x1c52820 <line:1452:1, col:69> vfs_create 'int (struct inode *, struct dentry *, umode_t, bool)' extern
FunctionDecl 0x1c52b30 <line:1453:1, col:62> vfs_mkdir 'int (struct inode *, struct dentry *, umode_t)' extern
FunctionDecl 0x1c52eb0 <line:1454:1, col:69> vfs_mknod 'int (struct inode *, struct dentry *, umode_t, dev_t)' extern
FunctionDecl 0x1c531c0 <line:1455:1, col:69> vfs_symlink 'int (struct inode *, struct dentry *, const char *)' extern
FunctionDecl 0x1c54600 <line:1456:1, col:86> vfs_link 'int (struct dentry *, struct inode *, struct dentry *, struct inode **)' extern
FunctionDecl 0x1c54880 <line:1457:1, col:53> vfs_rmdir 'int (struct inode *, struct dentry *)' extern
FunctionDecl 0x1c54b90 <line:1458:1, col:71> vfs_unlink 'int (struct inode *, struct dentry *, struct inode **)' extern
FunctionDecl 0x1c54fd0 <line:1459:1, col:104> vfs_rename 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)' extern
FunctionDecl 0x1c55140 <line:1464:1, col:48> dentry_unhash 'void (struct dentry *)' extern
FunctionDecl 0x1c55430 <line:1469:1, line:1470:16> inode_init_owner 'void (struct inode *, const struct inode *, umode_t)' extern
FunctionDecl 0x1c55b50 <line:1481:1, line:1482:36> fiemap_fill_next_extent 'int (struct fiemap_extent_info *, u64, u64, u64, u32)'
FunctionDecl 0x1c55dc0 <line:1483:1, col:72> fiemap_check_flags 'int (struct fiemap_extent_info *, u32)'
FunctionDecl 0x1c63930 <line:1585:1, line:1588:36> rw_copy_check_uvector 'ssize_t (int, const struct iovec *, unsigned long, unsigned long, struct iovec *, struct iovec **)'
FunctionDecl 0x1c63c20 <line:1590:1, col:71> vfs_read 'ssize_t (struct file *, char *, size_t, loff_t *)' extern
FunctionDecl 0x1c63f00 <line:1591:1, col:78> vfs_write 'ssize_t (struct file *, const char *, size_t, loff_t *)' extern
FunctionDecl 0x1c64290 <line:1592:1, line:1593:26> vfs_readv 'ssize_t (struct file *, const struct iovec *, unsigned long, loff_t *)' extern
FunctionDecl 0x1c64580 <line:1594:1, line:1595:26> vfs_writev 'ssize_t (struct file *, const struct iovec *, unsigned long, loff_t *)' extern
FunctionDecl 0x1c67080 <line:1750:1, col:51> __mark_inode_dirty 'void (struct inode *, int)' extern
FunctionDecl 0x1c671e0 <line:1751:1, line:1754:1> mark_inode_dirty 'void (struct inode *)' static inline
DeclRefExpr 0x1c67288 <col:2> 'void (struct inode *, int)' Function 0x1c67080 '__mark_inode_dirty' 'void (struct inode *, int)'
FunctionDecl 0x1c67640 <line:1756:1, line:1759:1> mark_inode_dirty_sync 'void (struct inode *)' static inline
DeclRefExpr 0x1c676e8 <col:2> 'void (struct inode *, int)' Function 0x1c67080 '__mark_inode_dirty' 'void (struct inode *, int)'
FunctionDecl 0x1c6c420 <line:1761:1, col:42> inc_nlink 'void (struct inode *)' extern
FunctionDecl 0x1c6c570 <line:1762:1, col:43> drop_nlink 'void (struct inode *)' extern
FunctionDecl 0x1c6c6c0 <line:1763:1, col:44> clear_nlink 'void (struct inode *)' extern
FunctionDecl 0x1c6c8d0 <line:1764:1, col:62> set_nlink 'void (struct inode *, unsigned int)' extern
FunctionDecl 0x1c6ca30 <line:1766:1, line:1770:1> inode_inc_link_count 'void (struct inode *)' static inline
DeclRefExpr 0x1c6cad8 <col:2> 'void (struct inode *)' Function 0x1c6c420 'inc_nlink' 'void (struct inode *)'
DeclRefExpr 0x1c6cbb8 <col:2> 'void (struct inode *)' Function 0x1c671e0 'mark_inode_dirty' 'void (struct inode *)'
FunctionDecl 0x1c6cd40 <line:1772:1, line:1776:1> inode_dec_link_count 'void (struct inode *)' static inline
DeclRefExpr 0x1c6cde8 <col:2> 'void (struct inode *)' Function 0x1c6c570 'drop_nlink' 'void (struct inode *)'
DeclRefExpr 0x1c6ce98 <col:2> 'void (struct inode *)' Function 0x1c671e0 'mark_inode_dirty' 'void (struct inode *)'
FunctionDecl 0x1c6d050 <line:1786:1, line:1791:1> inode_inc_iversion 'void (struct inode *)' static inline
DeclRefExpr 0x1c6d0f8 <col:8> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1c6d288 <col:8> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x1c6d6e0 <line:1800:1, col:44> touch_atime 'void (const struct path *)' extern
FunctionDecl 0x1c6d830 <line:1801:1, line:1805:1> file_accessed 'void (struct file *)' static inline
DeclRefExpr 0x1c6da00 <col:3> 'void (const struct path *)' Function 0x1c6d6e0 'touch_atime' 'void (const struct path *)'
FunctionDecl 0x1c6dd00 <line:1807:1, col:66> sync_inode 'int (struct inode *, struct writeback_control *)'
FunctionDecl 0x1c6dee0 <line:1808:1, col:54> sync_inode_metadata 'int (struct inode *, int)'
FunctionDecl 0x1c6f0c0 <line:1838:1, line:1839:66> mount_ns 'struct dentry *(struct file_system_type *, int, void *, int (*)(struct super_block *, void *, int))' extern
FunctionDecl 0x1c6f680 <line:1840:1, line:1842:54> mount_bdev 'struct dentry *(struct file_system_type *, int, const char *, void *, int (*)(struct super_block *, void *, int))' extern
FunctionDecl 0x1c6fb00 <line:1843:1, line:1845:54> mount_single 'struct dentry *(struct file_system_type *, int, void *, int (*)(struct super_block *, void *, int))' extern
FunctionDecl 0x1c6ff80 <line:1846:1, line:1848:54> mount_nodev 'struct dentry *(struct file_system_type *, int, void *, int (*)(struct super_block *, void *, int))' extern
FunctionDecl 0x1c70210 <line:1849:1, col:75> mount_subtree 'struct dentry *(struct vfsmount *, const char *)' extern
FunctionDecl 0x1c723e0 <line:1850:1, col:51> generic_shutdown_super 'void (struct super_block *)'
FunctionDecl 0x1c72530 <line:1851:1, col:45> kill_block_super 'void (struct super_block *)'
FunctionDecl 0x1c72680 <line:1852:1, col:44> kill_anon_super 'void (struct super_block *)'
FunctionDecl 0x1c727d0 <line:1853:1, col:46> kill_litter_super 'void (struct super_block *)'
FunctionDecl 0x1c72920 <line:1854:1, col:45> deactivate_super 'void (struct super_block *)'
FunctionDecl 0x1c72a70 <line:1855:1, col:52> deactivate_locked_super 'void (struct super_block *)'
FunctionDecl 0x1c72cc0 <line:1856:1, col:53> set_anon_super 'int (struct super_block *, void *)'
FunctionDecl 0x1c72eb0 <line:1857:1, col:26> get_anon_bdev 'int (dev_t *)'
FunctionDecl 0x1c73030 <line:1858:1, col:26> free_anon_bdev 'void (dev_t)'
FunctionDecl 0x1c73710 <line:1859:1, line:1862:25> sget 'struct super_block *(struct file_system_type *, int (*)(struct super_block *, void *), int (*)(struct super_block *, void *), int, void *)'
FunctionDecl 0x1c73b60 <line:1863:1, line:1866:15> mount_pseudo 'struct dentry *(struct file_system_type *, char *, const struct super_operations *, const struct dentry_operations *, unsigned long)' extern
FunctionDecl 0x1c73d50 <line:1885:1, col:57> register_filesystem 'int (struct file_system_type *)' extern
FunctionDecl 0x1c73ea0 <line:1886:1, col:59> unregister_filesystem 'int (struct file_system_type *)' extern
FunctionDecl 0x1c74110 <line:1887:1, col:78> kern_mount_data 'struct vfsmount *(struct file_system_type *, void *)' extern
FunctionDecl 0x1c742f0 <line:1889:1, col:46> kern_unmount 'void (struct vfsmount *)' extern
FunctionDecl 0x1c744c0 <line:1890:1, col:45> may_umount_tree 'int (struct vfsmount *)' extern
FunctionDecl 0x1c74610 <line:1891:1, col:40> may_umount 'int (struct vfsmount *)' extern
FunctionDecl 0x1c74990 <line:1892:1, col:85> do_mount 'long (const char *, const char *, const char *, unsigned long, void *)' extern
FunctionDecl 0x1c74b20 <line:1893:1, col:53> collect_mounts 'struct vfsmount *(struct path *)' extern
FunctionDecl 0x1c74c70 <line:1894:1, col:52> drop_collected_mounts 'void (struct vfsmount *)' extern
FunctionDecl 0x1c75180 <line:1895:1, line:1896:23> iterate_mounts 'int (int (*)(struct vfsmount *, void *), void *, struct vfsmount *)' extern
FunctionDecl 0x1c753f0 <line:1897:1, col:54> vfs_statfs 'int (struct path *, struct kstatfs *)' extern
FunctionDecl 0x1c75640 <line:1898:1, col:61> user_statfs 'int (const char *, struct kstatfs *)' extern
FunctionDecl 0x1c75890 <line:1899:1, col:43> fd_statfs 'int (int, struct kstatfs *)' extern
FunctionDecl 0x1c75ae0 <line:1900:1, col:45> vfs_ustat 'int (dev_t, struct kstatfs *)' extern
FunctionDecl 0x1c75c40 <line:1901:1, col:50> freeze_super 'int (struct super_block *)' extern
FunctionDecl 0x1c75d90 <line:1902:1, col:48> thaw_super 'int (struct super_block *)' extern
FunctionDecl 0x1c75f60 <line:1903:1, col:41> our_mnt 'bool (struct vfsmount *)' extern
FunctionDecl 0x1c76130 <line:1904:1, col:55> fs_fully_visible 'bool (struct file_system_type *)' extern
FunctionDecl 0x1c76270 <line:1906:1, col:30> current_umask 'int (void)' extern
FunctionDecl 0x1c78150 <line:1908:1, col:39> ihold 'void (struct inode *)' extern
FunctionDecl 0x1c782a0 <line:1909:1, col:32> iput 'void (struct inode *)' extern
FunctionDecl 0x1c78500 <line:2001:1, line:2004:1> locks_mandatory_locked 'int (struct inode *)' static inline
FunctionDecl 0x1c78960 <line:2006:1, line:2011:1> locks_mandatory_area 'int (int, struct inode *, struct file *, loff_t, size_t)' static inline
FunctionDecl 0x1c78b30 <line:2013:1, line:2016:1> __mandatory_lock 'int (struct inode *)' static inline
FunctionDecl 0x1c78ce0 <line:2018:1, line:2021:1> mandatory_lock 'int (struct inode *)' static inline
FunctionDecl 0x1c78e90 <line:2023:1, line:2026:1> locks_verify_locked 'int (struct inode *)' static inline
FunctionDecl 0x1c791e0 <line:2028:1, line:2032:1> locks_verify_truncate 'int (struct inode *, struct file *, size_t)' static inline
FunctionDecl 0x1c794a0 <line:2034:1, line:2037:1> break_lease 'int (struct inode *, unsigned int)' static inline
FunctionDecl 0x1c796e0 <line:2039:1, line:2042:1> break_deleg 'int (struct inode *, unsigned int)' static inline
FunctionDecl 0x1c799b0 <line:2044:1, line:2047:1> try_break_deleg 'int (struct inode *, struct inode **)' static inline
FunctionDecl 0x1c79bf0 <line:2049:1, line:2053:1> break_deleg_wait 'int (struct inode **)' static inline
DeclRefExpr 0x1c79c98 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1c7a270 <line:2066:1, col:47> vfs_truncate 'long (struct path *, loff_t)' extern
FunctionDecl 0x1c7a5f0 <line:2067:1, line:2068:27> do_truncate 'int (struct dentry *, loff_t, unsigned int, struct file *)' extern
FunctionDecl 0x1c7a970 <line:2069:1, line:2070:14> do_fallocate 'int (struct file *, int, loff_t, loff_t)' extern
FunctionDecl 0x1c7acd0 <line:2071:1, line:2072:16> do_sys_open 'long (int, const char *, int, umode_t)' extern
FunctionDecl 0x1c7b070 <line:2073:1, col:67> file_open_name 'struct file *(struct filename *, int, umode_t)' extern
FunctionDecl 0x1c7b370 <line:2074:1, col:57> filp_open 'struct file *(const char *, int, umode_t)' extern
FunctionDecl 0x1c7b710 <line:2075:1, line:2076:25> file_open_root 'struct file *(struct dentry *, struct vfsmount *, const char *, int)' extern
FunctionDecl 0x1c7ba40 <line:2077:1, col:79> dentry_open 'struct file *(const struct path *, int, const struct cred *)' extern
FunctionDecl 0x1c7bc20 <line:2078:1, col:51> filp_close 'int (struct file *, fl_owner_t)' extern
FunctionDecl 0x1c7be00 <line:2080:1, col:52> getname 'struct filename *(const char *)' extern
FunctionDecl 0x1c7c4b0 <line:2086:1, line:2088:15> finish_open 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)' extern
FunctionDecl 0x1c7c730 <line:2089:1, col:67> finish_no_open 'int (struct file *, struct dentry *)' extern
FunctionDecl 0x1c7c990 <line:2093:1, col:66> ioctl_preallocate 'int (struct file *, void *)' extern
FunctionDecl 0x1c7cdf0 <line:2101:1, col:48> final_putname 'void (struct filename *)' extern
FunctionDecl 0x1c7cf40 <line:2129:1, col:52> bd_forget 'void (struct inode *)' static inline
FunctionDecl 0x1c7d130 <line:2130:1, col:72> sync_blockdev 'int (struct block_device *)' static inline
FunctionDecl 0x1c7d360 <line:2131:1, col:58> kill_bdev 'void (struct block_device *)' static inline
FunctionDecl 0x1c7d4d0 <line:2132:1, col:64> invalidate_bdev 'void (struct block_device *)' static inline
FunctionDecl 0x1c7d6e0 <line:2134:1, line:2137:1> freeze_bdev 'struct super_block *(struct block_device *)' static inline
FunctionDecl 0x1c7da10 <../include/linux/fs.h:2139:1, line:2142:1> thaw_bdev 'int (struct block_device *, struct super_block *)' static inline
FunctionDecl 0x1c7def0 <line:2144:1, line:2146:1> iterate_bdevs 'void (void (*)(struct block_device *, void *), void *)' static inline
FunctionDecl 0x1c7e060 <line:2148:1, line:2151:1> sb_is_blkdev_sb 'int (struct super_block *)' static inline
FunctionDecl 0x1c7e210 <line:2153:1, col:48> sync_filesystem 'int (struct super_block *)' extern
FunctionDecl 0x1c7e6e0 <line:2186:1, col:73> alloc_chrdev_region 'int (dev_t *, unsigned int, unsigned int, const char *)' extern
FunctionDecl 0x1c7e9c0 <line:2187:1, col:64> register_chrdev_region 'int (dev_t, unsigned int, const char *)' extern
FunctionDecl 0x1c7edc0 <line:2188:1, line:2190:43> __register_chrdev 'int (unsigned int, unsigned int, unsigned int, const char *, const struct file_operations *)' extern
FunctionDecl 0x1c7f0e0 <line:2191:1, line:2192:41> __unregister_chrdev 'void (unsigned int, unsigned int, unsigned int, const char *)' extern
FunctionDecl 0x1c7f330 <line:2193:1, col:53> unregister_chrdev_region 'void (dev_t, unsigned int)' extern
FunctionDecl 0x1c7f5b0 <line:2194:1, col:48> chrdev_show 'void (struct seq_file *, off_t)' extern
FunctionDecl 0x1c7f890 <line:2196:1, line:2200:1> register_chrdev 'int (unsigned int, const char *, const struct file_operations *)' static inline
DeclRefExpr 0x1c7f948 <col:9> 'int (unsigned int, unsigned int, unsigned int, const char *, const struct file_operations *)' Function 0x1c7edc0 '__register_chrdev' 'int (unsigned int, unsigned int, unsigned int, const char *, const struct file_operations *)'
FunctionDecl 0x1c7fd00 <line:2202:1, line:2205:1> unregister_chrdev 'void (unsigned int, const char *)' static inline
DeclRefExpr 0x1c7fdb0 <col:2> 'void (unsigned int, unsigned int, unsigned int, const char *)' Function 0x1c7f0e0 '__unregister_chrdev' 'void (unsigned int, unsigned int, unsigned int, const char *)'
FunctionDecl 0x1c813d0 <line:2222:1, col:62> init_special_inode 'void (struct inode *, umode_t, dev_t)' extern
FunctionDecl 0x1c81530 <line:2225:1, col:42> make_bad_inode 'void (struct inode *)' extern
FunctionDecl 0x1c81680 <line:2226:1, col:39> is_bad_inode 'int (struct inode *)' extern
FunctionDecl 0x1c81960 <line:2246:1, line:2247:32> invalidate_mapping_pages 'unsigned long (struct address_space *, unsigned long, unsigned long)'
FunctionDecl 0x1c81ac0 <line:2249:1, line:2254:1> invalidate_remote_inode 'void (struct inode *)' static inline
DeclRefExpr 0x1c81c30 <col:6> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c81e00 <col:32> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x1c82000 <col:6> 'int ()' Function 0x1c81f60 'S_ISLNK' 'int ()'
DeclRefExpr 0x1c82138 <col:3> 'unsigned long (struct address_space *, unsigned long, unsigned long)' Function 0x1c81960 'invalidate_mapping_pages' 'unsigned long (struct address_space *, unsigned long, unsigned long)'
FunctionDecl 0x1c81b90 <<invalid sloc>> S_ISREG 'int ()'
FunctionDecl 0x1c81d60 <<invalid sloc>> S_ISDIR 'int ()'
FunctionDecl 0x1c81f60 <<invalid sloc>> S_ISLNK 'int ()'
FunctionDecl 0x1c82420 <line:2255:1, col:65> invalidate_inode_pages2 'int (struct address_space *)' extern
FunctionDecl 0x1c82700 <line:2256:1, line:2257:33> invalidate_inode_pages2_range 'int (struct address_space *, unsigned long, unsigned long)' extern
FunctionDecl 0x1c828e0 <line:2258:1, col:47> write_inode_now 'int (struct inode *, int)' extern
FunctionDecl 0x1c82a40 <line:2259:1, col:53> filemap_fdatawrite 'int (struct address_space *)' extern
FunctionDecl 0x1c82b90 <line:2260:1, col:48> filemap_flush 'int (struct address_space *)' extern
FunctionDecl 0x1c82ce0 <line:2261:1, col:52> filemap_fdatawait 'int (struct address_space *)' extern
FunctionDecl 0x1c82fc0 <line:2262:1, line:2263:19> filemap_fdatawait_range 'int (struct address_space *, loff_t, loff_t)' extern
FunctionDecl 0x1c83120 <line:2264:1, col:64> filemap_write_and_wait 'int (struct address_space *)' extern
FunctionDecl 0x1c83360 <line:2265:1, line:2266:39> filemap_write_and_wait_range 'int (struct address_space *, loff_t, loff_t)' extern
FunctionDecl 0x1c836d0 <line:2267:1, line:2268:44> __filemap_fdatawrite_range 'int (struct address_space *, loff_t, loff_t, int)' extern
FunctionDecl 0x1c83930 <line:2269:1, line:2270:29> filemap_fdatawrite_range 'int (struct address_space *, loff_t, loff_t)' extern
FunctionDecl 0x1c83c00 <line:2272:1, line:2273:19> vfs_fsync_range 'int (struct file *, loff_t, loff_t, int)' extern
FunctionDecl 0x1c83e70 <line:2274:1, col:53> vfs_fsync 'int (struct file *, int)' extern
FunctionDecl 0x1c84160 <line:2275:1, col:74> generic_write_sync 'int (struct file *, loff_t, loff_t)' extern
FunctionDecl 0x1c842b0 <line:2276:1, col:32> emergency_sync 'void (void)' extern
FunctionDecl 0x1c843e0 <line:2277:1, col:35> emergency_remount 'void (void)' extern
FunctionDecl 0x1c846e0 <line:2281:1, col:74> notify_change 'int (struct dentry *, struct iattr *, struct inode **)' extern
FunctionDecl 0x1c848c0 <line:2282:1, col:48> inode_permission 'int (struct inode *, int)' extern
FunctionDecl 0x1c84aa0 <line:2283:1, col:50> generic_permission 'int (struct inode *, int)' extern
FunctionDecl 0x1c84c80 <line:2285:1, line:2288:1> execute_ok 'bool (struct inode *)' static inline
FunctionDecl 0x1c85010 <line:2290:1, line:2293:1> file_inode 'struct inode *(struct file *)' static inline
FunctionDecl 0x1c852b0 <line:2295:1, line:2300:1> file_start_write 'void (struct file *)' static inline
DeclRefExpr 0x1c85358 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c85380 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c855a0 <col:2> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c855c8 <col:19> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
FunctionDecl 0x1c858d0 <line:2302:1, line:2307:1> file_start_write_trylock 'bool (struct file *)' static inline
DeclRefExpr 0x1c85978 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c859a0 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c85ba8 <col:9> 'int (struct super_block *, int, bool)' Function 0x1c50f30 '__sb_start_write' 'int (struct super_block *, int, bool)'
DeclRefExpr 0x1c85bd0 <col:26> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
FunctionDecl 0x1c85e90 <line:2309:1, line:2314:1> file_end_write 'void (struct file *)' static inline
DeclRefExpr 0x1c85f38 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1c85f60 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c86128 <col:2> 'void (struct super_block *, int)' Function 0x1c50c40 '__sb_end_write' 'void (struct super_block *, int)'
DeclRefExpr 0x1c86150 <col:17> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
FunctionDecl 0x1c86390 <line:2332:1, line:2335:1> get_write_access 'int (struct inode *)' static inline
DeclRefExpr 0x1c86438 <col:9> 'int (atomic_t *)' Function 0x19b2620 'atomic_inc_unless_negative' 'int (atomic_t *)'
FunctionDecl 0x1c866e0 <../include/linux/fs.h:2336:1, line:2340:1> deny_write_access 'int (struct file *)' static inline
DeclRefExpr 0x1c86808 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1c868d0 <col:9> 'int (atomic_t *)' Function 0x19b40e0 'atomic_dec_unless_positive' 'int (atomic_t *)'
FunctionDecl 0x1c86b50 <../include/linux/fs.h:2341:1, line:2344:1> put_write_access 'void (struct inode *)' static inline
DeclRefExpr 0x1c86bf8 <col:2> 'int ()' Function 0x19b8310 'atomic_dec' 'int ()'
FunctionDecl 0x1c86dc0 <line:2345:1, line:2349:1> allow_write_access 'void (struct file *)' static inline
DeclRefExpr 0x1c86ea8 <col:3> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
DeclRefExpr 0x1c86ed0 <col:15> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
FunctionDecl 0x1c87110 <line:2350:1, line:2353:1> inode_is_open_for_write 'bool (const struct inode *)' static inline
DeclRefExpr 0x1c871b8 <col:9> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x1c87460 <line:2366:1, line:2369:1> i_readcount_dec 'void (struct inode *)' static inline
FunctionDecl 0x1c875f0 <line:2370:1, line:2373:1> i_readcount_inc 'void (struct inode *)' static inline
FunctionDecl 0x1c87830 <line:2375:1, col:36> do_pipe_flags 'int (int *, int)' extern
FunctionDecl 0x1c87ba0 <line:2377:1, col:68> kernel_read 'int (struct file *, loff_t, char *, unsigned long)' extern
FunctionDecl 0x1c87f20 <line:2378:1, col:72> kernel_write 'ssize_t (struct file *, const char *, size_t, loff_t)' extern
FunctionDecl 0x1c88110 <line:2379:1, col:44> open_exec 'struct file *(const char *)' extern
FunctionDecl 0x1c882f0 <line:2382:1, col:54> is_subdir 'int (struct dentry *, struct dentry *)' extern
FunctionDecl 0x1c88560 <line:2383:1, col:54> path_is_under 'int (struct path *, struct path *)' extern
FunctionDecl 0x1c88840 <line:2390:1, col:70> vfs_llseek 'loff_t (struct file *, loff_t, int)' extern
FunctionDecl 0x1c88ab0 <line:2392:1, col:66> inode_init_always 'int (struct super_block *, struct inode *)' extern
FunctionDecl 0x1c88c10 <line:2393:1, col:43> inode_init_once 'void (struct inode *)' extern
FunctionDecl 0x1c88de0 <line:2394:1, col:66> address_space_init_once 'void (struct address_space *)' extern
FunctionDecl 0x1c88fd0 <line:2395:1, col:43> igrab 'struct inode *(struct inode *)' extern
FunctionDecl 0x1c8aa80 <line:2396:1, col:49> iunique 'ino_t (struct super_block *, ino_t)' extern
FunctionDecl 0x1c8abe0 <line:2397:1, col:48> inode_needs_sync 'int (struct inode *)' extern
FunctionDecl 0x1c8ad30 <line:2398:1, col:52> generic_delete_inode 'int (struct inode *)' extern
FunctionDecl 0x1c8ae80 <line:2399:1, line:2402:1> generic_drop_inode 'int (struct inode *)' static inline
DeclRefExpr 0x1c8b018 <col:28> 'int (struct inode *)' Function 0x1c2f9a0 'inode_unhashed' 'int (struct inode *)'
FunctionDecl 0x1c8b670 <line:2404:1, line:2406:13> ilookup5_nowait 'struct inode *(struct super_block *, unsigned long, int (*)(struct inode *, void *), void *)' extern
FunctionDecl 0x1c8ba80 <line:2407:1, line:2408:50> ilookup5 'struct inode *(struct super_block *, unsigned long, int (*)(struct inode *, void *), void *)' extern
FunctionDecl 0x1c8bd10 <line:2409:1, col:71> ilookup 'struct inode *(struct super_block *, unsigned long)' extern
FunctionDecl 0x1c8c370 <line:2411:1, col:152> iget5_locked 'struct inode *(struct super_block *, unsigned long, int (*)(struct inode *, void *), int (*)(struct inode *, void *), void *)' extern
FunctionDecl 0x1c8c570 <line:2412:1, col:70> iget_locked 'struct inode *(struct super_block *, unsigned long)' extern
FunctionDecl 0x1c8ca00 <line:2413:1, col:107> insert_inode_locked4 'int (struct inode *, unsigned long, int (*)(struct inode *, void *), void *)' extern
FunctionDecl 0x1c8cb70 <line:2414:1, col:46> insert_inode_locked 'int (struct inode *)' extern
FunctionDecl 0x1c8ccc0 <line:2418:1, col:76> lockdep_annotate_inode_mutex_key 'void (struct inode *)' static inline
FunctionDecl 0x1c8ce50 <line:2420:1, col:44> unlock_new_inode 'void (struct inode *)' extern
FunctionDecl 0x1c8cfc0 <line:2421:1, col:38> get_next_ino 'unsigned int (void)' extern
FunctionDecl 0x1c8d110 <line:2423:1, col:40> __iget 'void (struct inode *)' extern
FunctionDecl 0x1c8d260 <line:2424:1, col:39> iget_failed 'void (struct inode *)' extern
FunctionDecl 0x1c8d3b0 <line:2425:1, col:39> clear_inode 'void (struct inode *)' extern
FunctionDecl 0x1c8d500 <line:2426:1, col:43> __destroy_inode 'void (struct inode *)' extern
FunctionDecl 0x1c8d670 <line:2427:1, col:61> new_inode_pseudo 'struct inode *(struct super_block *)' extern
FunctionDecl 0x1c8d7e0 <line:2428:1, col:54> new_inode 'struct inode *(struct super_block *)' extern
FunctionDecl 0x1c8d930 <line:2429:1, col:50> free_inode_nonrcu 'void (struct inode *)' extern
FunctionDecl 0x1c8da80 <line:2430:1, col:46> should_remove_suid 'int (struct dentry *)' extern
FunctionDecl 0x1c8dbd0 <line:2431:1, col:42> file_remove_suid 'int (struct file *)' extern
FunctionDecl 0x1c8de20 <line:2433:1, col:70> __insert_inode_hash 'void (struct inode *, unsigned long)' extern
FunctionDecl 0x1c8df80 <line:2434:1, line:2437:1> insert_inode_hash 'void (struct inode *)' static inline
DeclRefExpr 0x1c8e028 <col:2> 'void (struct inode *, unsigned long)' Function 0x1c8de20 '__insert_inode_hash' 'void (struct inode *, unsigned long)'
FunctionDecl 0x1c8e290 <line:2439:1, col:47> __remove_inode_hash 'void (struct inode *)' extern
FunctionDecl 0x1c8e3e0 <line:2440:1, line:2444:1> remove_inode_hash 'void (struct inode *)' static inline
DeclRefExpr 0x1c8e488 <col:7> 'int (struct inode *)' Function 0x1c2f9a0 'inode_unhashed' 'int (struct inode *)'
DeclRefExpr 0x1c8e558 <col:3> 'void (struct inode *)' Function 0x1c8e290 '__remove_inode_hash' 'void (struct inode *)'
FunctionDecl 0x1c8e700 <line:2446:1, col:50> inode_sb_list_add 'void (struct inode *)' extern
FunctionDecl 0x1c8e950 <line:2452:1, col:52> set_blocksize 'int (struct block_device *, int)' extern
FunctionDecl 0x1c8eb90 <line:2453:1, col:54> sb_set_blocksize 'int (struct super_block *, int)' extern
FunctionDecl 0x1c8ed70 <line:2454:1, col:54> sb_min_blocksize 'int (struct super_block *, int)' extern
FunctionDecl 0x1c8ef60 <line:2456:1, col:68> generic_file_mmap 'int (struct file *, struct vm_area_struct *)' extern
FunctionDecl 0x1c8f150 <line:2457:1, col:77> generic_file_readonly_mmap 'int (struct file *, struct vm_area_struct *)' extern
FunctionDecl 0x1c8f4c0 <line:2458:1, line:2459:36> generic_file_remap_pages 'int (struct vm_area_struct *, unsigned long, unsigned long, unsigned long)' extern
FunctionDecl 0x1c8f790 <line:2460:1, col:113> file_read_actor 'int (read_descriptor_t *, struct page *, unsigned long, unsigned long)' extern
FunctionDecl 0x1c8fb10 <line:2461:1, col:82> generic_write_checks 'int (struct file *, loff_t *, size_t *, int)'
FunctionDecl 0x1c8fe00 <line:2462:1, col:97> generic_file_aio_read 'ssize_t (struct kiocb *, const struct iovec *, unsigned long, loff_t)' extern
FunctionDecl 0x1c90190 <line:2463:1, line:2464:11> __generic_file_aio_write 'ssize_t (struct kiocb *, const struct iovec *, unsigned long, loff_t *)' extern
FunctionDecl 0x1c90480 <line:2465:1, col:98> generic_file_aio_write 'ssize_t (struct kiocb *, const struct iovec *, unsigned long, loff_t)' extern
FunctionDecl 0x1c909b0 <line:2466:1, line:2467:52> generic_file_direct_write 'ssize_t (struct kiocb *, const struct iovec *, unsigned long *, loff_t, loff_t *, size_t, size_t)' extern
FunctionDecl 0x1c90ef0 <line:2468:1, line:2469:51> generic_file_buffered_write 'ssize_t (struct kiocb *, const struct iovec *, unsigned long, loff_t, loff_t *, size_t, ssize_t)' extern
FunctionDecl 0x1c911e0 <line:2470:1, col:90> do_sync_read 'ssize_t (struct file *, char *, size_t, loff_t *)' extern
FunctionDecl 0x1c914c0 <line:2471:1, col:97> do_sync_write 'ssize_t (struct file *, const char *, size_t, loff_t *)' extern
FunctionDecl 0x1c91840 <line:2472:1, line:2473:58> generic_segment_checks 'int (const struct iovec *, unsigned long *, size_t *, int)' extern
FunctionDecl 0x1c91b30 <line:2476:1, line:2477:38> blkdev_aio_write 'ssize_t (struct kiocb *, const struct iovec *, unsigned long, loff_t)' extern
FunctionDecl 0x1c91e10 <line:2478:1, line:2479:16> blkdev_fsync 'int (struct file *, loff_t, loff_t, int)' extern
FunctionDecl 0x1c91f80 <line:2480:1, col:46> block_sync_page 'void (struct page *)' extern
FunctionDecl 0x1c922c0 <line:2483:1, line:2484:49> generic_file_splice_read 'ssize_t (struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int)' extern
FunctionDecl 0x1c92620 <line:2485:1, line:2486:49> default_file_splice_read 'ssize_t (struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int)' extern
FunctionDecl 0x1c92980 <line:2487:1, line:2488:48> generic_file_splice_write 'ssize_t (struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int)' extern
FunctionDecl 0x1c93d20 <line:2489:1, line:2490:61> generic_splice_sendpage 'ssize_t (struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int)' extern
FunctionDecl 0x1c93fa0 <line:2492:1, line:2493:75> file_ra_state_init 'void (struct file_ra_state *, struct address_space *)' extern
FunctionDecl 0x1c941f0 <line:2494:1, col:71> noop_llseek 'loff_t (struct file *, loff_t, int)' extern
FunctionDecl 0x1c94440 <line:2495:1, col:69> no_llseek 'loff_t (struct file *, loff_t, int)' extern
FunctionDecl 0x1c94730 <line:2496:1, col:74> vfs_setpos 'loff_t (struct file *, loff_t, loff_t)' extern
FunctionDecl 0x1c94980 <line:2497:1, col:79> generic_file_llseek 'loff_t (struct file *, loff_t, int)' extern
FunctionDecl 0x1c94d80 <line:2498:1, line:2499:41> generic_file_llseek_size 'loff_t (struct file *, loff_t, int, loff_t, loff_t)' extern
FunctionDecl 0x1c95100 <line:2500:1, line:2501:26> fixed_size_llseek 'loff_t (struct file *, loff_t, int, loff_t)' extern
FunctionDecl 0x1c95300 <line:2502:1, col:70> generic_file_open 'int (struct inode *, struct file *)' extern
FunctionDecl 0x1c954f0 <line:2503:1, col:69> nonseekable_open 'int (struct inode *, struct file *)' extern
FunctionDecl 0x1c95750 <line:2513:1, line:2516:1> xip_truncate_page 'int (struct address_space *, loff_t)' static inline
FunctionDecl 0x1c95910 <line:2548:1, col:40> inode_dio_wait 'void (struct inode *)'
FunctionDecl 0x1c95a60 <line:2549:1, col:40> inode_dio_done 'void (struct inode *)'
FunctionDecl 0x1c95e40 <line:2555:1, col:74> vfs_readlink 'int (struct dentry *, char *, int, const char *)' extern
FunctionDecl 0x1c960a0 <line:2556:1, col:61> page_readlink 'int (struct dentry *, char *, int)' extern
FunctionDecl 0x1c96290 <line:2557:1, col:72> page_follow_link_light 'void *(struct dentry *, struct nameidata *)' extern
FunctionDecl 0x1c964f0 <line:2558:1, col:70> page_put_link 'void (struct dentry *, struct nameidata *, void *)' extern
FunctionDecl 0x1c96860 <line:2559:1, line:2560:11> __page_symlink 'int (struct inode *, const char *, int, int)' extern
FunctionDecl 0x1c96b60 <line:2561:1, col:74> page_symlink 'int (struct inode *, const char *, int)' extern
FunctionDecl 0x1c96e40 <line:2563:1, col:71> kfree_put_link 'void (struct dentry *, struct nameidata *, void *)' extern
FunctionDecl 0x1c97090 <line:2564:1, col:64> generic_readlink 'int (struct dentry *, char *, int)' extern
FunctionDecl 0x1c97300 <line:2565:1, col:60> generic_fillattr 'void (struct inode *, struct kstat *)' extern
FunctionDecl 0x1c97570 <line:2566:1, col:60> vfs_getattr_nosec 'int (struct path *, struct kstat *)'
FunctionDecl 0x1c97760 <line:2567:1, col:53> vfs_getattr 'int (struct path *, struct kstat *)' extern
FunctionDecl 0x1c97940 <line:2568:1, col:57> __inode_add_bytes 'void (struct inode *, loff_t)'
FunctionDecl 0x1c97ea0 <line:2569:1, col:55> inode_add_bytes 'void (struct inode *, loff_t)'
FunctionDecl 0x1c98080 <line:2570:1, col:57> __inode_sub_bytes 'void (struct inode *, loff_t)'
FunctionDecl 0x1c98260 <line:2571:1, col:55> inode_sub_bytes 'void (struct inode *, loff_t)'
FunctionDecl 0x1c98440 <line:2572:1, col:43> inode_get_bytes 'loff_t (struct inode *)'
FunctionDecl 0x1c98610 <line:2573:1, col:55> inode_set_bytes 'void (struct inode *, loff_t)'
FunctionDecl 0x1c98900 <line:2575:1, col:56> vfs_readdir 'int (struct file *, filldir_t, void *)' extern
FunctionDecl 0x1c98af0 <line:2576:1, col:59> iterate_dir 'int (struct file *, struct dir_context *)' extern
FunctionDecl 0x1c98d40 <line:2578:1, col:56> vfs_stat 'int (const char *, struct kstat *)' extern
FunctionDecl 0x1c98f10 <line:2579:1, col:57> vfs_lstat 'int (const char *, struct kstat *)' extern
FunctionDecl 0x1c99160 <line:2580:1, col:50> vfs_fstat 'int (unsigned int, struct kstat *)' extern
FunctionDecl 0x1c994c0 <line:2581:1, col:70> vfs_fstatat 'int (int, const char *, struct kstat *, int)' extern
FunctionDecl 0x1c99840 <line:2583:1, line:2584:24> do_vfs_ioctl 'int (struct file *, unsigned int, unsigned int, unsigned long)' extern
FunctionDecl 0x1c99ce0 <line:2585:1, line:2588:29> __generic_block_fiemap 'int (struct inode *, struct fiemap_extent_info *, loff_t, loff_t, get_block_t *)' extern
FunctionDecl 0x1c9a100 <line:2589:1, line:2591:36> generic_block_fiemap 'int (struct inode *, struct fiemap_extent_info *, u64, u64, get_block_t *)' extern
FunctionDecl 0x1c9a2f0 <line:2593:1, col:55> get_filesystem 'void (struct file_system_type *)' extern
FunctionDecl 0x1c9a440 <line:2594:1, col:55> put_filesystem 'void (struct file_system_type *)' extern
FunctionDecl 0x1c9a620 <line:2595:1, col:61> get_fs_type 'struct file_system_type *(const char *)' extern
FunctionDecl 0x1c9a790 <line:2596:1, col:59> get_super 'struct super_block *(struct block_device *)' extern
FunctionDecl 0x1c9a900 <line:2597:1, col:66> get_super_thawed 'struct super_block *(struct block_device *)' extern
FunctionDecl 0x1c9aa70 <line:2598:1, col:70> get_active_super 'struct super_block *(struct block_device *)' extern
FunctionDecl 0x1c9abc0 <line:2599:1, col:46> drop_super 'void (struct super_block *)' extern
FunctionDecl 0x1c9b030 <line:2600:1, col:74> iterate_supers 'void (void (*)(struct super_block *, void *), void *)' extern
FunctionDecl 0x1c9b440 <line:2601:1, line:2602:58> iterate_supers_type 'void (struct file_system_type *, void (*)(struct super_block *, void *), void *)' extern
FunctionDecl 0x1c9b630 <line:2604:1, col:57> dcache_dir_open 'int (struct inode *, struct file *)' extern
FunctionDecl 0x1c9b820 <line:2605:1, col:58> dcache_dir_close 'int (struct inode *, struct file *)' extern
FunctionDecl 0x1c9ba70 <line:2606:1, col:58> dcache_dir_lseek 'loff_t (struct file *, loff_t, int)' extern
FunctionDecl 0x1c9bc60 <line:2607:1, col:62> dcache_readdir 'int (struct file *, struct dir_context *)' extern
FunctionDecl 0x1c9cec0 <line:2608:1, col:58> simple_setattr 'int (struct dentry *, struct iattr *)' extern
FunctionDecl 0x1c9d130 <line:2609:1, col:77> simple_getattr 'int (struct vfsmount *, struct dentry *, struct kstat *)' extern
FunctionDecl 0x1c9d320 <line:2610:1, col:59> simple_statfs 'int (struct dentry *, struct kstatfs *)' extern
FunctionDecl 0x1c9d510 <line:2611:1, col:62> simple_open 'int (struct inode *, struct file *)' extern
FunctionDecl 0x1c9d780 <line:2612:1, col:72> simple_link 'int (struct dentry *, struct inode *, struct dentry *)' extern
FunctionDecl 0x1c9d970 <line:2613:1, col:57> simple_unlink 'int (struct inode *, struct dentry *)' extern
FunctionDecl 0x1c9db60 <line:2614:1, col:56> simple_rmdir 'int (struct inode *, struct dentry *)' extern
FunctionDecl 0x1c9de60 <line:2615:1, col:90> simple_rename 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' extern
FunctionDecl 0x1c9e140 <line:2616:1, col:57> noop_fsync 'int (struct file *, loff_t, loff_t, int)' extern
FunctionDecl 0x1c9e2b0 <line:2617:1, col:40> simple_empty 'int (struct dentry *)' extern
FunctionDecl 0x1c9e490 <line:2618:1, col:64> simple_readpage 'int (struct file *, struct page *)' extern
FunctionDecl 0x1c9e8e0 <line:2619:1, line:2621:38> simple_write_begin 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **)' extern
FunctionDecl 0x1c9ed50 <line:2622:1, line:2624:35> simple_write_end 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *)' extern
FunctionDecl 0x1c9eed0 <line:2625:1, col:54> always_delete_dentry 'int (const struct dentry *)' extern
FunctionDecl 0x1c9f040 <line:2626:1, col:59> alloc_anon_inode 'struct inode *(struct super_block *)' extern
FunctionDecl 0x1c9f330 <line:2629:1, col:88> simple_lookup 'struct dentry *(struct inode *, struct dentry *, unsigned int)' extern
FunctionDecl 0x1c9f600 <line:2630:1, col:79> generic_read_dir 'ssize_t (struct file *, char *, size_t, loff_t *)' extern
FunctionDecl 0x1c9fb50 <line:2634:1, col:58> d_alloc_name 'struct dentry *(struct dentry *, const char *)'
FunctionDecl 0x1c9fee0 <line:2635:1, col:86> simple_fill_super 'int (struct super_block *, unsigned long, struct tree_descr *)' extern
FunctionDecl 0x1ca0240 <line:2636:1, col:88> simple_pin_fs 'int (struct file_system_type *, struct vfsmount **, int *)' extern
FunctionDecl 0x1ca04a0 <line:2637:1, col:66> simple_release_fs 'void (struct vfsmount **, int *)' extern
FunctionDecl 0x1ca07c0 <line:2639:1, line:2640:52> simple_read_from_buffer 'ssize_t (void *, size_t, loff_t *, const void *, size_t)' extern
FunctionDecl 0x1ca0b00 <line:2641:1, line:2642:40> simple_write_to_buffer 'ssize_t (void *, size_t, loff_t *, const void *, size_t)' extern
FunctionDecl 0x1ca0e40 <line:2644:1, col:65> generic_file_fsync 'int (struct file *, loff_t, loff_t, int)' extern
FunctionDecl 0x1ca1090 <line:2646:1, col:51> generic_check_addressable 'int (unsigned int, u64)' extern
FunctionDecl 0x1ca1300 <line:2656:1, col:64> inode_change_ok 'int (const struct inode *, struct iattr *)' extern
FunctionDecl 0x1ca1560 <line:2657:1, col:64> inode_newsize_ok 'int (const struct inode *, loff_t)' extern
FunctionDecl 0x1ca1830 <line:2658:1, col:71> setattr_copy 'void (struct inode *, const struct iattr *)' extern
FunctionDecl 0x1ca1990 <line:2660:1, col:46> file_update_time 'int (struct file *)' extern
FunctionDecl 0x1ca1b70 <line:2662:1, col:72> generic_show_options 'int (struct seq_file *, struct dentry *)' extern
FunctionDecl 0x1ca1dd0 <line:2663:1, col:69> save_mount_options 'void (struct super_block *, char *)' extern
FunctionDecl 0x1ca1fb0 <line:2664:1, col:72> replace_mount_options 'void (struct super_block *, char *)' extern
FunctionDecl 0x1ca2190 <line:2666:1, line:2678:1> parent_ino 'ino_t (struct dentry *)' static inline
DeclRefExpr 0x1ca22c0 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x1ca25d0 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x1ca2be0 <line:2693:1, line:2694:16> simple_transaction_get 'char *(struct file *, const char *, size_t)'
FunctionDecl 0x1ca2eb0 <line:2695:1, line:2696:29> simple_transaction_read 'ssize_t (struct file *, char *, size_t, loff_t *)'
FunctionDecl 0x1ca30b0 <line:2697:1, col:70> simple_transaction_release 'int (struct inode *, struct file *)'
FunctionDecl 0x1ca3310 <line:2699:1, col:56> simple_transaction_set 'void (struct file *, size_t)'
FunctionDecl 0x1ca33e0 prev 0x1ad78b0 <line:2732:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1ca3510 <line:2733:1, line:2736:1> __simple_attr_check_format 'void (const char *, ...)'
FunctionDecl 0x1ca3d70 <line:2738:1, line:2740:23> simple_attr_open 'int (struct inode *, struct file *, int (*)(void *, u64 *), int (*)(void *, u64), const char *)'
FunctionDecl 0x1ca3f70 <line:2741:1, col:63> simple_attr_release 'int (struct inode *, struct file *)'
FunctionDecl 0x1ca4240 <line:2742:1, line:2743:29> simple_attr_read 'ssize_t (struct file *, char *, size_t, loff_t *)'
FunctionDecl 0x1ca4520 <line:2744:1, line:2745:30> simple_attr_write 'ssize_t (struct file *, const char *, size_t, loff_t *)'
FunctionDecl 0x1ca48e0 <line:2748:1, line:2749:52> proc_nr_files 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1ca4c30 <line:2750:1, line:2751:52> proc_nr_dentry 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1cab000 <line:2752:1, line:2753:53> proc_nr_inodes 'int (struct ctl_table *, int, void *, size_t *, loff_t *)'
FunctionDecl 0x1cab2e0 <line:2763:1, line:2766:1> is_sxid 'int (umode_t)' static inline
FunctionDecl 0x1cab4c0 <line:2768:1, line:2772:1> inode_has_no_xattr 'void (struct inode *)' static inline
DeclRefExpr 0x1cab568 <col:7> 'int (umode_t)' Function 0x1cab2e0 'is_sxid' 'int (umode_t)'
FunctionDecl 0x1cabd30 <line:2774:1, line:2779:1> dir_emit 'bool (struct dir_context *, const char *, int, u64, unsigned int)' static inline
FunctionDecl 0x1cac310 <line:2780:1, line:2784:1> dir_emit_dot 'bool (struct file *, struct dir_context *)' static inline
FunctionDecl 0x1cac970 <line:2785:1, line:2789:1> dir_emit_dotdot 'bool (struct file *, struct dir_context *)' static inline
DeclRefExpr 0x1cacb78 <col:6> 'ino_t (struct dentry *)' Function 0x1ca2190 'parent_ino' 'ino_t (struct dentry *)'
FunctionDecl 0x1cad010 <line:2790:1, line:2803:1> dir_emit_dots 'bool (struct file *, struct dir_context *)' static inline
DeclRefExpr 0x1cad1a8 <col:8> 'bool (struct file *, struct dir_context *)' Function 0x1cac310 'dir_emit_dot' 'bool (struct file *, struct dir_context *)'
DeclRefExpr 0x1cad5b8 <col:8> 'bool (struct file *, struct dir_context *)' Function 0x1cac970 'dir_emit_dotdot' 'bool (struct file *, struct dir_context *)'
FunctionDecl 0x1cad9c0 <line:2804:1, line:2809:1> dir_relax 'bool (struct inode *)' static inline
DeclRefExpr 0x1cada68 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x1cadbc0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
FunctionDecl 0x1caea80 <line:59:1, col:74> user_path_at 'int (int, const char *, unsigned int, struct path *)' extern
FunctionDecl 0x1cafca0 <line:60:1, col:92> user_path_at_empty 'int (int, const char *, unsigned int, struct path *, int *)' extern
FunctionDecl 0x1caffa0 <line:67:1, col:59> kern_path 'int (const char *, unsigned int, struct path *)' extern
FunctionDecl 0x1cb0330 <line:69:1, col:86> kern_path_create 'struct dentry *(int, const char *, struct path *, unsigned int)' extern
FunctionDecl 0x1cb0610 <line:70:1, col:93> user_path_create 'struct dentry *(int, const char *, struct path *, unsigned int)' extern
FunctionDecl 0x1cb0890 <line:71:1, col:60> done_path_create 'void (struct path *, struct dentry *)' extern
FunctionDecl 0x1cb0b00 <line:72:1, col:67> kern_path_locked 'struct dentry *(const char *, struct path *)' extern
FunctionDecl 0x1cb0e60 <line:73:1, col:79> kern_path_mountpoint 'int (int, const char *, struct path *, unsigned int)' extern
FunctionDecl 0x1cb1170 <line:75:1, col:72> lookup_one_len 'struct dentry *(const char *, struct dentry *, int)' extern
FunctionDecl 0x1cb1350 <line:77:1, col:41> follow_down_one 'int (struct path *)' extern
FunctionDecl 0x1cb14a0 <line:78:1, col:37> follow_down 'int (struct path *)' extern
FunctionDecl 0x1cb15f0 <line:79:1, col:35> follow_up 'int (struct path *)' extern
FunctionDecl 0x1cb17e0 <line:81:1, col:67> lock_rename 'struct dentry *(struct dentry *, struct dentry *)' extern
FunctionDecl 0x1cb19d0 <line:82:1, col:59> unlock_rename 'void (struct dentry *, struct dentry *)' extern
FunctionDecl 0x1cb1c40 <line:84:1, col:65> nd_jump_link 'void (struct nameidata *, struct path *)' extern
FunctionDecl 0x1cb1ea0 <line:86:1, line:89:1> nd_set_link 'void (struct nameidata *, char *)' static inline
FunctionDecl 0x1cb2240 <line:91:1, line:94:1> nd_get_link 'char *(struct nameidata *)' static inline
FunctionDecl 0x1cb26a0 <line:96:1, line:99:1> nd_terminate_link 'void (void *, size_t, size_t)' static inline
DeclRefExpr 0x1cb27f0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1cb28e8 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
FunctionDecl 0x1cb2c90 <line:111:1, line:115:1> retry_estale 'bool (const long, const unsigned int)' static inline
FunctionDecl 0x1cb2ff0 <../include/linux/uaccess.h:16:1, line:24:1> pagefault_disable 'void (void)' static inline
DeclRefExpr 0x1cb3150 <col:32> 'int ()' Function 0x1cb30b0 '__preempt_count_add' 'int ()'
DeclRefExpr 0x1cb31e0 <col:2> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
FunctionDecl 0x1cb30b0 <<invalid sloc>> __preempt_count_add 'int ()'
FunctionDecl 0x1cb3300 <line:26:1, line:35:1> pagefault_enable 'void (void)' static inline
DeclRefExpr 0x1cb33a0 <col:2> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1cb34d0 <col:32> 'int ()' Function 0x1cb3430 '__preempt_count_sub' 'int ()'
FunctionDecl 0x1cb3430 <<invalid sloc>> __preempt_count_sub 'int ()'
FunctionDecl 0x1cb37c0 <../include/linux/uaccess.h:39:1, line:43:1> __copy_from_user_inatomic_nocache 'unsigned long (void *, const void *, unsigned long)' static inline
DeclRefExpr 0x1cb3940 <col:9> 'int ()' Function 0x1cb38a0 '__copy_from_user_inatomic' 'int ()'
FunctionDecl 0x1cb38a0 <<invalid sloc>> __copy_from_user_inatomic 'int ()'
FunctionDecl 0x1cbbb80 <line:45:1, line:49:1> __copy_from_user_nocache 'unsigned long (void *, const void *, unsigned long)' static inline
DeclRefExpr 0x1cbbd00 <col:9> 'int ()' Function 0x1cbbc60 '__copy_from_user' 'int ()'
FunctionDecl 0x1cbbc60 <<invalid sloc>> __copy_from_user 'int ()'
FunctionDecl 0x1cbc0f0 <line:92:1, col:70> probe_kernel_read 'long (void *, const void *, size_t)' extern
FunctionDecl 0x1cbc330 <line:93:1, col:72> __probe_kernel_read 'long (void *, const void *, size_t)' extern
FunctionDecl 0x1cbc600 <../include/linux/ftrace_irq.h:9:1, col:45> ftrace_nmi_enter 'void (void)' static inline
FunctionDecl 0x1cbc750 <line:10:1, col:44> ftrace_nmi_exit 'void (void)' static inline
FunctionDecl 0x1cbcc00 <line:136:1, line:139:1> jump_label_init 'void (void)' static inline
FunctionDecl 0x1cbcf40 <../include/linux/jump_label.h:141:1, line:146:1> static_key_false 'bool (struct static_key *)' static inline
DeclRefExpr 0x1cbd030 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cbd058 <col:15> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x1cbd3b0 <../include/linux/jump_label.h:148:1, line:153:1> static_key_true 'bool (struct static_key *)' static inline
DeclRefExpr 0x1cbd4a0 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1cbd4c8 <col:13> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x1cbd8a0 <../include/linux/jump_label.h:155:1, line:159:1> static_key_slow_inc 'void (struct static_key *)' static inline
DeclRefExpr 0x1cbda10 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x1cbdc48 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x1cbd970 <<invalid sloc>> WARN 'int ()'
FunctionDecl 0x1cbde20 <line:161:1, line:165:1> static_key_slow_dec 'void (struct static_key *)' static inline
DeclRefExpr 0x1cbdec8 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x1cbe040 <col:2> 'int ()' Function 0x19b8310 'atomic_dec' 'int ()'
FunctionDecl 0x1cbe2c0 <line:167:1, line:170:1> jump_label_text_reserved 'int (void *, void *)' static inline
FunctionDecl 0x1cbe460 <line:172:1, col:43> jump_label_lock 'void (void)' static inline
FunctionDecl 0x1cbe5b0 <line:173:1, col:45> jump_label_unlock 'void (void)' static inline
FunctionDecl 0x1cbe790 <line:175:1, line:178:1> jump_label_apply_nops 'int (struct module *)' static inline
FunctionDecl 0x1cbe940 <line:190:1, line:193:1> static_key_enabled 'bool (struct static_key *)' static inline
DeclRefExpr 0x1cbe9e8 <col:10> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x1cbef60 <line:35:1, col:67> context_tracking_in_user 'bool (void)' static inline
FunctionDecl 0x1cbf110 <line:36:1, col:66> context_tracking_active 'bool (void)' static inline
FunctionDecl 0x1cbf340 <line:32:1, col:67> vtime_accounting_enabled 'bool (void)' static inline
FunctionDecl 0x1cbf510 <line:69:1, col:66> vtime_task_switch 'void (struct task_struct *)' static inline
FunctionDecl 0x1cbf680 <line:70:1, col:68> vtime_account_system 'void (struct task_struct *)' static inline
FunctionDecl 0x1cbf7f0 <line:71:1, col:66> vtime_account_user 'void (struct task_struct *)' static inline
FunctionDecl 0x1cbf960 <line:72:1, col:71> vtime_account_irq_enter 'void (struct task_struct *)' static inline
FunctionDecl 0x1ccc740 <line:95:1, line:99:1> vtime_account_irq_exit 'void (struct task_struct *)' static inline
DeclRefExpr 0x1ccc7e8 <col:2> 'void (struct task_struct *)' Function 0x1cbf680 'vtime_account_system' 'void (struct task_struct *)'
FunctionDecl 0x1ccc9c0 <line:100:1, col:64> vtime_user_enter 'void (struct task_struct *)' static inline
FunctionDecl 0x1cccb30 <line:101:1, col:63> vtime_user_exit 'void (struct task_struct *)' static inline
FunctionDecl 0x1cccca0 <line:102:1, col:65> vtime_guest_enter 'void (struct task_struct *)' static inline
FunctionDecl 0x1ccce10 <line:103:1, col:64> vtime_guest_exit 'void (struct task_struct *)' static inline
FunctionDecl 0x1ccd080 <line:104:1, col:72> vtime_init_idle 'void (struct task_struct *, int)' static inline
FunctionDecl 0x1ccd1f0 <line:110:1, col:67> irqtime_account_irq 'void (struct task_struct *)' static inline
FunctionDecl 0x1ccd360 <line:113:1, line:117:1> account_irq_enter_time 'void (struct task_struct *)' static inline
DeclRefExpr 0x1ccd408 <col:2> 'void (struct task_struct *)' Function 0x1cbf960 'vtime_account_irq_enter' 'void (struct task_struct *)'
DeclRefExpr 0x1ccd4b8 <col:2> 'void (struct task_struct *)' Function 0x1ccd1f0 'irqtime_account_irq' 'void (struct task_struct *)'
FunctionDecl 0x1ccd640 <line:119:1, line:123:1> account_irq_exit_time 'void (struct task_struct *)' static inline
DeclRefExpr 0x1ccd6e8 <col:2> 'void (struct task_struct *)' Function 0x1ccc740 'vtime_account_irq_exit' 'void (struct task_struct *)'
DeclRefExpr 0x1ccd798 <col:2> 'void (struct task_struct *)' Function 0x1ccd1f0 'irqtime_account_irq' 'void (struct task_struct *)'
FunctionDecl 0x1ccd900 <../include/linux/hardirq.h:10:1, col:45> synchronize_irq 'void (unsigned int)' extern
FunctionDecl 0x1ccda40 <line:23:1, col:31> rcu_nmi_enter 'void (void)' extern
FunctionDecl 0x1ccdb70 <line:24:1, col:30> rcu_nmi_exit 'void (void)' extern
FunctionDecl 0x1ccdca0 <line:43:1, col:27> irq_enter 'void (void)' extern
FunctionDecl 0x1ccddd0 <line:58:1, col:26> irq_exit 'void (void)' extern
FunctionDecl 0x1cce0c0 <../include/linux/highmem.h:14:1, line:16:1> flush_anon_page 'void (struct vm_area_struct *, struct page *, unsigned long)' static inline
FunctionDecl 0x1cce240 <line:20:1, line:22:1> flush_kernel_dcache_page 'void (struct page *)' static inline
FunctionDecl 0x1cce410 <line:23:1, line:25:1> flush_kernel_vmap_range 'void (void *, int)' static inline
FunctionDecl 0x1cce5f0 <line:26:1, line:28:1> invalidate_kernel_vmap_range 'void (void *, int)' static inline
FunctionDecl 0x1cce750 <line:46:1, col:64> nr_free_highpages 'unsigned int (void)' static inline
FunctionDecl 0x1cce9a0 <line:48:1, line:51:1> kmap_to_page 'struct page *(void *)' static inline
DeclRefExpr 0x1cceb10 <col:9> 'int ()' Function 0x1ccea70 'virt_to_page' 'int ()'
FunctionDecl 0x1ccea70 <<invalid sloc>> virt_to_page 'int ()'
FunctionDecl 0x1cced40 <line:56:1, line:60:1> kmap 'void *(struct page *)' static inline
DeclRefExpr 0x1ccef70 <col:9> 'int ()' Function 0x1cceed0 'page_address' 'int ()'
FunctionDecl 0x1cceed0 <<invalid sloc>> page_address 'int ()'
FunctionDecl 0x1ccf130 <line:62:1, line:64:1> kunmap 'void (struct page *)' static inline
FunctionDecl 0x1ccf2a0 <line:66:1, line:70:1> kmap_atomic 'void *(struct page *)' static inline
DeclRefExpr 0x1ccf348 <col:2> 'void (void)' Function 0x1cb2ff0 'pagefault_disable' 'void (void)'
DeclRefExpr 0x1ccf3b0 <col:9> 'int ()' Function 0x1cceed0 'page_address' 'int ()'
FunctionDecl 0x1ccf550 <line:73:1, line:76:1> __kunmap_atomic 'void (void *)' static inline
DeclRefExpr 0x1ccf5f8 <col:2> 'void (void)' Function 0x1cb3300 'pagefault_enable' 'void (void)'
FunctionDecl 0x1ccf830 <line:132:1, line:137:1> clear_user_highpage 'void (struct page *, unsigned long)' static inline
DeclRefExpr 0x1ccf948 <col:15> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1ccfb30 <col:2> 'int ()' Function 0x1ccfa90 'clear_user_page' 'int ()'
DeclRefExpr 0x1ccfcb0 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
FunctionDecl 0x1ccfa90 <<invalid sloc>> clear_user_page 'int ()'
FunctionDecl 0x1cd0080 <line:155:1, line:167:1> __alloc_zeroed_user_highpage 'struct page *(gfp_t, struct vm_area_struct *, unsigned long)' static inline
DeclRefExpr 0x1cd01b8 <col:3> 'struct page *(int, gfp_t, unsigned int)' Function 0x1b2af20 'alloc_pages_node' 'struct page *(int, gfp_t, unsigned int)'
DeclRefExpr 0x1cd01e0 <col:20> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
DeclRefExpr 0x1cd4090 <col:3> 'void (struct page *, unsigned long)' Function 0x1ccf830 'clear_user_highpage' 'void (struct page *, unsigned long)'
FunctionDecl 0x1cd44a0 <line:178:1, line:183:1> alloc_zeroed_user_highpage_movable 'struct page *(struct vm_area_struct *, unsigned long)' static inline
DeclRefExpr 0x1cd4550 <col:9> 'struct page *(gfp_t, struct vm_area_struct *, unsigned long)' Function 0x1cd0080 '__alloc_zeroed_user_highpage' 'struct page *(gfp_t, struct vm_area_struct *, unsigned long)'
FunctionDecl 0x1cd4810 <line:185:1, line:190:1> clear_highpage 'void (struct page *)' static inline
DeclRefExpr 0x1cd4928 <col:16> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd4ab0 <col:2> 'int ()' Function 0x1cd4a10 'clear_page' 'int ()'
DeclRefExpr 0x1cd4ba0 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
FunctionDecl 0x1cd4a10 <<invalid sloc>> clear_page 'int ()'
FunctionDecl 0x1cd5030 <line:192:1, line:208:1> zero_user_segments 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)' static inline
DeclRefExpr 0x1cd5168 <col:16> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd5350 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1cd5630 <col:3> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
DeclRefExpr 0x1cd58a8 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd5a80 <col:2> 'int ()' Function 0x1cd59e0 'flush_dcache_page' 'int ()'
FunctionDecl 0x1cd59e0 <<invalid sloc>> flush_dcache_page 'int ()'
FunctionDecl 0x1cd5d10 <line:210:1, line:214:1> zero_user_segment 'void (struct page *, unsigned int, unsigned int)' static inline
DeclRefExpr 0x1cd5dc8 <col:2> 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)' Function 0x1cd5030 'zero_user_segments' 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)'
FunctionDecl 0x1cd61a0 <line:216:1, line:220:1> zero_user 'void (struct page *, unsigned int, unsigned int)' static inline
DeclRefExpr 0x1cd6258 <col:2> 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)' Function 0x1cd5030 'zero_user_segments' 'void (struct page *, unsigned int, unsigned int, unsigned int, unsigned int)'
FunctionDecl 0x1cd6780 <line:224:1, line:234:1> copy_user_highpage 'void (struct page *, struct page *, unsigned long, struct vm_area_struct *)' static inline
DeclRefExpr 0x1cd6970 <col:10> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd6a88 <col:8> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd6c40 <col:2> 'int ()' Function 0x1cd6ba0 'copy_user_page' 'int ()'
DeclRefExpr 0x1cd6e08 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd6f78 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
FunctionDecl 0x1cd6ba0 <<invalid sloc>> copy_user_page 'int ()'
FunctionDecl 0x1cd72b0 <line:238:1, line:247:1> copy_highpage 'void (struct page *, struct page *)' static inline
DeclRefExpr 0x1cd7490 <col:10> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd75a8 <col:8> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x1cd7760 <col:2> 'int ()' Function 0x1cd76c0 'copy_page' 'int ()'
DeclRefExpr 0x1cd7898 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x1cd7a08 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
FunctionDecl 0x1cd76c0 <<invalid sloc>> copy_page 'int ()'
FunctionDecl 0x1cd7cb0 <../include/linux/hugetlb_inline.h:15:1, line:18:1> is_vm_hugetlb_page 'int (struct vm_area_struct *)' static inline
FunctionDecl 0x1cd8420 <line:30:1, line:38:1> mapping_set_error 'void (struct address_space *, int)' static inline
DeclRefExpr 0x1cd84d0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cd8628 <col:4> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
DeclRefExpr 0x1cd8758 <col:4> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
FunctionDecl 0x1cd89d0 <line:40:1, line:43:1> mapping_set_unevictable 'void (struct address_space *)' static inline
DeclRefExpr 0x1cd8a78 <col:2> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
FunctionDecl 0x1cd8c70 <line:45:1, line:48:1> mapping_clear_unevictable 'void (struct address_space *)' static inline
DeclRefExpr 0x1cd8d18 <col:2> 'int ()' Function 0x1a0a240 'clear_bit' 'int ()'
FunctionDecl 0x1cd8f10 <line:50:1, line:55:1> mapping_unevictable 'int (struct address_space *)' static inline
DeclRefExpr 0x1cd8ff8 <col:10> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1cd92f0 <line:57:1, line:60:1> mapping_set_balloon 'void (struct address_space *)' static inline
DeclRefExpr 0x1cd9398 <col:2> 'int ()' Function 0x1a09f10 'set_bit' 'int ()'
FunctionDecl 0x1cd9590 <line:62:1, line:65:1> mapping_clear_balloon 'void (struct address_space *)' static inline
DeclRefExpr 0x1cd9638 <col:2> 'int ()' Function 0x1a0a240 'clear_bit' 'int ()'
FunctionDecl 0x1cd9830 <line:67:1, line:70:1> mapping_balloon 'int (struct address_space *)' static inline
DeclRefExpr 0x1cd9900 <col:20> 'int ()' Function 0x19db080 'test_bit' 'int ()'
FunctionDecl 0x1cd9be0 <line:72:1, line:75:1> mapping_gfp_mask 'gfp_t (struct address_space *)' static inline
FunctionDecl 0x1cda0d0 <../include/linux/pagemap.h:81:1, line:85:1> mapping_set_gfp_mask 'void (struct address_space *, gfp_t)' static inline
FunctionDecl 0x1cda7e0 <line:102:1, col:57> release_pages 'void (struct page **, int, int)'
FunctionDecl 0x1cda940 <line:148:1, line:181:1> page_cache_get_speculative 'int (struct page *)' static inline
DeclRefExpr 0x1cdaab0 <col:22> 'int ()' Function 0x1cdaa10 'preempt_count' 'int ()'
DeclRefExpr 0x1cdb498 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cdb580 <col:16> 'int ()' Function 0x1cdb4e0 'get_page_unless_zero' 'int ()'
DeclRefExpr 0x1cdb7f0 <col:12> 'int ()' Function 0x1cdb750 'PageTail' 'int ()'
FunctionDecl 0x1cdaa10 <<invalid sloc>> preempt_count 'int ()'
FunctionDecl 0x1cdb4e0 <<invalid sloc>> get_page_unless_zero 'int ()'
FunctionDecl 0x1cdb750 <<invalid sloc>> PageTail 'int ()'
FunctionDecl 0x1cdbc30 <line:186:1, line:204:1> page_cache_add_speculative 'int (struct page *, int)' static inline
DeclRefExpr 0x1cdbce0 <col:22> 'int ()' Function 0x1cdaa10 'preempt_count' 'int ()'
DeclRefExpr 0x1ce00f0 <col:12> 'int ()' Function 0x1ce0050 'PageCompound' 'int ()'
DeclRefExpr 0x1ce0290 <col:42> 'int ()' Function 0x1ce01f0 'compound_head' 'int ()'
FunctionDecl 0x1ce0050 <<invalid sloc>> PageCompound 'int ()'
FunctionDecl 0x1ce01f0 <<invalid sloc>> compound_head 'int ()'
FunctionDecl 0x1ce06d0 <line:206:1, line:209:1> page_freeze_refs 'int (struct page *, int)' static inline
FunctionDecl 0x1ce0980 <line:211:1, line:217:1> page_unfreeze_refs 'void (struct page *, int)' static inline
DeclRefExpr 0x1ce0af0 <col:12> 'int ()' Function 0x1ce0a50 'page_count' 'int ()'
FunctionDecl 0x1ce0a50 <<invalid sloc>> page_count 'int ()'
FunctionDecl 0x1ce1110 <line:222:1, line:225:1> __page_cache_alloc 'struct page *(gfp_t)' static inline
DeclRefExpr 0x1ce11b8 <col:3> 'struct page *(int, gfp_t, unsigned int)' Function 0x1b2af20 'alloc_pages_node' 'struct page *(int, gfp_t, unsigned int)'
DeclRefExpr 0x1ce11e0 <col:20> 'int (void)' Function 0x1afe340 'numa_node_id' 'int (void)'
FunctionDecl 0x1ce14a0 <line:228:1, line:231:1> page_cache_alloc 'struct page *(struct address_space *)' static inline
DeclRefExpr 0x1ce1548 <col:9> 'struct page *(gfp_t)' Function 0x1ce1110 '__page_cache_alloc' 'struct page *(gfp_t)'
DeclRefExpr 0x1ce1570 <col:28> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
FunctionDecl 0x1ce1830 <line:233:1, line:236:1> page_cache_alloc_cold 'struct page *(struct address_space *)' static inline
DeclRefExpr 0x1ce18d8 <col:9> 'struct page *(gfp_t)' Function 0x1ce1110 '__page_cache_alloc' 'struct page *(gfp_t)'
DeclRefExpr 0x1ce1900 <col:28> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
FunctionDecl 0x1ce1ba0 <../include/linux/pagemap.h:238:1, line:242:1> page_cache_alloc_readahead 'struct page *(struct address_space *)' static inline
DeclRefExpr 0x1ce1c48 <col:9> 'struct page *(gfp_t)' Function 0x1ce1110 '__page_cache_alloc' 'struct page *(gfp_t)'
DeclRefExpr 0x1ce1c70 <col:28> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
FunctionDecl 0x1ce2340 <line:246:1, line:247:18> find_get_page 'struct page *(struct address_space *, unsigned long)' extern
FunctionDecl 0x1ce2530 <line:248:1, line:249:18> find_lock_page 'struct page *(struct address_space *, unsigned long)' extern
FunctionDecl 0x1ce2840 <line:250:1, line:251:34> find_or_create_page 'struct page *(struct address_space *, unsigned long, gfp_t)' extern
FunctionDecl 0x1ce2bc0 <line:252:1, line:253:46> find_get_pages 'unsigned int (struct address_space *, unsigned long, unsigned int, struct page **)'
FunctionDecl 0x1ce2eb0 <line:254:1, line:255:53> find_get_pages_contig 'unsigned int (struct address_space *, unsigned long, unsigned int, struct page **)'
FunctionDecl 0x1ce32d0 <line:256:1, line:257:55> find_get_pages_tag 'unsigned int (struct address_space *, unsigned long *, int, unsigned int, struct page **)'
FunctionDecl 0x1ce35a0 <line:259:1, line:260:33> grab_cache_page_write_begin 'struct page *(struct address_space *, unsigned long, unsigned int)'
FunctionDecl 0x1ce3790 <line:265:1, line:269:1> grab_cache_page 'struct page *(struct address_space *, unsigned long)' static inline
DeclRefExpr 0x1ce3840 <col:9> 'struct page *(struct address_space *, unsigned long, gfp_t)' Function 0x1ce2840 'find_or_create_page' 'struct page *(struct address_space *, unsigned long, gfp_t)'
DeclRefExpr 0x1ce38b8 <col:45> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
FunctionDecl 0x1ce4c00 <line:271:1, line:272:18> grab_cache_page_nowait 'struct page *(struct address_space *, unsigned long)' extern
FunctionDecl 0x1ce5010 <line:273:1, line:274:48> read_cache_page_async 'struct page *(struct address_space *, unsigned long, filler_t *, void *)' extern
FunctionDecl 0x1ce5300 <line:275:1, line:276:48> read_cache_page 'struct page *(struct address_space *, unsigned long, filler_t *, void *)' extern
FunctionDecl 0x1ce5580 <line:277:1, line:278:34> read_cache_page_gfp 'struct page *(struct address_space *, unsigned long, gfp_t)' extern
FunctionDecl 0x1ce5900 <line:279:1, line:280:56> read_cache_pages 'int (struct address_space *, struct list_head *, filler_t *, void *)' extern
FunctionDecl 0x1ce5c20 <line:282:1, line:288:1> read_mapping_page_async 'struct page *(struct address_space *, unsigned long, void *)' static inline
DeclRefExpr 0x1ce5e68 <col:9> 'struct page *(struct address_space *, unsigned long, filler_t *, void *)' Function 0x1ce5010 'read_cache_page_async' 'struct page *(struct address_space *, unsigned long, filler_t *, void *)'
FunctionDecl 0x1ce6250 <line:290:1, line:295:1> read_mapping_page 'struct page *(struct address_space *, unsigned long, void *)' static inline
DeclRefExpr 0x1ce6498 <col:9> 'struct page *(struct address_space *, unsigned long, filler_t *, void *)' Function 0x1ce5300 'read_cache_page' 'struct page *(struct address_space *, unsigned long, filler_t *, void *)'
FunctionDecl 0x1ce6790 <line:300:1, line:303:1> page_offset 'loff_t (struct page *)' static inline
FunctionDecl 0x1ce6940 <line:305:1, line:308:1> page_file_offset 'loff_t (struct page *)' static inline
FunctionDecl 0x1ce6a10 <<invalid sloc>> page_file_index 'int ()'
FunctionDecl 0x1ce6d80 <line:310:1, line:311:31> linear_hugepage_index 'unsigned long (struct vm_area_struct *, unsigned long)' extern
FunctionDecl 0x1ce6f60 <line:313:1, line:322:1> linear_page_index 'unsigned long (struct vm_area_struct *, unsigned long)' static inline
DeclRefExpr 0x1ce7090 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1ce70b8 <col:15> 'int (struct vm_area_struct *)' Function 0x1cd7cb0 'is_vm_hugetlb_page' 'int (struct vm_area_struct *)'
DeclRefExpr 0x1ce7210 <col:10> 'unsigned long (struct vm_area_struct *, unsigned long)' Function 0x1ce6d80 'linear_hugepage_index' 'unsigned long (struct vm_area_struct *, unsigned long)'
FunctionDecl 0x1ce75b0 <line:324:1, col:42> __lock_page 'void (struct page *)' extern
FunctionDecl 0x1ce7700 <line:325:1, col:50> __lock_page_killable 'int (struct page *)' extern
FunctionDecl 0x1ce7a80 <line:326:1, line:327:23> __lock_page_or_retry 'int (struct page *, struct mm_struct *, unsigned int)' extern
FunctionDecl 0x1ce7be0 <line:328:1, col:42> unlock_page 'void (struct page *)' extern
FunctionDecl 0x1ce7d30 <line:330:1, line:333:1> __set_page_locked 'void (struct page *)' static inline
FunctionDecl 0x1ce7e00 <<invalid sloc>> __set_bit 'int ()'
FunctionDecl 0x1ce7f90 <line:335:1, line:338:1> __clear_page_locked 'void (struct page *)' static inline
FunctionDecl 0x1ce8060 <<invalid sloc>> __clear_bit 'int ()'
FunctionDecl 0x1ce81f0 <line:340:1, line:343:1> trylock_page 'int (struct page *)' static inline
FunctionDecl 0x1ce82e0 <<invalid sloc>> test_and_set_bit_lock 'int ()'
FunctionDecl 0x1ce8470 <line:348:1, line:353:1> lock_page 'void (struct page *)' static inline
DeclRefExpr 0x1ce85e0 <col:7> 'int (struct page *)' Function 0x1ce81f0 'trylock_page' 'int (struct page *)'
DeclRefExpr 0x1ce86d8 <col:3> 'void (struct page *)' Function 0x1ce75b0 '__lock_page' 'void (struct page *)'
FunctionDecl 0x1cead70 <line:360:1, line:366:1> lock_page_killable 'int (struct page *)' static inline
DeclRefExpr 0x1ceaee0 <col:7> 'int (struct page *)' Function 0x1ce81f0 'trylock_page' 'int (struct page *)'
DeclRefExpr 0x1ceafb0 <col:10> 'int (struct page *)' Function 0x1ce7700 '__lock_page_killable' 'int (struct page *)'
FunctionDecl 0x1ceb2d0 <line:372:1, line:377:1> lock_page_or_retry 'int (struct page *, struct mm_struct *, unsigned int)' static inline
DeclRefExpr 0x1ceb450 <col:9> 'int (struct page *)' Function 0x1ce81f0 'trylock_page' 'int (struct page *)'
DeclRefExpr 0x1ceb500 <col:31> 'int (struct page *, struct mm_struct *, unsigned int)' Function 0x1ce7a80 '__lock_page_or_retry' 'int (struct page *, struct mm_struct *, unsigned int)'
FunctionDecl 0x1ceb830 <line:383:1, col:59> wait_on_page_bit 'void (struct page *, int)' extern
FunctionDecl 0x1ceba10 <line:385:1, col:67> wait_on_page_bit_killable 'int (struct page *, int)' extern
FunctionDecl 0x1cebb70 <line:387:1, line:392:1> wait_on_page_locked_killable 'int (struct page *)' static inline
FunctionDecl 0x1cebc40 <<invalid sloc>> PageLocked 'int ()'
FunctionDecl 0x1cebef0 <line:401:1, line:405:1> wait_on_page_locked 'void (struct page *)' static inline
FunctionDecl 0x1cec160 <line:410:1, line:414:1> wait_on_page_writeback 'void (struct page *)' static inline
FunctionDecl 0x1cec230 <<invalid sloc>> PageWriteback 'int ()'
FunctionDecl 0x1cec490 <line:416:1, col:49> end_page_writeback 'void (struct page *)' extern
FunctionDecl 0x1cec5e0 <line:417:1, col:44> wait_for_stable_page 'void (struct page *)'
FunctionDecl 0x1cec830 <line:422:1, col:72> add_page_wait_queue 'void (struct page *, wait_queue_t *)' extern
FunctionDecl 0x1ceca30 <line:430:1, line:454:1> fault_in_pages_writeable 'int (char *, int)' static inline
DeclRefExpr 0x1cecb60 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cecdb0 <col:8> 'int ()' Function 0x1cecd10 '__put_user' 'int ()'
FunctionDecl 0x1cecd10 <<invalid sloc>> __put_user 'int ()'
FunctionDecl 0x1ced510 <line:456:1, line:475:1> fault_in_pages_readable 'int (const char *, int)' static inline
DeclRefExpr 0x1ced6c0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1ced910 <col:8> 'int ()' Function 0x1ced870 '__get_user' 'int ()'
FunctionDecl 0x1ced870 <<invalid sloc>> __get_user 'int ()'
FunctionDecl 0x1cee140 <line:483:1, line:508:1> fault_in_multipages_writeable 'int (char *, int)' static inline
DeclRefExpr 0x1cee400 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cee658 <col:9> 'int ()' Function 0x1cecd10 '__put_user' 'int ()'
FunctionDecl 0x1ceecb0 <line:510:1, line:535:1> fault_in_multipages_readable 'int (const char *, int)' static inline
DeclRefExpr 0x1cef010 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cef268 <col:9> 'int ()' Function 0x1ced870 '__get_user' 'int ()'
FunctionDecl 0x1cefb90 <line:537:1, line:538:34> add_to_page_cache_locked 'int (struct page *, struct address_space *, unsigned long, gfp_t)'
FunctionDecl 0x1cefe80 <line:539:1, line:540:34> add_to_page_cache_lru 'int (struct page *, struct address_space *, unsigned long, gfp_t)'
FunctionDecl 0x1cefff0 <line:541:1, col:53> delete_from_page_cache 'void (struct page *)' extern
FunctionDecl 0x1cf0140 <line:542:1, col:55> __delete_from_page_cache 'void (struct page *)' extern
FunctionDecl 0x1cf0430 <line:543:1, col:79> replace_page_cache_page 'int (struct page *, struct page *, gfp_t)'
FunctionDecl 0x1cf0710 <line:549:1, line:559:1> add_to_page_cache 'int (struct page *, struct address_space *, unsigned long, gfp_t)' static inline
DeclRefExpr 0x1cf0850 <col:2> 'void (struct page *)' Function 0x1ce7d30 '__set_page_locked' 'void (struct page *)'
DeclRefExpr 0x1cf0928 <col:10> 'int (struct page *, struct address_space *, unsigned long, gfp_t)' Function 0x1cefb90 'add_to_page_cache_locked' 'int (struct page *, struct address_space *, unsigned long, gfp_t)'
DeclRefExpr 0x1cf0b30 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1cf0be0 <col:3> 'void (struct page *)' Function 0x1ce7f90 '__clear_page_locked' 'void (struct page *)'
FunctionDecl 0x1cf2120 <line:140:1, line:144:1> uprobe_register 'int (struct inode *, loff_t, struct uprobe_consumer *)' static inline
FunctionDecl 0x1cf2520 <../include/linux/uprobes.h:145:1, line:149:1> uprobe_apply 'int (struct inode *, loff_t, struct uprobe_consumer *, bool)' static inline
FunctionDecl 0x1cf28b0 <../include/linux/uprobes.h:150:1, line:153:1> uprobe_unregister 'void (struct inode *, loff_t, struct uprobe_consumer *)' static inline
FunctionDecl 0x1cf2a30 <line:154:1, line:157:1> uprobe_mmap 'int (struct vm_area_struct *)' static inline
FunctionDecl 0x1a787e0 <line:158:1, line:161:1> uprobe_munmap 'void (struct vm_area_struct *, unsigned long, unsigned long)' static inline
FunctionDecl 0x1a78940 <line:162:1, line:164:1> uprobe_start_dup_mmap 'void (void)' static inline
FunctionDecl 0x1a78a90 <line:165:1, line:167:1> uprobe_end_dup_mmap 'void (void)' static inline
FunctionDecl 0x1a78d00 <line:168:1, line:171:1> uprobe_dup_mmap 'void (struct mm_struct *, struct mm_struct *)' static inline
FunctionDecl 0x1a78ef0 <line:172:1, line:174:1> uprobe_notify_resume 'void (struct pt_regs *)' static inline
FunctionDecl 0x1a79040 <line:175:1, line:178:1> uprobe_deny_signal 'bool (void)' static inline
FunctionDecl 0x1a79290 <line:179:1, line:182:1> uprobe_get_swbp_addr 'unsigned long (struct pt_regs *)' static inline
FunctionDecl 0x1a79460 <line:183:1, line:185:1> uprobe_free_utask 'void (struct task_struct *)' static inline
FunctionDecl 0x1a796d0 <line:186:1, line:188:1> uprobe_copy_process 'void (struct task_struct *, unsigned long)' static inline
FunctionDecl 0x1a798c0 <line:189:1, line:191:1> uprobe_clear_state 'void (struct mm_struct *)' static inline
FunctionDecl 0x1a7fd60 <line:458:1, line:463:1> mm_init_cpumask 'void (struct mm_struct *)' static inline
FunctionDecl 0x1a7ff50 <line:466:1, line:469:1> mm_cpumask 'cpumask_t *(struct mm_struct *)' static inline
FunctionDecl 0x1a80180 <line:500:1, line:503:1> mm_tlb_flush_pending 'bool (struct mm_struct *)' static inline
FunctionDecl 0x1a80350 <line:504:1, line:506:1> set_tlb_flush_pending 'void (struct mm_struct *)' static inline
FunctionDecl 0x1a804c0 <line:507:1, line:509:1> clear_tlb_flush_pending 'void (struct mm_struct *)' static inline
FunctionDecl 0x1d11150 <line:41:1, line:44:1> copy_semundo 'int (unsigned long, struct task_struct *)' static inline
FunctionDecl 0x1d11310 <line:46:1, line:49:1> exit_sem 'void (struct task_struct *)' static inline
FunctionDecl 0x1d2b490 <line:18:1, col:49> do_schedule_next_timer 'void (struct siginfo *)'
FunctionDecl 0x1d2b6f0 <line:24:1, line:31:1> copy_siginfo 'void (struct siginfo *, struct siginfo *)' static inline
DeclRefExpr 0x1d2b870 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
DeclRefExpr 0x1d2ba40 <col:3> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
FunctionDecl 0x1d2bf90 <line:35:1, col:86> copy_siginfo_to_user 'int (struct siginfo *, const struct siginfo *)' extern
FunctionDecl 0x1d2c7c0 <line:39:1, line:46:1> sigaddset 'void (sigset_t *, int)' static inline
FunctionDecl 0x1d2cc80 <line:48:1, line:55:1> sigdelset 'void (sigset_t *, int)' static inline
FunctionDecl 0x1d38130 <line:57:1, line:64:1> sigismember 'int (sigset_t *, int)' static inline
FunctionDecl 0x1d38530 <line:66:1, line:69:1> sigfindinword 'int (unsigned long)' static inline
DeclRefExpr 0x1d386a0 <col:9> 'int ()' Function 0x1d38600 'ffz' 'int ()'
FunctionDecl 0x1d38600 <<invalid sloc>> ffz 'int ()'
FunctionDecl 0x1d38880 <line:73:1, line:88:1> sigisemptyset 'int (sigset_t *)' static inline
FunctionDecl 0x1d389c0 parent 0x17cb900 <col:2, col:50> _NSIG_WORDS_is_unsupported_size 'void (void)' extern
FunctionDecl 0x1d38d00 <line:95:38, line:116:11> sigorsets 'void (sigset_t *, const sigset_t *, const sigset_t *)' static inline
FunctionDecl 0x1d38e50 parent 0x17cb900 prev 0x1d389c0 <col:2, col:50> _NSIG_WORDS_is_unsupported_size 'void (void)' extern
FunctionDecl 0x1d394a0 <line:95:38, line:116:11> sigandsets 'void (sigset_t *, const sigset_t *, const sigset_t *)' static inline
FunctionDecl 0x1d395f0 parent 0x17cb900 prev 0x1d38e50 <col:2, col:50> _NSIG_WORDS_is_unsupported_size 'void (void)' extern
FunctionDecl 0x1d39c40 <line:95:38, line:116:11> sigandnsets 'void (sigset_t *, const sigset_t *, const sigset_t *)' static inline
FunctionDecl 0x1d39d90 parent 0x17cb900 prev 0x1d395f0 <col:2, col:50> _NSIG_WORDS_is_unsupported_size 'void (void)' extern
FunctionDecl 0x1d3a370 <line:133:36, line:146:11> signotset 'void (sigset_t *)' static inline
FunctionDecl 0x1d3a4b0 parent 0x17cb900 prev 0x1d39d90 <col:2, col:50> _NSIG_WORDS_is_unsupported_size 'void (void)' extern
FunctionDecl 0x1d3a630 <line:155:1, line:165:1> sigemptyset 'void (sigset_t *)' static inline
FunctionDecl 0x1d3a780 <line:167:1, line:177:1> sigfillset 'void (sigset_t *)' static inline
FunctionDecl 0x1d3a9d0 <line:181:1, line:184:1> sigaddsetmask 'void (sigset_t *, unsigned long)' static inline
FunctionDecl 0x1d3ac30 <line:186:1, line:189:1> sigdelsetmask 'void (sigset_t *, unsigned long)' static inline
FunctionDecl 0x1d3af50 <line:191:1, line:194:1> sigtestsetmask 'int (sigset_t *, unsigned long)' static inline
FunctionDecl 0x1d3b1d0 <line:196:1, line:206:1> siginitset 'void (sigset_t *, unsigned long)' static inline
FunctionDecl 0x1d3b430 <line:208:1, line:218:1> siginitsetinv 'void (sigset_t *, unsigned long)' static inline
FunctionDecl 0x1d3b770 <line:222:1, line:226:1> init_sigpending 'void (struct sigpending *)' static inline
DeclRefExpr 0x1d3b818 <col:2> 'void (sigset_t *)' Function 0x1d3a630 'sigemptyset' 'void (sigset_t *)'
DeclRefExpr 0x1d3b970 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x1d3bb40 <line:228:1, col:52> flush_sigqueue 'void (struct sigpending *)' extern
FunctionDecl 0x1d3bc80 <line:231:1, line:234:1> valid_signal 'int (unsigned long)' static inline
FunctionDecl 0x1d411d0 <line:239:1, col:66> next_signal 'int (struct sigpending *, sigset_t *)' extern
FunctionDecl 0x1d41540 <line:240:1, line:241:38> do_send_sig_info 'int (int, struct siginfo *, struct task_struct *, bool)' extern
FunctionDecl 0x1d41840 <line:242:1, col:84> group_send_sig_info 'int (int, struct siginfo *, struct task_struct *)' extern
FunctionDecl 0x1d41aa0 <line:243:1, col:77> __group_send_sig_info 'int (int, struct siginfo *, struct task_struct *)' extern
FunctionDecl 0x1d41dc0 <line:244:1, line:245:28> do_sigtimedwait 'int (const sigset_t *, siginfo_t *, const struct timespec *)' extern
FunctionDecl 0x1d420a0 <line:246:1, col:51> sigprocmask 'int (int, sigset_t *, sigset_t *)' extern
FunctionDecl 0x1d421f0 <line:247:1, col:43> set_current_blocked 'void (sigset_t *)' extern
FunctionDecl 0x1d423b0 <line:248:1, col:51> __set_current_blocked 'void (const sigset_t *)' extern
FunctionDecl 0x1d42560 <line:250:1, col:33> sigsuspend 'int (sigset_t *)' extern
FunctionDecl 0x1d42ec0 <line:288:1, col:116> get_signal_to_deliver 'int (siginfo_t *, struct k_sigaction *, struct pt_regs *, void *)' extern
FunctionDecl 0x1d43240 <line:289:1, col:77> signal_setup_done 'void (int, struct ksignal *, int)' extern
FunctionDecl 0x1d43650 <line:290:1, col:114> signal_delivered 'void (int, siginfo_t *, struct k_sigaction *, struct pt_regs *, int)' extern
FunctionDecl 0x1d437c0 <line:291:1, col:49> exit_signals 'void (struct task_struct *)' extern
FunctionDecl 0x1d43a90 <line:307:1, col:54> unhandled_signal 'int (struct task_struct *, int)'
FunctionDecl 0x1d43bd0 <line:432:1, col:23> signals_init 'void (void)'
FunctionDecl 0x1d43e00 <line:434:1, col:44> restore_altstack 'int (const stack_t *)'
FunctionDecl 0x1d440a0 <line:435:1, col:52> __save_altstack 'int (stack_t *, unsigned long)'
FunctionDecl 0x1d447f0 <line:43:1, col:63> prop_descriptor_init 'int (struct prop_descriptor *, int)'
FunctionDecl 0x1d44a50 <line:44:1, col:65> prop_change_shift 'void (struct prop_descriptor *, int)'
FunctionDecl 0x1d44ee0 <line:64:1, col:56> prop_local_init_percpu 'int (struct prop_local_percpu *)'
FunctionDecl 0x1d4ac40 <line:65:1, col:60> prop_local_destroy_percpu 'void (struct prop_local_percpu *)'
FunctionDecl 0x1d4aea0 <line:66:1, col:80> __prop_inc_percpu 'void (struct prop_descriptor *, struct prop_local_percpu *)'
FunctionDecl 0x1d4b250 <line:67:1, line:68:37> prop_fraction_percpu 'void (struct prop_descriptor *, struct prop_local_percpu *, long *, long *)'
FunctionDecl 0x1d4b450 <line:70:1, line:78:1> prop_inc_percpu 'void (struct prop_descriptor *, struct prop_local_percpu *)' static inline
DeclRefExpr 0x1d4b600 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4b790 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1d4b910 <col:2> 'void (struct prop_descriptor *, struct prop_local_percpu *)' Function 0x1d4aea0 '__prop_inc_percpu' 'void (struct prop_descriptor *, struct prop_local_percpu *)'
DeclRefExpr 0x1d4baf0 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4bc58 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
FunctionDecl 0x1d4c060 <../include/linux/proportions.h:93:1, line:94:46> __prop_inc_percpu_max 'void (struct prop_descriptor *, struct prop_local_percpu *, long)'
FunctionDecl 0x1d4c4f0 <line:120:1, col:56> prop_local_init_single 'int (struct prop_local_single *)'
FunctionDecl 0x1d4c6c0 <line:121:1, col:60> prop_local_destroy_single 'void (struct prop_local_single *)'
FunctionDecl 0x1d4c920 <line:122:1, col:80> __prop_inc_single 'void (struct prop_descriptor *, struct prop_local_single *)'
FunctionDecl 0x1d4cca0 <line:123:1, line:124:37> prop_fraction_single 'void (struct prop_descriptor *, struct prop_local_single *, long *, long *)'
FunctionDecl 0x1d4cea0 <line:126:1, line:134:1> prop_inc_single 'void (struct prop_descriptor *, struct prop_local_single *)' static inline
DeclRefExpr 0x1d4d050 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4d1e0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1d4d360 <col:2> 'void (struct prop_descriptor *, struct prop_local_single *)' Function 0x1d4c920 '__prop_inc_single' 'void (struct prop_descriptor *, struct prop_local_single *)'
DeclRefExpr 0x1d4d540 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1d4d6a8 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
FunctionDecl 0x1d4dd30 <line:57:1, col:66> secure_computing 'int (int)' static inline
FunctionDecl 0x1d4ded0 <line:58:1, col:72> secure_computing_strict 'void (int)' static inline
FunctionDecl 0x1d4e080 <line:60:1, line:63:1> prctl_get_seccomp 'long (void)' static inline
FunctionDecl 0x1d4e310 <../include/linux/seccomp.h:65:1, line:68:1> prctl_set_seccomp 'long (unsigned long, char *)' static inline
FunctionDecl 0x1d4e610 <../include/linux/seccomp.h:70:1, line:73:1> seccomp_mode 'int (struct seccomp *)' static inline
FunctionDecl 0x1d4e7c0 <line:81:1, line:84:1> put_seccomp_filter 'void (struct task_struct *)' static inline
FunctionDecl 0x1d4e950 <line:85:1, line:88:1> get_seccomp_filter 'void (struct task_struct *)' static inline
FunctionDecl 0x1d5efc0 <line:116:1, line:120:1> plist_head_init 'void (struct plist_head *)' static inline
DeclRefExpr 0x1d5f068 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x1d5f3f0 <line:127:1, line:132:1> plist_node_init 'void (struct plist_node *, int)' static inline
DeclRefExpr 0x1d5f578 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1d5f678 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x1d5f960 <line:134:1, col:71> plist_add 'void (struct plist_node *, struct plist_head *)' extern
FunctionDecl 0x1d5fb50 <line:135:1, col:71> plist_del 'void (struct plist_node *, struct plist_head *)' extern
FunctionDecl 0x1d5fe70 <line:181:1, line:184:1> plist_head_empty 'int (const struct plist_head *)' static inline
DeclRefExpr 0x1d5ff18 <col:9> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x1d60210 <line:190:1, line:193:1> plist_node_empty 'int (const struct plist_node *)' static inline
DeclRefExpr 0x1d602b8 <col:9> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x1d605d0 <line:237:1, line:241:1> plist_first 'struct plist_node *(const struct plist_head *)' static inline
FunctionDecl 0x1d60bc0 <line:249:1, line:253:1> plist_last 'struct plist_node *(const struct plist_head *)' static inline
FunctionDecl 0x1d61470 <line:48:2, line:52:2> rt_mutex_debug_check_no_locks_freed 'int (const void *, unsigned long)' static inline
FunctionDecl 0x1d61760 <line:82:1, line:85:1> rt_mutex_is_locked 'int (struct rt_mutex *)' static inline
FunctionDecl 0x1d61b30 <line:87:1, col:68> __rt_mutex_init 'void (struct rt_mutex *, const char *)' extern
FunctionDecl 0x1d61d10 <line:88:1, col:51> rt_mutex_destroy 'void (struct rt_mutex *)' extern
FunctionDecl 0x1d61e60 <line:90:1, col:48> rt_mutex_lock 'void (struct rt_mutex *)' extern
FunctionDecl 0x1d620b0 <line:91:1, line:92:26> rt_mutex_lock_interruptible 'int (struct rt_mutex *, int)' extern
FunctionDecl 0x1d62440 <line:93:1, line:95:25> rt_mutex_timed_lock 'int (struct rt_mutex *, struct hrtimer_sleeper *, int)' extern
FunctionDecl 0x1d625a0 <line:97:1, col:50> rt_mutex_trylock 'int (struct rt_mutex *)' extern
FunctionDecl 0x1d626f0 <line:99:1, col:50> rt_mutex_unlock 'void (struct rt_mutex *)' extern
FunctionDecl 0x1d67600 <line:9:1, col:71> getrusage 'int (struct task_struct *, int, struct rusage *)'
FunctionDecl 0x1d67a20 <line:10:1, line:11:51> do_prlimit 'int (struct task_struct *, unsigned int, struct rlimit *, struct rlimit *)'
FunctionDecl 0x1d680e0 <line:19:1, line:20:33> timerqueue_add 'void (struct timerqueue_head *, struct timerqueue_node *)' extern
FunctionDecl 0x1d682d0 <line:21:1, line:22:33> timerqueue_del 'void (struct timerqueue_head *, struct timerqueue_node *)' extern
FunctionDecl 0x1d684d0 <line:23:1, line:24:35> timerqueue_iterate_next 'struct timerqueue_node *(struct timerqueue_node *)' extern
FunctionDecl 0x1d686f0 <line:34:1, line:38:1> timerqueue_getnext 'struct timerqueue_node *(struct timerqueue_head *)' static inline
FunctionDecl 0x1d68990 <line:40:1, line:43:1> timerqueue_init 'void (struct timerqueue_node *)' static inline
FunctionDecl 0x1d68dc0 <line:45:1, line:49:1> timerqueue_init_head 'void (struct timerqueue_head *)' static inline
FunctionDecl 0x1d6ab00 <line:196:1, line:200:1> hrtimer_set_expires 'void (struct hrtimer *, ktime_t)' static inline
FunctionDecl 0x1d73d70 <line:202:1, line:206:1> hrtimer_set_expires_range 'void (struct hrtimer *, ktime_t, ktime_t)' static inline
DeclRefExpr 0x1d73fa0 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
FunctionDecl 0x1d74320 <line:208:1, line:212:1> hrtimer_set_expires_range_ns 'void (struct hrtimer *, ktime_t, unsigned long)' static inline
DeclRefExpr 0x1d74550 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d745a0 <col:45> 'ktime_t (u64)' Function 0x1abd040 'ns_to_ktime' 'ktime_t (u64)'
FunctionDecl 0x1d74920 <line:214:1, line:218:1> hrtimer_set_expires_tv64 'void (struct hrtimer *, s64)' static inline
FunctionDecl 0x1d74d60 <line:220:1, line:224:1> hrtimer_add_expires 'void (struct hrtimer *, ktime_t)' static inline
DeclRefExpr 0x1d74eb0 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d750b8 <col:24> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1abcde0 'ktime_add_safe' 'ktime_t (const ktime_t, const ktime_t)'
FunctionDecl 0x1d753f0 <line:226:1, line:230:1> hrtimer_add_expires_ns 'void (struct hrtimer *, u64)' static inline
DeclRefExpr 0x1d75540 <col:24> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
DeclRefExpr 0x1d75748 <col:24> 'ktime_t (const ktime_t, u64)' Function 0x1ab8b90 'ktime_add_ns' 'ktime_t (const ktime_t, u64)'
FunctionDecl 0x1d75a60 <line:232:1, line:235:1> hrtimer_get_expires 'ktime_t (const struct hrtimer *)' static inline
FunctionDecl 0x1d75cb0 <line:237:1, line:240:1> hrtimer_get_softexpires 'ktime_t (const struct hrtimer *)' static inline
FunctionDecl 0x1d75f50 <line:242:1, line:245:1> hrtimer_get_expires_tv64 's64 (const struct hrtimer *)' static inline
FunctionDecl 0x1d761d0 <line:246:1, line:249:1> hrtimer_get_softexpires_tv64 's64 (const struct hrtimer *)' static inline
FunctionDecl 0x1d76420 <line:251:1, line:254:1> hrtimer_get_expires_ns 's64 (const struct hrtimer *)' static inline
DeclRefExpr 0x1d764c8 <col:9> 's64 (const ktime_t)' Function 0x1aba750 'ktime_to_ns' 's64 (const ktime_t)'
FunctionDecl 0x1d766e0 <line:256:1, line:259:1> hrtimer_expires_remaining 'ktime_t (const struct hrtimer *)' static inline
DeclRefExpr 0x1d76788 <col:9> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1ab7d00 'ktime_sub' 'ktime_t (const ktime_t, const ktime_t)'
FunctionDecl 0x1d76a80 <line:299:1, col:54> hrtimer_peek_ahead_timers 'void (void)' static inline
FunctionDecl 0x1d76c60 <line:305:1, line:308:1> hrtimer_cb_get_time 'ktime_t (struct hrtimer *)' static inline
FunctionDecl 0x1d76f40 <line:310:1, line:313:1> hrtimer_is_hres_active 'int (struct hrtimer *)' static inline
FunctionDecl 0x1d770e0 <line:315:1, col:50> clock_was_set_delayed 'void (void)' static inline
FunctionDecl 0x1d77230 <line:319:1, col:31> clock_was_set 'void (void)' extern
FunctionDecl 0x1d77360 <line:323:1, col:50> timerfd_clock_was_set 'void (void)' static inline
FunctionDecl 0x1d774b0 <line:325:1, col:33> hrtimers_resume 'void (void)' extern
FunctionDecl 0x1d775e0 <line:327:1, col:30> ktime_get 'ktime_t (void)' extern
FunctionDecl 0x1d77710 <line:328:1, col:35> ktime_get_real 'ktime_t (void)' extern
FunctionDecl 0x1d77840 <line:329:1, col:39> ktime_get_boottime 'ktime_t (void)' extern
FunctionDecl 0x1d77970 <line:330:1, col:47> ktime_get_monotonic_offset 'ktime_t (void)' extern
FunctionDecl 0x1d77f40 <line:331:1, col:39> ktime_get_clocktai 'ktime_t (void)' extern
FunctionDecl 0x1d78260 <line:332:1, line:333:24> ktime_get_update_offsets 'ktime_t (ktime_t *, ktime_t *, ktime_t *)' extern
FunctionDecl 0x1d78590 <col:1, col:52> DECLARE_PER_CPU 'int (struct tick_device, int)'
FunctionDecl 0x1d788c0 <line:341:1, line:342:27> hrtimer_init 'void (struct hrtimer *, clockid_t, enum hrtimer_mode)' extern
FunctionDecl 0x1d78b20 <line:350:1, line:355:1> hrtimer_init_on_stack 'void (struct hrtimer *, clockid_t, enum hrtimer_mode)' static inline
DeclRefExpr 0x1d78bd8 <col:2> 'void (struct hrtimer *, clockid_t, enum hrtimer_mode)' Function 0x1d788c0 'hrtimer_init' 'void (struct hrtimer *, clockid_t, enum hrtimer_mode)'
FunctionDecl 0x1d78ec0 <line:356:1, col:70> destroy_hrtimer_on_stack 'void (struct hrtimer *)' static inline
FunctionDecl 0x1d791d0 <line:360:1, line:361:33> hrtimer_start 'int (struct hrtimer *, ktime_t, const enum hrtimer_mode)' extern
FunctionDecl 0x1d79550 <line:362:1, line:363:56> hrtimer_start_range_ns 'int (struct hrtimer *, ktime_t, unsigned long, const enum hrtimer_mode)' extern
FunctionDecl 0x1d79970 <line:364:1, line:367:45> __hrtimer_start_range_ns 'int (struct hrtimer *, ktime_t, unsigned long, const enum hrtimer_mode, int)' extern
FunctionDecl 0x1d79ae0 <line:369:1, col:48> hrtimer_cancel 'int (struct hrtimer *)' extern
FunctionDecl 0x1d79c30 <line:370:1, col:55> hrtimer_try_to_cancel 'int (struct hrtimer *)' extern
FunctionDecl 0x1d79e90 <line:372:1, line:381:1> hrtimer_start_expires 'int (struct hrtimer *, enum hrtimer_mode)' static inline
DeclRefExpr 0x1d7a0f0 <col:9> 'ktime_t (const struct hrtimer *)' Function 0x1d75cb0 'hrtimer_get_softexpires' 'ktime_t (const struct hrtimer *)'
DeclRefExpr 0x1d7a260 <col:9> 'ktime_t (const struct hrtimer *)' Function 0x1d75a60 'hrtimer_get_expires' 'ktime_t (const struct hrtimer *)'
DeclRefExpr 0x1d7a378 <col:10> 's64 (const ktime_t)' Function 0x1aba750 'ktime_to_ns' 's64 (const ktime_t)'
DeclRefExpr 0x1d7a3a0 <col:22> 'ktime_t (const ktime_t, const ktime_t)' Function 0x1ab7d00 'ktime_sub' 'ktime_t (const ktime_t, const ktime_t)'
DeclRefExpr 0x1d7a520 <col:9> 'int (struct hrtimer *, ktime_t, unsigned long, const enum hrtimer_mode)' Function 0x1d79550 'hrtimer_start_range_ns' 'int (struct hrtimer *, ktime_t, unsigned long, const enum hrtimer_mode)'
FunctionDecl 0x1d7a820 <line:383:1, line:386:1> hrtimer_restart 'int (struct hrtimer *)' static inline
DeclRefExpr 0x1d7a8c8 <col:9> 'int (struct hrtimer *, enum hrtimer_mode)' Function 0x1d79e90 'hrtimer_start_expires' 'int (struct hrtimer *, enum hrtimer_mode)'
FunctionDecl 0x1d7ab00 <line:389:1, col:65> hrtimer_get_remaining 'ktime_t (const struct hrtimer *)' extern
FunctionDecl 0x1d7ad50 <line:390:1, col:76> hrtimer_get_res 'int (const clockid_t, struct timespec *)' extern
FunctionDecl 0x1d7ae90 <line:392:1, col:43> hrtimer_get_next_event 'ktime_t (void)' extern
FunctionDecl 0x1d7b060 <line:399:1, line:402:1> hrtimer_active 'int (const struct hrtimer *)' static inline
FunctionDecl 0x1d7b2e0 <line:407:1, line:410:1> hrtimer_is_queued 'int (struct hrtimer *)' static inline
FunctionDecl 0x1d7b570 <line:416:1, line:419:1> hrtimer_callback_running 'int (struct hrtimer *)' static inline
FunctionDecl 0x1d7b990 <line:422:1, line:423:69> hrtimer_forward 'u64 (struct hrtimer *, ktime_t, ktime_t)' extern
FunctionDecl 0x1d7bbf0 <line:426:1, line:430:1> hrtimer_forward_now 'u64 (struct hrtimer *, ktime_t)' static inline
DeclRefExpr 0x1d7bca0 <col:9> 'u64 (struct hrtimer *, ktime_t, ktime_t)' Function 0x1d7b990 'hrtimer_forward' 'u64 (struct hrtimer *, ktime_t, ktime_t)'
FunctionDecl 0x1d82250 <line:433:1, line:436:33> hrtimer_nanosleep 'long (struct timespec *, struct timespec *, const enum hrtimer_mode, const clockid_t)' extern
FunctionDecl 0x1d823c0 <line:437:1, col:74> hrtimer_nanosleep_restart 'long (struct restart_block *)' extern
FunctionDecl 0x1d82620 <line:439:1, line:440:29> hrtimer_init_sleeper 'void (struct hrtimer_sleeper *, struct task_struct *)' extern
FunctionDecl 0x1d82900 <line:442:1, line:443:35> schedule_hrtimeout_range 'int (ktime_t *, unsigned long, const enum hrtimer_mode)' extern
FunctionDecl 0x1d82c70 <line:444:1, line:445:63> schedule_hrtimeout_range_clock 'int (ktime_t *, unsigned long, const enum hrtimer_mode, int)' extern
FunctionDecl 0x1d82ed0 <line:446:1, col:77> schedule_hrtimeout 'int (ktime_t *, const enum hrtimer_mode)' extern
FunctionDecl 0x1d83010 <line:449:1, col:36> hrtimer_run_queues 'void (void)' extern
FunctionDecl 0x1d83140 <line:450:1, col:37> hrtimer_run_pending 'void (void)' extern
FunctionDecl 0x1d83480 <../include/linux/hrtimer.h:456:1, col:49> ktime_divns 'u64 (const ktime_t, s64)' extern
FunctionDecl 0x1d835c0 <line:462:1, col:39> sysrq_timer_list_show 'void (void)' extern
FunctionDecl 0x1d839b0 <line:42:1, line:45:1> account_scheduler_latency 'void (struct task_struct *, int, int)' static inline
FunctionDecl 0x1d83b30 <line:47:1, line:49:1> clear_all_latency_tracing 'void (struct task_struct *)' static inline
FunctionDecl 0x1db3470 <line:42:1, line:43:38> proc_dostring 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db37c0 <line:44:1, line:45:38> proc_dointvec 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db3b10 <line:46:1, line:47:38> proc_dointvec_minmax 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db3e60 <line:48:1, line:49:39> proc_dointvec_jiffies 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db41b0 <line:50:1, line:51:39> proc_dointvec_userhz_jiffies 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db4500 <line:52:1, line:53:42> proc_dointvec_ms_jiffies 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db4850 <line:54:1, line:55:40> proc_doulongvec_minmax 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db4ba0 <line:56:1, line:57:44> proc_doulongvec_ms_jiffies_minmax 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db4ef0 <line:58:1, line:59:38> proc_do_large_bitmap 'int (struct ctl_table *, int, void *, size_t *, loff_t *)' extern
FunctionDecl 0x1db52d0 <line:94:1, line:97:1> proc_sys_poll_event 'void *(struct ctl_table_poll *)' static inline
DeclRefExpr 0x1db5378 <col:32> 'int ()' Function 0x19b4be0 'atomic_read' 'int ()'
FunctionDecl 0x1db7860 <line:194:1, line:197:1> register_sysctl_table 'struct ctl_table_header *(struct ctl_table *)' static inline
FunctionDecl 0x1db7c40 <../include/linux/sysctl.h:199:1, line:203:1> register_sysctl_paths 'struct ctl_table_header *(const struct ctl_path *, struct ctl_table *)' static inline
FunctionDecl 0x1db7ef0 <../include/linux/sysctl.h:205:1, line:207:1> unregister_sysctl_table 'void (struct ctl_table_header *)' static inline
FunctionDecl 0x1db82a0 <line:209:1, line:213:1> setup_sysctl_set 'void (struct ctl_table_set *, struct ctl_table_root *, int (*)(struct ctl_table_set *))' static inline
FunctionDecl 0x1db85c0 <line:29:1, line:32:1> selinux_is_enabled 'bool (void)' static inline
FunctionDecl 0x1db8e70 <line:49:1, line:53:1> get_group_info 'struct group_info *(struct group_info *)' static inline
DeclRefExpr 0x1db8f18 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x1db9220 <line:65:1, col:43> groups_alloc 'struct group_info *(int)' extern
FunctionDecl 0x1db9470 <line:67:1, col:44> groups_free 'void (struct group_info *)' extern
FunctionDecl 0x1db9640 <line:68:1, col:50> set_current_groups 'int (struct group_info *)' extern
FunctionDecl 0x1db9900 <line:69:1, col:57> set_groups 'int (struct cred *, struct group_info *)' extern
FunctionDecl 0x1db9bb0 <line:70:1, col:59> groups_search 'int (const struct group_info *, kgid_t)' extern
FunctionDecl 0x1db9d30 <line:76:1, col:29> in_group_p 'int (kgid_t)' extern
FunctionDecl 0x1db9e70 <line:77:1, col:30> in_egroup_p 'int (kgid_t)' extern
FunctionDecl 0x1dba7c0 <line:141:1, col:37> __put_cred 'void (struct cred *)' extern
FunctionDecl 0x1dba910 <line:142:1, col:44> exit_creds 'void (struct task_struct *)' extern
FunctionDecl 0x1dbab60 <line:143:1, col:58> copy_creds 'int (struct task_struct *, unsigned long)' extern
FunctionDecl 0x1dbad60 <line:144:1, col:61> get_task_cred 'const struct cred *(struct task_struct *)' extern
FunctionDecl 0x1dbaf20 <line:145:1, col:42> cred_alloc_blank 'struct cred *(void)' extern
FunctionDecl 0x1dbb060 <line:146:1, col:39> prepare_creds 'struct cred *(void)' extern
FunctionDecl 0x1dbb1a0 <line:147:1, col:44> prepare_exec_creds 'struct cred *(void)' extern
FunctionDecl 0x1dbb370 <line:148:1, col:38> commit_creds 'int (struct cred *)' extern
FunctionDecl 0x1dbb4c0 <line:149:1, col:38> abort_creds 'void (struct cred *)' extern
FunctionDecl 0x1dbb6b0 <line:150:1, col:61> override_creds 'const struct cred *(const struct cred *)' extern
FunctionDecl 0x1dbb880 <line:151:1, col:45> revert_creds 'void (const struct cred *)' extern
FunctionDecl 0x1dbba70 <line:152:1, col:61> prepare_kernel_cred 'struct cred *(struct task_struct *)' extern
FunctionDecl 0x1dbbcd0 <line:153:1, col:64> change_create_files_as 'int (struct cred *, struct inode *)' extern
FunctionDecl 0x1dbbf30 <line:154:1, col:52> set_security_override 'int (struct cred *, u32)' extern
FunctionDecl 0x1dbc190 <line:155:1, col:70> set_security_override_from_ctx 'int (struct cred *, const char *)' extern
FunctionDecl 0x1dbc380 <line:156:1, col:61> set_create_files_as 'int (struct cred *, struct inode *)' extern
FunctionDecl 0x1dbc5e0 <../include/linux/cred.h:188:1, line:190:1> validate_creds 'void (const struct cred *)' static inline
FunctionDecl 0x1dbc750 <line:191:1, line:193:1> validate_creds_for_do_exit 'void (struct task_struct *)' static inline
FunctionDecl 0x1dbc8a0 <line:194:1, line:196:1> validate_process_creds 'void (void)' static inline
FunctionDecl 0x1dbcad0 <line:206:1, line:210:1> get_new_cred 'struct cred *(struct cred *)' static inline
DeclRefExpr 0x1dbcb78 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x1dbce00 <line:225:1, line:230:1> get_cred 'const struct cred *(const struct cred *)' static inline
DeclRefExpr 0x1dbcfd0 <col:2> 'void (const struct cred *)' Function 0x1dbc5e0 'validate_creds' 'void (const struct cred *)'
DeclRefExpr 0x1dbd0d8 <col:9> 'struct cred *(struct cred *)' Function 0x1dbcad0 'get_new_cred' 'struct cred *(struct cred *)'
FunctionDecl 0x1dbd320 <line:243:1, line:250:1> put_cred 'void (const struct cred *)' static inline
DeclRefExpr 0x1dbd4f0 <col:2> 'void (const struct cred *)' Function 0x1dbc5e0 'validate_creds' 'void (const struct cred *)'
DeclRefExpr 0x1dbd5b8 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1dbd6d8 <col:3> 'void (struct cred *)' Function 0x1dba7c0 '__put_cred' 'void (struct cred *)'
FunctionDecl 0x1dbe0a0 <line:84:1, col:78> get_avenrun 'void (unsigned long *, unsigned long, int)' extern
FunctionDecl 0x1dbe4d0 <line:101:1, col:29> nr_processes 'int (void)' extern
FunctionDecl 0x1dbe600 <line:102:1, col:37> nr_running 'unsigned long (void)' extern
FunctionDecl 0x1dbe730 <line:103:1, col:36> nr_iowait 'unsigned long (void)' extern
FunctionDecl 0x1dbe8a0 <line:104:1, col:43> nr_iowait_cpu 'unsigned long (int)' extern
FunctionDecl 0x1dbe9e0 <line:105:1, col:40> this_cpu_load 'unsigned long (void)' extern
FunctionDecl 0x1dbeb10 <line:108:1, col:49> calc_global_load 'void (unsigned long)' extern
FunctionDecl 0x1dbec50 <line:109:1, col:38> update_cpu_load_nohz 'void (void)' extern
FunctionDecl 0x1dbed80 <line:111:1, col:54> get_parent_ip 'unsigned long (unsigned long)' extern
FunctionDecl 0x1dbeec0 <line:113:1, col:34> dump_cpu_task 'void (int)' extern
FunctionDecl 0x1dcccb0 <line:219:1, col:28> sched_init 'void (void)' extern
FunctionDecl 0x1dccde0 <line:220:1, col:32> sched_init_smp 'void (void)' extern
FunctionDecl 0x1dccf30 <line:221:1, col:62> schedule_tail 'void (struct task_struct *)' extern
FunctionDecl 0x1dcd100 <line:222:1, col:56> init_idle 'void (struct task_struct *, int)' extern
FunctionDecl 0x1dcd260 <line:223:1, col:59> init_idle_bootup_task 'void (struct task_struct *)' extern
FunctionDecl 0x1dcd3a0 <line:225:1, col:38> runqueue_is_locked 'int (int)' extern
FunctionDecl 0x1dcd4e0 <line:232:1, col:55> nohz_balance_enter_idle 'void (int)' static inline
FunctionDecl 0x1dcd630 <line:233:1, col:50> set_cpu_sd_state_idle 'void (void)' static inline
FunctionDecl 0x1dcd780 <line:239:1, col:57> show_state_filter 'void (unsigned long)' extern
FunctionDecl 0x1dcd8c0 <line:241:1, line:244:1> show_state 'void (void)' static inline
DeclRefExpr 0x1dcd960 <col:2> 'void (unsigned long)' Function 0x1dcd780 'show_state_filter' 'void (unsigned long)'
FunctionDecl 0x1dcdad0 <line:246:1, col:39> show_regs 'void (struct pt_regs *)' extern
FunctionDecl 0x1dcdd20 <line:253:1, col:67> show_stack 'void (struct task_struct *, unsigned long *)' extern
FunctionDecl 0x1dcde60 <line:255:1, col:22> io_schedule 'void (void)'
FunctionDecl 0x1dcdf90 <line:256:1, col:38> io_schedule_timeout 'long (long)'
FunctionDecl 0x1dce0d0 <line:258:1, col:27> cpu_init 'void (void)' extern
FunctionDecl 0x1dce200 <line:259:1, col:27> trap_init 'void (void)' extern
FunctionDecl 0x1dce330 <line:260:1, col:42> update_process_times 'void (int)' extern
FunctionDecl 0x1dce470 <line:261:1, col:32> scheduler_tick 'void (void)' extern
FunctionDecl 0x1dce5c0 <line:263:1, col:50> sched_show_task 'void (struct task_struct *)' extern
FunctionDecl 0x1dce700 <line:275:1, line:277:1> touch_softlockup_watchdog 'void (void)' static inline
FunctionDecl 0x1dce850 <line:278:1, line:280:1> touch_softlockup_watchdog_sync 'void (void)' static inline
FunctionDecl 0x1dce9a0 <line:281:1, line:283:1> touch_all_softlockup_watchdogs 'void (void)' static inline
FunctionDecl 0x1dceaf0 <line:284:1, line:286:1> lockup_detector_init 'void (void)' static inline
FunctionDecl 0x1dcec40 <line:292:1, line:294:1> reset_hung_task_detector 'void (void)' static inline
FunctionDecl 0x1dceea0 <line:304:1, col:49> in_sched_functions 'int (unsigned long)' extern
FunctionDecl 0x1dcefe0 <line:307:1, col:56> schedule_timeout 'long (long)' extern
FunctionDecl 0x1dcf120 <line:308:1, col:70> schedule_timeout_interruptible 'long (long)' extern
FunctionDecl 0x1dcf260 <line:309:1, col:65> schedule_timeout_killable 'long (long)' extern
FunctionDecl 0x1dcf3a0 <line:310:1, col:72> schedule_timeout_uninterruptible 'long (long)' extern
FunctionDecl 0x1dcf4e0 <line:311:12, col:30> schedule 'void (void)'
FunctionDecl 0x1dcf610 <line:312:1, col:43> schedule_preempt_disabled 'void (void)' extern
FunctionDecl 0x1dcf850 <line:327:1, col:65> arch_pick_mmap_layout 'void (struct mm_struct *)' static inline
FunctionDecl 0x1dcfac0 <line:331:1, col:57> set_dumpable 'void (struct mm_struct *, int)' extern
FunctionDecl 0x1dcfca0 <line:332:1, col:45> get_dumpable 'int (struct mm_struct *)' extern
FunctionDecl 0x1dda440 <line:648:1, line:652:1> signal_group_exit 'int (const struct signal_struct *)' static inline
FunctionDecl 0x1ddab80 <line:692:1, col:32> uids_sysfs_init 'int (void)' extern
FunctionDecl 0x1ddad50 <line:694:1, col:44> find_user 'struct user_struct *(kuid_t)' extern
FunctionDecl 0x1ddb030 <line:749:1, line:759:1> sched_info_on 'int (void)' static inline
FunctionDecl 0x1ddb720 <line:904:1, line:908:1> partition_sched_domains 'void (int, cpumask_var_t *, struct sched_domain_attr *)' static inline
FunctionDecl 0x1ddb980 <line:910:1, line:913:1> cpus_share_cache 'bool (int, int)' static inline
FunctionDecl 0x1ddbc00 <line:924:1, col:60> prefetch_stack 'void (struct task_struct *)' static inline
FunctionDecl 0x1de0250 <line:1475:1, line:1478:1> task_numa_fault 'void (int, int, int, int)' static inline
FunctionDecl 0x1de0450 <line:1479:1, line:1482:1> task_numa_group_id 'pid_t (struct task_struct *)' static inline
FunctionDecl 0x1de0670 <line:1483:1, line:1485:1> set_numabalancing_state 'void (bool)' static inline
FunctionDecl 0x1de07e0 <line:1486:1, line:1488:1> task_numa_free 'void (struct task_struct *)' static inline
FunctionDecl 0x1de56a0 <line:1491:1, line:1494:1> task_pid 'struct pid *(struct task_struct *)' static inline
FunctionDecl 0x1de59d0 <line:1496:1, line:1499:1> task_tgid 'struct pid *(struct task_struct *)' static inline
FunctionDecl 0x1de5cf0 <line:1506:1, line:1509:1> task_pgrp 'struct pid *(struct task_struct *)' static inline
FunctionDecl 0x1de6010 <line:1511:1, line:1514:1> task_session 'struct pid *(struct task_struct *)' static inline
FunctionDecl 0x1de6530 <line:1531:1, line:1532:28> __task_pid_nr_ns 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de6690 <line:1534:1, line:1537:1> task_pid_nr 'pid_t (struct task_struct *)' static inline
FunctionDecl 0x1de69c0 <line:1539:1, line:1543:1> task_pid_nr_ns 'pid_t (struct task_struct *, struct pid_namespace *)' static inline
DeclRefExpr 0x1de6a70 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de6cf0 <line:1545:1, line:1548:1> task_pid_vnr 'pid_t (struct task_struct *)' static inline
DeclRefExpr 0x1de6d98 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de7010 <../include/linux/sched.h:1551:1, line:1554:1> task_tgid_nr 'pid_t (struct task_struct *)' static inline
FunctionDecl 0x1de72c0 <line:1556:1, col:72> task_tgid_nr_ns 'pid_t (struct task_struct *, struct pid_namespace *)'
FunctionDecl 0x1de7420 <line:1558:1, line:1561:1> task_tgid_vnr 'pid_t (struct task_struct *)' static inline
DeclRefExpr 0x1de74c8 <col:9> 'pid_t (struct pid *)' Function 0x1b9a320 'pid_vnr' 'pid_t (struct pid *)'
DeclRefExpr 0x1de74f0 <col:17> 'struct pid *(struct task_struct *)' Function 0x1de59d0 'task_tgid' 'struct pid *(struct task_struct *)'
FunctionDecl 0x1de7820 <line:1564:1, line:1568:1> task_pgrp_nr_ns 'pid_t (struct task_struct *, struct pid_namespace *)' static inline
DeclRefExpr 0x1de78d0 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de7b00 <line:1570:1, line:1573:1> task_pgrp_vnr 'pid_t (struct task_struct *)' static inline
DeclRefExpr 0x1de7ba8 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de7eb0 <../include/linux/sched.h:1576:1, line:1580:1> task_session_nr_ns 'pid_t (struct task_struct *, struct pid_namespace *)' static inline
DeclRefExpr 0x1de7f60 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de8190 <line:1582:1, line:1585:1> task_session_vnr 'pid_t (struct task_struct *)' static inline
DeclRefExpr 0x1de8238 <col:9> 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)' Function 0x1de6530 '__task_pid_nr_ns' 'pid_t (struct task_struct *, enum pid_type, struct pid_namespace *)'
FunctionDecl 0x1de84b0 <../include/linux/sched.h:1588:1, line:1591:1> task_pgrp_nr 'pid_t (struct task_struct *)' static inline
DeclRefExpr 0x1de8558 <col:9> 'pid_t (struct task_struct *, struct pid_namespace *)' Function 0x1de7820 'task_pgrp_nr_ns' 'pid_t (struct task_struct *, struct pid_namespace *)'
FunctionDecl 0x1de8800 <line:1603:1, line:1606:1> pid_alive 'int (struct task_struct *)' static inline
FunctionDecl 0x1de8b90 <line:1616:1, line:1619:1> is_global_init 'int (struct task_struct *)' static inline
FunctionDecl 0x1de8e70 <line:1623:1, col:46> free_task 'void (struct task_struct *)' extern
FunctionDecl 0x1de8fc0 <line:1626:1, col:52> __put_task_struct 'void (struct task_struct *)' extern
FunctionDecl 0x1de9110 <line:1628:1, line:1632:1> put_task_struct 'void (struct task_struct *)' static inline
DeclRefExpr 0x1de91b8 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1de92b8 <col:3> 'void (struct task_struct *)' Function 0x1de8fc0 '__put_task_struct' 'void (struct task_struct *)'
FunctionDecl 0x1de95f0 <line:1641:1, line:1648:1> task_cputime 'void (struct task_struct *, int *, int *)' static inline
FunctionDecl 0x1de98e0 <line:1650:1, line:1658:1> task_cputime_scaled 'void (struct task_struct *, int *, int *)' static inline
FunctionDecl 0x1de9ae0 <line:1660:1, line:1663:1> task_gtime 'int (struct task_struct *)' static inline
FunctionDecl 0x1de9d80 <line:1665:1, col:86> task_cputime_adjusted 'void (struct task_struct *, int *, int *)' extern
FunctionDecl 0x1de9fd0 <line:1666:1, col:94> thread_group_cputime_adjusted 'void (struct task_struct *, int *, int *)' extern
FunctionDecl 0x1dea160 <line:1728:1, line:1733:1> memalloc_noio_flags 'gfp_t (gfp_t)' static inline
FunctionDecl 0x1dea460 <line:1735:1, line:1740:1> memalloc_noio_save 'unsigned int (void)' static inline
FunctionDecl 0x1dea6e0 <line:1742:1, line:1745:1> memalloc_noio_restore 'void (unsigned int)' static inline
FunctionDecl 0x1dea9b0 <line:1771:1, line:1772:26> task_set_jobctl_pending 'bool (struct task_struct *, unsigned int)' extern
FunctionDecl 0x1deab10 <line:1773:1, col:64> task_clear_jobctl_trapping 'void (struct task_struct *)' extern
FunctionDecl 0x1dead60 <line:1774:1, line:1775:28> task_clear_jobctl_pending 'void (struct task_struct *, unsigned int)' extern
FunctionDecl 0x1deaec0 <line:1797:1, line:1799:1> rcu_copy_process 'void (struct task_struct *)' static inline
FunctionDecl 0x1deb1c0 <line:1803:1, line:1808:1> tsk_restore_flags 'void (struct task_struct *, unsigned long, unsigned long)' static inline
FunctionDecl 0x1deb6b0 <line:1817:1, line:1820:1> do_set_cpus_allowed 'void (struct task_struct *, const struct cpumask *)' static inline
FunctionDecl 0x1deb930 <line:1821:1, line:1827:1> set_cpus_allowed_ptr 'int (struct task_struct *, const struct cpumask *)' static inline
FunctionDecl 0x1debc80 <line:1834:1, col:49> calc_load_enter_idle 'void (void)' static inline
FunctionDecl 0x1debdd0 <line:1835:1, col:48> calc_load_exit_idle 'void (void)' static inline
FunctionDecl 0x1dec030 <line:1839:1, line:1842:1> set_cpus_allowed 'int (struct task_struct *, cpumask_t)' static inline
DeclRefExpr 0x1dec0e0 <col:9> 'int (struct task_struct *, const struct cpumask *)' Function 0x1deb930 'set_cpus_allowed_ptr' 'int (struct task_struct *, const struct cpumask *)'
FunctionDecl 0x1dec470 <line:1857:1, col:29> cpu_clock 'u64 (int)' extern
FunctionDecl 0x1dec5b0 <line:1858:1, col:28> local_clock 'u64 (void)' extern
FunctionDecl 0x1dec6e0 <line:1859:1, col:35> sched_clock_cpu 'u64 (int)' extern
FunctionDecl 0x1dec820 <line:1862:1, col:34> sched_clock_init 'void (void)' extern
FunctionDecl 0x1dec950 <line:1865:1, line:1867:1> sched_clock_tick 'void (void)' static inline
FunctionDecl 0x1decaa0 <line:1869:1, line:1871:1> sched_clock_idle_sleep_event 'void (void)' static inline
FunctionDecl 0x1decc70 <line:1873:1, line:1875:1> sched_clock_idle_wakeup_event 'void (u64)' static inline
FunctionDecl 0x1decdc0 <line:1899:1, col:54> enable_sched_clock_irqtime 'void (void)' static inline
FunctionDecl 0x1decf10 <line:1900:1, col:55> disable_sched_clock_irqtime 'void (void)' static inline
FunctionDecl 0x1ded0f0 <line:1903:1, line:1904:44> task_sched_runtime 'unsigned long long (struct task_struct *)' extern
FunctionDecl 0x1ded230 prev 0x1decaa0 <line:1913:1, col:46> sched_clock_idle_sleep_event 'void (void)' extern
FunctionDecl 0x1ded360 prev 0x1decc70 <line:1914:1, col:55> sched_clock_idle_wakeup_event 'void (u64)' extern
FunctionDecl 0x1ded4a0 <line:1919:1, col:42> idle_task_exit 'void (void)' static inline
FunctionDecl 0x1ded5f0 <line:1925:1, col:48> wake_up_nohz_cpu 'void (int)' static inline
FunctionDecl 0x1df32e0 <line:1932:1, col:62> sched_can_stop_tick 'bool (void)' static inline
FunctionDecl 0x1df34b0 <line:1945:1, col:75> sched_autogroup_create_attach 'void (struct task_struct *)' static inline
FunctionDecl 0x1df3620 <line:1946:1, col:68> sched_autogroup_detach 'void (struct task_struct *)' static inline
FunctionDecl 0x1df3810 <line:1947:1, col:70> sched_autogroup_fork 'void (struct signal_struct *)' static inline
FunctionDecl 0x1df3980 <line:1948:1, col:70> sched_autogroup_exit 'void (struct signal_struct *)' static inline
FunctionDecl 0x1df3bf0 <line:1951:1, col:57> yield_to 'bool (struct task_struct *, bool)' extern
FunctionDecl 0x1df3e50 <line:1952:1, col:59> set_user_nice 'void (struct task_struct *, long)' extern
FunctionDecl 0x1df4080 <line:1953:1, col:49> task_prio 'int (const struct task_struct *)' extern
FunctionDecl 0x1df41d0 <line:1954:1, col:49> task_nice 'int (const struct task_struct *)' extern
FunctionDecl 0x1df4420 <line:1955:1, col:64> can_nice 'int (const struct task_struct *, const int)' extern
FunctionDecl 0x1df4580 <line:1956:1, col:49> task_curr 'int (const struct task_struct *)' extern
FunctionDecl 0x1df46c0 <line:1957:1, col:28> idle_cpu 'int (int)' extern
FunctionDecl 0x1df4a40 <line:1958:1, line:1959:36> sched_setscheduler 'int (struct task_struct *, int, const struct sched_param *)' extern
FunctionDecl 0x1df4ca0 <line:1960:1, line:1961:37> sched_setscheduler_nocheck 'int (struct task_struct *, int, const struct sched_param *)' extern
FunctionDecl 0x1df4e90 <line:1962:1, col:45> idle_task 'struct task_struct *(int)' extern
FunctionDecl 0x1df5090 <line:1969:1, line:1972:1> is_idle_task 'bool (const struct task_struct *)' static inline
FunctionDecl 0x1df5310 <line:1973:1, col:45> curr_task 'struct task_struct *(int)' extern
FunctionDecl 0x1df5560 <line:1974:1, col:57> set_curr_task 'void (int, struct task_struct *)' extern
FunctionDecl 0x1df56a0 <line:1976:1, col:16> yield 'void (void)'
FunctionDecl 0x1df5b00 <line:1989:1, line:1995:1> kstack_end 'int (void *)' static inline
FunctionDecl 0x1df6060 <line:2016:1, col:54> find_task_by_vpid 'struct task_struct *(pid_t)' extern
FunctionDecl 0x1df62d0 <line:2017:1, line:2018:27> find_task_by_pid_ns 'struct task_struct *(pid_t, struct pid_namespace *)' extern
FunctionDecl 0x1df6430 <line:2021:1, col:45> alloc_uid 'struct user_struct *(kuid_t)' extern
FunctionDecl 0x1df6620 <line:2022:1, line:2026:1> get_uid 'struct user_struct *(struct user_struct *)' static inline
DeclRefExpr 0x1df66c8 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x1df6980 <line:2027:1, col:42> free_uid 'void (struct user_struct *)' extern
FunctionDecl 0x1df6ac0 <line:2031:1, col:45> xtime_update 'void (unsigned long)' extern
FunctionDecl 0x1df6d10 <line:2033:1, col:69> wake_up_state 'int (struct task_struct *, unsigned int)' extern
FunctionDecl 0x1df6e70 <line:2034:1, col:51> wake_up_process 'int (struct task_struct *)' extern
FunctionDecl 0x1df6fc0 <line:2035:1, col:53> wake_up_new_task 'void (struct task_struct *)' extern
FunctionDecl 0x1df7110 <line:2039:2, col:61> kick_process 'void (struct task_struct *)' static inline
FunctionDecl 0x1df7370 <line:2041:1, col:72> sched_fork 'void (unsigned long, struct task_struct *)' extern
FunctionDecl 0x1df74d0 <line:2042:1, col:45> sched_dead 'void (struct task_struct *)' extern
FunctionDecl 0x1df7610 <line:2044:1, col:34> proc_caches_init 'void (void)' extern
FunctionDecl 0x1df7760 <line:2045:1, col:47> flush_signals 'void (struct task_struct *)' extern
FunctionDecl 0x1df78b0 <line:2046:1, col:49> __flush_signals 'void (struct task_struct *)' extern
FunctionDecl 0x1df7a00 <line:2047:1, col:48> ignore_signals 'void (struct task_struct *)' extern
FunctionDecl 0x1df7bd0 <line:2048:1, col:74> flush_signal_handlers 'void (struct task_struct *, int)' extern
FunctionDecl 0x1df7ec0 <line:2049:1, col:83> dequeue_signal 'int (struct task_struct *, sigset_t *, siginfo_t *)' extern
FunctionDecl 0x1df8110 <line:2051:1, line:2061:1> dequeue_signal_lock 'int (struct task_struct *, sigset_t *, siginfo_t *)' static inline
DeclRefExpr 0x1df8350 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1df8540 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1df86d0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1df8850 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1df8910 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x1df8cc8 <col:8> 'int (struct task_struct *, sigset_t *, siginfo_t *)' Function 0x1df7ec0 'dequeue_signal' 'int (struct task_struct *, sigset_t *, siginfo_t *)'
DeclRefExpr 0x1df8e90 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
FunctionDecl 0x1df9380 <line:2063:1, line:2064:24> block_all_signals 'void (int (*)(void *), void *, sigset_t *)' extern
FunctionDecl 0x1df94d0 <line:2065:1, col:37> unblock_all_signals 'void (void)' extern
FunctionDecl 0x1df9620 <line:2066:1, col:48> release_task 'void (struct task_struct *)' extern
FunctionDecl 0x1df9870 <line:2067:1, col:69> send_sig_info 'int (int, struct siginfo *, struct task_struct *)' extern
FunctionDecl 0x1df9ad0 <line:2068:1, col:51> force_sigsegv 'int (int, struct task_struct *)' extern
FunctionDecl 0x1df9d20 <line:2069:1, col:70> force_sig_info 'int (int, struct siginfo *, struct task_struct *)' extern
FunctionDecl 0x1dfa020 <line:2070:1, col:76> __kill_pgrp_info 'int (int, struct siginfo *, struct pid *)' extern
FunctionDecl 0x1dfa280 <line:2071:1, col:72> kill_pid_info 'int (int, struct siginfo *, struct pid *)' extern
FunctionDecl 0x1dfa6a0 <line:2072:1, line:2073:29> kill_pid_info_as_cred 'int (int, struct siginfo *, struct pid *, const struct cred *, u32)' extern
FunctionDecl 0x1dfa9a0 <line:2074:1, col:56> kill_pgrp 'int (struct pid *, int, int)' extern
FunctionDecl 0x1dfabf0 <line:2075:1, col:55> kill_pid 'int (struct pid *, int, int)' extern
FunctionDecl 0x1dfaee0 <line:2076:1, col:55> kill_proc_info 'int (int, struct siginfo *, pid_t)' extern
FunctionDecl 0x1dfb140 <line:2078:1, col:79> __wake_up_parent 'void (struct task_struct *, struct task_struct *)' extern
FunctionDecl 0x1dfdb80 <line:2079:1, col:48> force_sig 'void (int, struct task_struct *)' extern
FunctionDecl 0x1dfde60 <line:2080:1, col:51> send_sig 'int (int, struct task_struct *, int)' extern
FunctionDecl 0x1dfdfc0 <line:2081:1, col:51> zap_other_threads 'int (struct task_struct *)' extern
FunctionDecl 0x1dfe210 <line:2082:1, col:44> sigqueue_alloc 'struct sigqueue *(void)' extern
FunctionDecl 0x1dfe3e0 <line:2083:1, col:44> sigqueue_free 'void (struct sigqueue *)' extern
FunctionDecl 0x1dfe6d0 <line:2084:1, col:77> send_sigqueue 'int (struct sigqueue *, struct task_struct *, int)' extern
FunctionDecl 0x1dfe9d0 <line:2085:1, col:72> do_sigaction 'int (int, struct k_sigaction *, struct k_sigaction *)' extern
FunctionDecl 0x1dfeb20 <line:2087:1, line:2091:1> restore_saved_sigmask 'void (void)' static inline
FunctionDecl 0x1dfebe0 <<invalid sloc>> test_and_clear_restore_sigmask 'int ()'
FunctionDecl 0x1dfee20 <line:2093:1, line:2099:1> sigmask_to_save 'sigset_t *(void)' static inline
FunctionDecl 0x1dfef90 <<invalid sloc>> test_restore_sigmask 'int ()'
FunctionDecl 0x1dff2e0 <line:2101:1, line:2104:1> kill_cad_pid 'int (int, int)' static inline
DeclRefExpr 0x1dff390 <col:9> 'int (struct pid *, int, int)' Function 0x1dfabf0 'kill_pid' 'int (struct pid *, int, int)'
FunctionDecl 0x1dff600 <line:2114:1, line:2123:1> on_sig_stack 'int (unsigned long)' static inline
FunctionDecl 0x1dff7a0 <line:2125:1, line:2129:1> sas_ss_flags 'int (unsigned long)' static inline
FunctionDecl 0x1dffb60 <line:2131:1, line:2140:1> sigsp 'unsigned long (unsigned long, struct ksignal *)' static inline
FunctionDecl 0x1e00070 <line:2145:1, col:40> mm_alloc 'struct mm_struct *(void)' extern
FunctionDecl 0x1e001c0 <line:2148:1, col:40> __mmdrop 'void (struct mm_struct *)' extern
FunctionDecl 0x1e00310 <line:2149:1, line:2153:1> mmdrop 'void (struct mm_struct *)' static inline
DeclRefExpr 0x1e003b8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e003e0 <col:15> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1e00528 <col:3> 'void (struct mm_struct *)' Function 0x1e001c0 '__mmdrop' 'void (struct mm_struct *)'
FunctionDecl 0x1e00730 <line:2156:1, col:37> mmput 'void (struct mm_struct *)' extern
FunctionDecl 0x1e00920 <line:2158:1, col:62> get_task_mm 'struct mm_struct *(struct task_struct *)' extern
FunctionDecl 0x1e00b90 <line:2164:1, col:79> mm_access 'struct mm_struct *(struct task_struct *, unsigned int)' extern
FunctionDecl 0x1e00e00 <line:2166:1, col:64> mm_release 'void (struct task_struct *, struct mm_struct *)' extern
FunctionDecl 0x1e00f80 <line:2168:1, col:56> dup_mm 'struct mm_struct *(struct task_struct *)' extern
FunctionDecl 0x1e012e0 <line:2170:1, line:2171:24> copy_thread 'int (unsigned long, unsigned long, unsigned long, struct task_struct *)' extern
FunctionDecl 0x1e01430 <line:2172:1, col:30> flush_thread 'void (void)' extern
FunctionDecl 0x1e01560 <line:2173:1, col:29> exit_thread 'void (void)' extern
FunctionDecl 0x1e016b0 <line:2175:1, col:44> exit_files 'void (struct task_struct *)' extern
FunctionDecl 0x1e01880 <line:2176:1, col:54> __cleanup_sighand 'void (struct sighand_struct *)' extern
FunctionDecl 0x1e019d0 <line:2178:1, col:48> exit_itimers 'void (struct signal_struct *)' extern
FunctionDecl 0x1e01b10 <line:2179:1, col:38> flush_itimer_signals 'void (void)' extern
FunctionDecl 0x1e01c40 <line:2181:1, col:30> do_group_exit 'void (int)' extern
FunctionDecl 0x1e01d80 <line:2183:1, col:28> allow_signal 'int (int)' extern
FunctionDecl 0x1e01ec0 <line:2184:1, col:31> disallow_signal 'int (int)' extern
FunctionDecl 0x1e02170 <line:2186:1, line:2188:42> do_execve 'int (const char *, const char *const *, const char *const *)' extern
FunctionDecl 0x1e02500 <line:2189:1, col:92> do_fork 'long (unsigned long, unsigned long, unsigned long, int *, int *)' extern
FunctionDecl 0x1e02680 <line:2190:1, col:34> fork_idle 'struct task_struct *(int)'
FunctionDecl 0x1e029e0 <line:2191:1, col:77> kernel_thread 'pid_t (int (*)(void *), void *, unsigned long)' extern
FunctionDecl 0x1e02c40 <line:2193:1, col:62> set_task_comm 'void (struct task_struct *, char *)' extern
FunctionDecl 0x1e02e90 <line:2194:1, col:61> get_task_comm 'char *(char *, struct task_struct *)' extern
FunctionDecl 0x1e02fd0 <line:2200:1, col:42> scheduler_ipi 'void (void)' static inline
FunctionDecl 0x1e03230 <line:2201:1, line:2205:1> wait_task_inactive 'unsigned long (struct task_struct *, long)' static inline
FunctionDecl 0x1e033f0 <line:2214:1, col:44> current_is_single_threaded 'bool (void)' extern
FunctionDecl 0x1e03540 <line:2226:1, line:2229:1> get_nr_threads 'int (struct task_struct *)' static inline
FunctionDecl 0x1e03820 <line:2231:1, line:2234:1> thread_group_leader 'bool (struct task_struct *)' static inline
FunctionDecl 0x1e03aa0 <line:2242:1, line:2245:1> has_group_leader_pid 'bool (struct task_struct *)' static inline
DeclRefExpr 0x1e03b48 <col:9> 'struct pid *(struct task_struct *)' Function 0x1de56a0 'task_pid' 'struct pid *(struct task_struct *)'
FunctionDecl 0x1e03f00 <line:2247:1, line:2251:1> same_thread_group 'bool (struct task_struct *, struct task_struct *)' static inline
FunctionDecl 0x1e04290 <line:2253:1, line:2257:1> next_thread 'struct task_struct *(const struct task_struct *)' static inline
FunctionDecl 0x1e04360 <<invalid sloc>> list_entry_rcu 'int ()'
FunctionDecl 0x1e04590 <line:2259:1, line:2262:1> thread_group_empty 'int (struct task_struct *)' static inline
DeclRefExpr 0x1e04638 <col:9> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x1e04840 <line:2277:1, line:2280:1> task_lock 'void (struct task_struct *)' static inline
DeclRefExpr 0x1e048e8 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
FunctionDecl 0x1e04ab0 <line:2282:1, line:2285:1> task_unlock 'void (struct task_struct *)' static inline
DeclRefExpr 0x1e04b58 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x1e04e40 <line:2287:1, line:2288:28> __lock_task_sighand 'struct sighand_struct *(struct task_struct *, unsigned long *)' extern
FunctionDecl 0x1e05030 <line:2290:1, line:2298:1> lock_task_sighand 'struct sighand_struct *(struct task_struct *, unsigned long *)' static inline
DeclRefExpr 0x1e051a8 <col:8> 'struct sighand_struct *(struct task_struct *, unsigned long *)' Function 0x1e04e40 '__lock_task_sighand' 'struct sighand_struct *(struct task_struct *, unsigned long *)'
FunctionDecl 0x1e055b0 <line:2300:1, line:2304:1> unlock_task_sighand 'void (struct task_struct *, unsigned long *)' static inline
DeclRefExpr 0x1e05660 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
FunctionDecl 0x1e058f0 <line:2348:1, col:71> threadgroup_change_begin 'void (struct task_struct *)' static inline
FunctionDecl 0x1e0ae30 <line:2349:1, col:69> threadgroup_change_end 'void (struct task_struct *)' static inline
FunctionDecl 0x1e0afa0 <line:2350:1, col:63> threadgroup_lock 'void (struct task_struct *)' static inline
FunctionDecl 0x1e0b110 <line:2351:1, col:65> threadgroup_unlock 'void (struct task_struct *)' static inline
FunctionDecl 0x1e0b310 <line:2359:1, line:2363:1> setup_thread_stack 'void (struct task_struct *, struct task_struct *)' static inline
FunctionDecl 0x1e0b9b0 <line:2365:1, line:2368:1> end_of_stack 'unsigned long *(struct task_struct *)' static inline
FunctionDecl 0x1e0bc70 <line:2372:1, line:2377:1> object_is_on_stack 'int (void *)' static inline
FunctionDecl 0x1e0bf70 <line:2379:1, col:40> thread_info_cache_init 'void (void)' extern
FunctionDecl 0x1e0c140 <line:2397:1, line:2400:1> set_tsk_thread_flag 'void (struct task_struct *, int)' static inline
DeclRefExpr 0x1e0c2b0 <col:2> 'int ()' Function 0x1e0c210 'set_ti_thread_flag' 'int ()'
FunctionDecl 0x1e0c210 <<invalid sloc>> set_ti_thread_flag 'int ()'
FunctionDecl 0x1e0c600 <line:2402:1, line:2405:1> clear_tsk_thread_flag 'void (struct task_struct *, int)' static inline
DeclRefExpr 0x1e0c770 <col:2> 'int ()' Function 0x1e0c6d0 'clear_ti_thread_flag' 'int ()'
FunctionDecl 0x1e0c6d0 <<invalid sloc>> clear_ti_thread_flag 'int ()'
FunctionDecl 0x1e0cac0 <line:2407:1, line:2410:1> test_and_set_tsk_thread_flag 'int (struct task_struct *, int)' static inline
DeclRefExpr 0x1e0cc30 <col:9> 'int ()' Function 0x1e0cb90 'test_and_set_ti_thread_flag' 'int ()'
FunctionDecl 0x1e0cb90 <<invalid sloc>> test_and_set_ti_thread_flag 'int ()'
FunctionDecl 0x1e0cfa0 <line:2412:1, line:2415:1> test_and_clear_tsk_thread_flag 'int (struct task_struct *, int)' static inline
DeclRefExpr 0x1e0d110 <col:9> 'int ()' Function 0x1e0d070 'test_and_clear_ti_thread_flag' 'int ()'
FunctionDecl 0x1e0d070 <<invalid sloc>> test_and_clear_ti_thread_flag 'int ()'
FunctionDecl 0x1e0d480 <line:2417:1, line:2420:1> test_tsk_thread_flag 'int (struct task_struct *, int)' static inline
DeclRefExpr 0x1e0d5f0 <col:9> 'int ()' Function 0x1e0d550 'test_ti_thread_flag' 'int ()'
FunctionDecl 0x1e0d550 <<invalid sloc>> test_ti_thread_flag 'int ()'
FunctionDecl 0x1e0d8e0 <line:2422:1, line:2425:1> set_tsk_need_resched 'void (struct task_struct *)' static inline
FunctionDecl 0x1e0daa0 <line:2427:1, line:2430:1> clear_tsk_need_resched 'void (struct task_struct *)' static inline
FunctionDecl 0x1e0dc60 <line:2432:1, line:2435:1> test_tsk_need_resched 'int (struct task_struct *)' static inline
FunctionDecl 0x1e0de30 <line:2437:1, line:2441:1> restart_syscall 'int (void)' static inline
FunctionDecl 0x1e0e020 <../include/linux/sched.h:2443:1, line:2446:1> signal_pending 'int (struct task_struct *)' static inline
FunctionDecl 0x1e0e200 <line:2448:1, line:2451:1> __fatal_signal_pending 'int (struct task_struct *)' static inline
DeclRefExpr 0x1e0e2a8 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e0e2d0 <col:18> 'int (sigset_t *, int)' Function 0x1d38130 'sigismember' 'int (sigset_t *, int)'
FunctionDecl 0x1e0e5c0 <../include/linux/sched.h:2453:1, line:2456:1> fatal_signal_pending 'int (struct task_struct *)' static inline
DeclRefExpr 0x1e0e668 <col:9> 'int (struct task_struct *)' Function 0x1e0e020 'signal_pending' 'int (struct task_struct *)'
DeclRefExpr 0x1e0e778 <col:30> 'int (struct task_struct *)' Function 0x1e0e200 '__fatal_signal_pending' 'int (struct task_struct *)'
FunctionDecl 0x1e0ea30 <line:2458:1, line:2466:1> signal_pending_state 'int (long, struct task_struct *)' static inline
DeclRefExpr 0x1e0ec98 <col:7> 'int (struct task_struct *)' Function 0x1e0e020 'signal_pending' 'int (struct task_struct *)'
DeclRefExpr 0x1e0ee98 <col:41> 'int (struct task_struct *)' Function 0x1e0e200 '__fatal_signal_pending' 'int (struct task_struct *)'
FunctionDecl 0x1e0f050 <line:2475:1, col:30> _cond_resched 'int (void)' extern
FunctionDecl 0x1e0f180 <line:2482:1, col:48> __cond_resched_lock 'int (spinlock_t *)' extern
FunctionDecl 0x1e0f2c0 <line:2495:1, col:39> __cond_resched_softirq 'int (void)' extern
FunctionDecl 0x1e0f3f0 <line:2502:1, line:2509:1> cond_resched_rcu 'void (void)' static inline
DeclRefExpr 0x1e0f490 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x1e0f4f8 <col:2> 'void (const char *, int, int)' Function 0x19197c0 '__might_sleep' 'void (const char *, int, int)'
DeclRefExpr 0x1e0f690 <col:2> 'int (void)' Function 0x1e0f050 '_cond_resched' 'int (void)'
DeclRefExpr 0x1e0f740 <col:2> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
FunctionDecl 0x1e0f870 <line:2516:1, line:2523:1> spin_needbreak 'int (spinlock_t *)' static inline
FunctionDecl 0x1e0fa20 <line:2616:1, col:69> tsk_is_polling 'int (struct task_struct *)' static inline
FunctionDecl 0x1e0fbc0 <line:2617:1, col:50> __current_set_polling 'void (void)' static inline
FunctionDecl 0x1e0fd10 <line:2618:1, col:50> __current_clr_polling 'void (void)' static inline
FunctionDecl 0x1e10050 <line:2639:1, col:79> thread_group_cputimer 'void (struct task_struct *, struct task_cputime *)'
FunctionDecl 0x1e101b0 <line:2641:1, line:2644:1> thread_group_cputime_init 'void (struct signal_struct *)' static inline
FunctionDecl 0x1e10550 <../include/linux/sched.h:2652:1, col:61> recalc_sigpending_and_wake 'void (struct task_struct *)' extern
FunctionDecl 0x1e10690 <line:2653:1, col:35> recalc_sigpending 'void (void)' extern
FunctionDecl 0x1e10860 <line:2655:1, col:75> signal_wake_up_state 'void (struct task_struct *, unsigned int)' extern
FunctionDecl 0x1e10ac0 <line:2657:1, line:2660:1> signal_wake_up 'void (struct task_struct *, bool)' static inline
DeclRefExpr 0x1e10b70 <col:2> 'void (struct task_struct *, unsigned int)' Function 0x1e10860 'signal_wake_up_state' 'void (struct task_struct *, unsigned int)'
FunctionDecl 0x1e10eb0 <line:2661:1, line:2664:1> ptrace_signal_wake_up 'void (struct task_struct *, bool)' static inline
DeclRefExpr 0x1e10f60 <col:2> 'void (struct task_struct *, unsigned int)' Function 0x1e10860 'signal_wake_up_state' 'void (struct task_struct *, unsigned int)'
FunctionDecl 0x1e11240 <line:2685:1, line:2688:1> task_cpu 'unsigned int (const struct task_struct *)' static inline
FunctionDecl 0x1e11490 <line:2690:1, line:2692:1> set_task_cpu 'void (struct task_struct *, unsigned int)' static inline
FunctionDecl 0x1e11700 <line:2696:1, col:72> sched_setaffinity 'long (pid_t, const struct cpumask *)' extern
FunctionDecl 0x1e11950 <line:2697:1, col:62> sched_getaffinity 'long (pid_t, struct cpumask *)' extern
FunctionDecl 0x1e11bc0 <line:2703:1, line:2704:29> task_can_switch_user 'int (struct user_struct *, struct task_struct *)' extern
FunctionDecl 0x1e11de0 <line:2727:1, line:2729:1> add_rchar 'void (struct task_struct *, ssize_t)' static inline
FunctionDecl 0x1e11fd0 <line:2731:1, line:2733:1> add_wchar 'void (struct task_struct *, ssize_t)' static inline
FunctionDecl 0x1e12140 <line:2735:1, line:2737:1> inc_syscr 'void (struct task_struct *)' static inline
FunctionDecl 0x1e122b0 <line:2739:1, line:2741:1> inc_syscw 'void (struct task_struct *)' static inline
FunctionDecl 0x1e12420 <line:2752:1, line:2754:1> mm_update_next_owner 'void (struct mm_struct *)' static inline
FunctionDecl 0x1e126a0 <line:2756:1, line:2758:1> mm_init_owner 'void (struct mm_struct *, struct task_struct *)' static inline
FunctionDecl 0x1e12910 <line:2761:1, line:2765:1> task_rlimit 'unsigned long (const struct task_struct *, unsigned int)' static inline
FunctionDecl 0x1e12ce0 <line:2767:1, line:2771:1> task_rlimit_max 'unsigned long (const struct task_struct *, unsigned int)' static inline
FunctionDecl 0x1e1c470 <line:2773:1, line:2776:1> rlimit 'unsigned long (unsigned int)' static inline
FunctionDecl 0x1e1c5f0 <line:2778:1, line:2781:1> rlimit_max 'unsigned long (unsigned int)' static inline
FunctionDecl 0x1e1cb50 <../include/linux/ptrace.h:43:1, line:44:42> arch_ptrace 'long (struct task_struct *, long, unsigned long, unsigned long)' extern
FunctionDecl 0x1e1ced0 <line:45:1, col:97> ptrace_readdata 'int (struct task_struct *, unsigned long, char *, int)' extern
FunctionDecl 0x1e1d250 <line:46:1, col:98> ptrace_writedata 'int (struct task_struct *, char *, unsigned long, int)' extern
FunctionDecl 0x1e1d3c0 <line:47:1, col:48> ptrace_disable 'void (struct task_struct *)' extern
FunctionDecl 0x1e1d720 <line:48:1, line:49:44> ptrace_request 'int (struct task_struct *, long, unsigned long, unsigned long)' extern
FunctionDecl 0x1e1d870 <line:50:1, col:40> ptrace_notify 'void (int)' extern
FunctionDecl 0x1e1da50 <line:51:1, line:52:36> __ptrace_link 'void (struct task_struct *, struct task_struct *)' extern
FunctionDecl 0x1e1dbb0 <line:53:1, col:54> __ptrace_unlink 'void (struct task_struct *)' extern
FunctionDecl 0x1e1dd00 <line:54:1, col:51> exit_ptrace 'void (struct task_struct *)' extern
FunctionDecl 0x1e1ded0 <line:59:1, col:74> ptrace_may_access 'bool (struct task_struct *, unsigned int)' extern
FunctionDecl 0x1e1e030 <line:61:1, line:64:1> ptrace_reparented 'int (struct task_struct *)' static inline
DeclRefExpr 0x1e1e0d8 <col:10> 'bool (struct task_struct *, struct task_struct *)' Function 0x1e03f00 'same_thread_group' 'bool (struct task_struct *, struct task_struct *)'
FunctionDecl 0x1e1e3c0 <line:66:1, line:70:1> ptrace_unlink 'void (struct task_struct *)' static inline
DeclRefExpr 0x1e1e468 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e1e560 <col:3> 'void (struct task_struct *)' Function 0x1e1dbb0 '__ptrace_unlink' 'void (struct task_struct *)'
FunctionDecl 0x1e1e8a0 <line:72:1, line:73:26> generic_ptrace_peekdata 'int (struct task_struct *, unsigned long, unsigned long)'
FunctionDecl 0x1e1eaf0 <line:74:1, line:75:26> generic_ptrace_pokedata 'int (struct task_struct *, unsigned long, unsigned long)'
FunctionDecl 0x1e1ed20 <line:88:1, line:93:1> ptrace_parent 'struct task_struct *(struct task_struct *)' static inline
DeclRefExpr 0x1e1edc8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1e1f330 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
FunctionDecl 0x1e1f7d0 <line:104:1, line:107:1> ptrace_event_enabled 'bool (struct task_struct *, int)' static inline
FunctionDecl 0x1e1fc50 <line:119:1, line:129:1> ptrace_event 'void (int, unsigned long)' static inline
FunctionDecl 0x1e20230 <line:141:1, line:160:1> ptrace_init_task 'void (struct task_struct *, bool)' static inline
DeclRefExpr 0x1e202e0 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
DeclRefExpr 0x1e203e0 <col:2> 'void (struct list_head *)' Function 0x1948880 'INIT_LIST_HEAD' 'void (struct list_head *)'
FunctionDecl 0x1e20f30 <line:168:1, line:173:1> ptrace_release_task 'void (struct task_struct *)' static inline
DeclRefExpr 0x1e20fd8 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1e21000 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
DeclRefExpr 0x1e21180 <col:2> 'void (struct task_struct *)' Function 0x1e1e3c0 'ptrace_unlink' 'void (struct task_struct *)'
DeclRefExpr 0x1e21230 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1e21258 <col:10> 'int (const struct list_head *)' Function 0x1960400 'list_empty' 'int (const struct list_head *)'
FunctionDecl 0x1e21510 <line:228:1, line:231:1> user_enable_single_step 'void (struct task_struct *)' static inline
DeclRefExpr 0x1e215b8 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1e21710 <line:242:1, line:244:1> user_disable_single_step 'void (struct task_struct *)' static inline
FunctionDecl 0x1e218e0 <line:271:1, line:274:1> user_enable_block_step 'void (struct task_struct *)' static inline
DeclRefExpr 0x1e21988 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1e21c60 <line:283:1, line:288:1> user_single_step_siginfo 'void (struct task_struct *, struct pt_regs *, siginfo_t *)' static inline
DeclRefExpr 0x1e21d18 <col:2> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
FunctionDecl 0x1e22460 <../include/linux/ptrace.h:347:1, line:349:41> task_current_syscall 'int (struct task_struct *, long *, unsigned long *, unsigned int, unsigned long *, unsigned long *)' extern
FunctionDecl 0x1e454a0 <line:76:1, col:42> is_audit_feature_set 'int (int)' extern
FunctionDecl 0x1e457a0 <line:79:1, col:60> audit_classify_syscall 'int (int, unsigned int)' extern
FunctionDecl 0x1e458e0 <line:80:1, col:40> audit_classify_arch 'int (int)' extern
FunctionDecl 0x1e45bc0 <line:94:1, col:59> audit_log_session_info 'void (struct audit_buffer *)' extern
FunctionDecl 0x1e45d10 <line:304:1, line:307:1> audit_alloc 'int (struct task_struct *)' static inline
FunctionDecl 0x1e45ec0 <line:308:1, line:309:3> audit_free 'void (struct task_struct *)' static inline
FunctionDecl 0x1e462d0 <line:310:1, line:313:3> audit_syscall_entry 'void (int, int, unsigned long, unsigned long, unsigned long, unsigned long)' static inline
FunctionDecl 0x1e46450 <line:314:1, line:315:3> audit_syscall_exit 'void (void *)' static inline
FunctionDecl 0x1e465a0 <line:316:1, line:319:1> audit_dummy_context 'int (void)' static inline
FunctionDecl 0x1e46750 <line:320:1, line:323:1> audit_reusename 'struct filename *(const char *)' static inline
FunctionDecl 0x1e46970 <../include/linux/audit.h:324:1, line:325:3> audit_getname 'void (struct filename *)' static inline
FunctionDecl 0x1e46ae0 <line:326:1, line:327:3> audit_putname 'void (struct filename *)' static inline
FunctionDecl 0x1e46df0 <line:328:1, line:331:3> __audit_inode 'void (struct filename *, const struct dentry *, unsigned int)' static inline
FunctionDecl 0x1e47110 <line:332:1, line:335:3> __audit_inode_child 'void (const struct inode *, const struct dentry *, const unsigned char)' static inline
FunctionDecl 0x1e47390 <line:336:1, line:339:3> audit_inode 'void (struct filename *, const struct dentry *, unsigned int)' static inline
FunctionDecl 0x1e47620 <line:340:1, line:342:3> audit_inode_parent_hidden 'void (struct filename *, const struct dentry *)' static inline
FunctionDecl 0x1e47890 <line:343:1, line:346:3> audit_inode_child 'void (const struct inode *, const struct dentry *, const unsigned char)' static inline
FunctionDecl 0x1e47a30 <line:347:1, line:348:3> audit_core_dumps 'void (long)' static inline
FunctionDecl 0x1e47cc0 <line:349:1, line:350:3> __audit_seccomp 'void (unsigned long, long, int)' static inline
FunctionDecl 0x1e47f10 <line:351:1, line:352:3> audit_seccomp 'void (unsigned long, long, int)' static inline
FunctionDecl 0x1e48230 <line:353:1, line:357:1> auditsc_get_stamp 'int (struct audit_context *, struct timespec *, unsigned int *)' static inline
FunctionDecl 0x1e48470 <line:358:1, line:361:1> audit_get_loginuid 'kuid_t (struct task_struct *)' static inline
FunctionDecl 0x1e486a0 <../include/linux/audit.h:362:1, line:365:1> audit_get_sessionid 'int (struct task_struct *)' static inline
FunctionDecl 0x1e48950 <line:366:1, line:367:3> audit_ipc_obj 'void (struct kern_ipc_perm *)' static inline
FunctionDecl 0x1e48cb0 <line:368:1, line:370:3> audit_ipc_set_perm 'void (unsigned long, uid_t, gid_t, umode_t)' static inline
FunctionDecl 0x1e48f40 <line:371:1, line:372:3> audit_bprm 'void (struct linux_binprm *)' static inline
FunctionDecl 0x1e49110 <line:373:1, line:376:1> audit_socketcall 'int (int, unsigned long *)' static inline
FunctionDecl 0x1e49330 <line:377:1, line:378:3> audit_fd_pair 'void (int, int)' static inline
FunctionDecl 0x1e49550 <line:379:1, line:382:1> audit_sockaddr 'int (int, void *)' static inline
FunctionDecl 0x1e49920 <line:383:1, line:384:3> audit_mq_open 'void (int, umode_t, struct mq_attr *)' static inline
FunctionDecl 0x1e49cc0 <line:385:1, line:388:3> audit_mq_sendrecv 'void (mqd_t, size_t, unsigned int, const struct timespec *)' static inline
FunctionDecl 0x1e49fa0 <line:389:1, line:391:3> audit_mq_notify 'void (mqd_t, const struct sigevent *)' static inline
FunctionDecl 0x1e4a210 <line:392:1, line:393:3> audit_mq_getsetattr 'void (mqd_t, struct mq_attr *)' static inline
FunctionDecl 0x1e4a530 <line:394:1, line:399:1> audit_log_bprm_fcaps 'int (struct linux_binprm *, const struct cred *, const struct cred *)' static inline
FunctionDecl 0x1e4a890 <line:400:1, line:402:3> audit_log_capset 'void (pid_t, const struct cred *, const struct cred *)' static inline
FunctionDecl 0x1e4aa70 <line:403:1, line:404:3> audit_mmap_fd 'void (int, int)' static inline
FunctionDecl 0x1e4abe0 <line:405:1, line:406:3> audit_ptrace 'void (struct task_struct *)' static inline
FunctionDecl 0x1e4ad50 <line:411:1, line:414:1> audit_loginuid_set 'bool (struct task_struct *)' static inline
DeclRefExpr 0x1e4adf8 <col:9> 'bool (kuid_t)' Function 0x1b6a9e0 'uid_valid' 'bool (kuid_t)'
DeclRefExpr 0x1e4ae20 <col:19> 'kuid_t (struct task_struct *)' Function 0x1e48470 'audit_get_loginuid' 'kuid_t (struct task_struct *)'
FunctionDecl 0x1e4b030 prev 0x1ca33e0 <line:468:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1e4b390 <line:469:1, line:471:3> audit_log 'void (struct audit_context *, gfp_t, int, const char *, ...)'
FunctionDecl 0x1e4b6c0 <line:472:1, line:476:1> audit_log_start 'struct audit_buffer *(struct audit_context *, gfp_t, int)' static inline
FunctionDecl 0x1e4b870 prev 0x1e4b030 <../include/linux/audit.h:477:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1e4bac0 <line:478:1, line:479:3> audit_log_format 'void (struct audit_buffer *, const char *, ...)'
FunctionDecl 0x1e4bc30 <line:480:1, line:481:3> audit_log_end 'void (struct audit_buffer *)' static inline
FunctionDecl 0x1e4bf30 <line:482:1, line:484:3> audit_log_n_hex 'void (struct audit_buffer *, const unsigned char *, size_t)' static inline
FunctionDecl 0x1e4c240 <line:485:1, line:487:3> audit_log_n_string 'void (struct audit_buffer *, const char *, size_t)' static inline
FunctionDecl 0x1e4c4b0 <line:488:1, line:490:3> audit_log_n_untrustedstring 'void (struct audit_buffer *, const char *, size_t)' static inline
FunctionDecl 0x1e4c730 <line:491:1, line:493:3> audit_log_untrustedstring 'void (struct audit_buffer *, const char *)' static inline
FunctionDecl 0x1e4eab0 <line:494:1, line:497:3> audit_log_d_path 'void (struct audit_buffer *, const char *, const struct path *)' static inline
FunctionDecl 0x1e4ed30 <line:498:1, line:499:3> audit_log_key 'void (struct audit_buffer *, char *)' static inline
FunctionDecl 0x1e4efa0 <line:500:1, line:502:3> audit_log_link_denied 'void (const char *, const struct path *)' static inline
FunctionDecl 0x1e4f210 <line:503:1, line:504:3> audit_log_secctx 'void (struct audit_buffer *, u32)' static inline
FunctionDecl 0x1e4f400 <line:505:1, line:508:1> audit_log_task_context 'int (struct audit_buffer *)' static inline
FunctionDecl 0x1e4f6c0 <line:509:1, line:511:3> audit_log_task_info 'void (struct audit_buffer *, struct task_struct *)' static inline
FunctionDecl 0x1e4f8b0 <line:514:1, line:517:1> audit_log_string 'void (struct audit_buffer *, const char *)' static inline
DeclRefExpr 0x1e4f960 <col:2> 'void (struct audit_buffer *, const char *, size_t)' Function 0x1e4c240 'audit_log_n_string' 'void (struct audit_buffer *, const char *, size_t)'
DeclRefExpr 0x1e4f9d8 <col:30> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
FunctionDecl 0x1e4fcd0 <../include/linux/fsnotify.h:22:1, line:26:1> fsnotify_d_instantiate 'void (struct dentry *, struct inode *)' static inline
DeclRefExpr 0x1e4fe40 <col:2> 'int ()' Function 0x1e4fda0 '__fsnotify_d_instantiate' 'int ()'
FunctionDecl 0x1e4fda0 <<invalid sloc>> __fsnotify_d_instantiate 'int ()'
FunctionDecl 0x1e501a0 <line:29:1, line:35:1> fsnotify_parent 'int (struct path *, struct dentry *, __u32)' static inline
DeclRefExpr 0x1e50480 <col:9> 'int ()' Function 0x1e503e0 '__fsnotify_parent' 'int ()'
FunctionDecl 0x1e503e0 <<invalid sloc>> __fsnotify_parent 'int ()'
FunctionDecl 0x1e50730 <line:38:1, line:61:1> fsnotify_perm 'int (struct file *, int)' static inline
DeclRefExpr 0x1e50998 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e51038 <col:3> 'int ()' Function 0x1b38750 'BUG' 'int ()'
DeclRefExpr 0x1e51148 <col:8> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e51450 <<invalid sloc>> fsnotify 'int ()'
FunctionDecl 0x1e516a0 <line:66:1, line:73:1> fsnotify_d_move 'void (struct dentry *)' static inline
DeclRefExpr 0x1e51810 <col:2> 'int ()' Function 0x1e51770 '__fsnotify_update_dcache_flags' 'int ()'
FunctionDecl 0x1e51770 <<invalid sloc>> __fsnotify_update_dcache_flags 'int ()'
FunctionDecl 0x1e51990 <line:78:1, line:81:1> fsnotify_link_count 'void (struct inode *)' static inline
FunctionDecl 0x1e51ea0 <line:86:1, line:113:1> fsnotify_move 'void (struct inode *, struct inode *, const unsigned char *, int, struct inode *, struct dentry *)' static inline
DeclRefExpr 0x1e521d0 <col:18> 'int ()' Function 0x1e52130 'fsnotify_get_cookie' 'int ()'
DeclRefExpr 0x1e527e0 <col:3> 'void (struct inode *)' Function 0x1e51990 'fsnotify_link_count' 'void (struct inode *)'
DeclRefExpr 0x1e52950 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
FunctionDecl 0x1e52130 <<invalid sloc>> fsnotify_get_cookie 'int ()'
FunctionDecl 0x1e52c20 <../include/linux/fsnotify.h:118:1, line:121:1> fsnotify_inode_delete 'void (struct inode *)' static inline
DeclRefExpr 0x1e52d90 <col:2> 'int ()' Function 0x1e52cf0 '__fsnotify_inode_delete' 'int ()'
FunctionDecl 0x1e52cf0 <<invalid sloc>> __fsnotify_inode_delete 'int ()'
FunctionDecl 0x1e52f10 <line:126:1, line:129:1> fsnotify_vfsmount_delete 'void (struct vfsmount *)' static inline
DeclRefExpr 0x1e53080 <col:2> 'int ()' Function 0x1e52fe0 '__fsnotify_vfsmount_delete' 'int ()'
FunctionDecl 0x1e52fe0 <<invalid sloc>> __fsnotify_vfsmount_delete 'int ()'
FunctionDecl 0x1e53300 <line:134:1, line:142:1> fsnotify_nameremove 'void (struct dentry *, int)' static inline
DeclRefExpr 0x1e53498 <col:2> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e53700 <line:147:1, line:151:1> fsnotify_inoderemove 'void (struct inode *)' static inline
DeclRefExpr 0x1e537f8 <col:2> 'int ()' Function 0x1e52cf0 '__fsnotify_inode_delete' 'int ()'
FunctionDecl 0x1e53a80 <line:156:1, line:161:1> fsnotify_create 'void (struct inode *, struct dentry *)' static inline
DeclRefExpr 0x1e53b30 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
FunctionDecl 0x1e53f60 <../include/linux/fsnotify.h:168:1, line:174:1> fsnotify_link 'void (struct inode *, struct inode *, struct dentry *)' static inline
DeclRefExpr 0x1e54018 <col:2> 'void (struct inode *)' Function 0x1e51990 'fsnotify_link_count' 'void (struct inode *)'
DeclRefExpr 0x1e540c8 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
FunctionDecl 0x1e543e0 <../include/linux/fsnotify.h:179:1, line:187:1> fsnotify_mkdir 'void (struct inode *, struct dentry *)' static inline
DeclRefExpr 0x1e54638 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
FunctionDecl 0x1e54920 <../include/linux/fsnotify.h:192:1, line:205:1> fsnotify_access 'void (struct file *)' static inline
DeclRefExpr 0x1e54b78 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e54f60 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e552c0 <line:210:1, line:223:1> fsnotify_modify 'void (struct file *)' static inline
DeclRefExpr 0x1e55518 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e55900 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e55c60 <line:228:1, line:239:1> fsnotify_open 'void (struct file *)' static inline
DeclRefExpr 0x1e55eb8 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e56138 <col:2> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e56450 <line:244:1, line:258:1> fsnotify_close 'void (struct file *)' static inline
DeclRefExpr 0x1e566a8 <col:24> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1e57cd8 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e58040 <line:263:1, line:273:1> fsnotify_xattr 'void (struct dentry *)' static inline
DeclRefExpr 0x1e583c8 <col:2> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e58750 <line:279:1, line:309:1> fsnotify_change 'void (struct dentry *, unsigned int)' static inline
DeclRefExpr 0x1e59638 <col:3> 'int (struct path *, struct dentry *, __u32)' Function 0x1e501a0 'fsnotify_parent' 'int (struct path *, struct dentry *, __u32)'
FunctionDecl 0x1e599c0 <line:331:1, line:334:1> fsnotify_oldname_init 'const char *(const unsigned char *)' static inline
FunctionDecl 0x1e59c10 <../include/linux/fsnotify.h:336:1, line:338:1> fsnotify_oldname_free 'void (const unsigned char *)' static inline
FunctionDecl 0x1e5b710 <line:14:1, col:54> register_exec_domain 'int (struct exec_domain *)' extern
FunctionDecl 0x1e5b860 <line:15:1, col:56> unregister_exec_domain 'int (struct exec_domain *)' extern
FunctionDecl 0x1e5b9a0 <line:16:1, col:43> __set_personality 'int (unsigned int)' extern
FunctionDecl 0x1e5d580 <line:76:1, line:77:28> cap_capable 'int (const struct cred *, struct user_namespace *, int, int)' extern
FunctionDecl 0x1e5d780 <line:78:1, col:76> cap_settime 'int (const struct timespec *, const struct timezone *)' extern
FunctionDecl 0x1e5d960 <line:79:1, col:80> cap_ptrace_access_check 'int (struct task_struct *, unsigned int)' extern
FunctionDecl 0x1e5dac0 <line:80:1, col:57> cap_ptrace_traceme 'int (struct task_struct *)' extern
FunctionDecl 0x1e5de80 <line:81:1, col:126> cap_capget 'int (struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *)' extern
FunctionDecl 0x1e5e300 <line:82:1, line:85:38> cap_capset 'int (struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *)' extern
FunctionDecl 0x1e5e4f0 <line:86:1, col:56> cap_bprm_set_creds 'int (struct linux_binprm *)' extern
FunctionDecl 0x1e5e640 <line:87:1, col:57> cap_bprm_secureexec 'int (struct linux_binprm *)' extern
FunctionDecl 0x1e5e970 <line:88:1, line:89:51> cap_inode_setxattr 'int (struct dentry *, const char *, const void *, size_t, int)' extern
FunctionDecl 0x1e5eb60 <line:90:1, col:73> cap_inode_removexattr 'int (struct dentry *, const char *)' extern
FunctionDecl 0x1e5ecc0 <line:91:1, col:57> cap_inode_need_killpriv 'int (struct dentry *)' extern
FunctionDecl 0x1e5ee10 <line:92:1, col:52> cap_inode_killpriv 'int (struct dentry *)' extern
FunctionDecl 0x1e5ef50 <line:93:1, col:44> cap_mmap_addr 'int (unsigned long)' extern
FunctionDecl 0x1e5f2b0 <line:94:1, line:95:44> cap_mmap_file 'int (struct file *, unsigned long, unsigned long, unsigned long)' extern
FunctionDecl 0x1e5f5c0 <line:96:1, col:83> cap_task_fix_setuid 'int (struct cred *, const struct cred *, int)' extern
FunctionDecl 0x1e65ff0 <line:97:1, line:98:44> cap_task_prctl 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)' extern
FunctionDecl 0x1e66160 <line:99:1, col:55> cap_task_setscheduler 'int (struct task_struct *)' extern
FunctionDecl 0x1e66330 <line:100:1, col:64> cap_task_setioprio 'int (struct task_struct *, int)' extern
FunctionDecl 0x1e66510 <line:101:1, col:60> cap_task_setnice 'int (struct task_struct *, int)' extern
FunctionDecl 0x1e66770 <line:102:1, col:65> cap_vm_enough_memory 'int (struct mm_struct *, long)' extern
FunctionDecl 0x1e67250 <line:117:1, col:65> cap_netlink_send 'int (struct sock *, struct sk_buff *)' extern
FunctionDecl 0x1e67390 <line:119:1, col:29> reset_security_ops 'void (void)'
FunctionDecl 0x1e67b70 <line:1899:1, line:1901:1> security_init_mnt_opts 'void (struct security_mnt_opts *)' static inline
FunctionDecl 0x1e67ce0 <line:1903:1, line:1905:1> security_free_mnt_opts 'void (struct security_mnt_opts *)' static inline
FunctionDecl 0x1e67e30 <line:1912:1, line:1915:1> security_init 'int (void)' static inline
FunctionDecl 0x1e68060 <line:1917:1, line:1921:1> security_ptrace_access_check 'int (struct task_struct *, unsigned int)' static inline
DeclRefExpr 0x1e68110 <col:9> 'int (struct task_struct *, unsigned int)' Function 0x1e5d960 'cap_ptrace_access_check' 'int (struct task_struct *, unsigned int)'
FunctionDecl 0x1e68350 <line:1923:1, line:1926:1> security_ptrace_traceme 'int (struct task_struct *)' static inline
DeclRefExpr 0x1e683f8 <col:9> 'int (struct task_struct *)' Function 0x1e5dac0 'cap_ptrace_traceme' 'int (struct task_struct *)'
FunctionDecl 0x1e68700 <line:1928:1, line:1934:1> security_capget 'int (struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *)' static inline
DeclRefExpr 0x1e687c0 <col:9> 'int (struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *)' Function 0x1e5de80 'cap_capget' 'int (struct task_struct *, kernel_cap_t *, kernel_cap_t *, kernel_cap_t *)'
FunctionDecl 0x1e68c80 <line:1936:1, line:1943:1> security_capset 'int (struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *)' static inline
DeclRefExpr 0x1e68d48 <col:9> 'int (struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *)' Function 0x1e5e300 'cap_capset' 'int (struct cred *, const struct cred *, const kernel_cap_t *, const kernel_cap_t *, const kernel_cap_t *)'
FunctionDecl 0x1e69200 <line:1945:1, line:1949:1> security_capable 'int (const struct cred *, struct user_namespace *, int)' static inline
DeclRefExpr 0x1e692b8 <col:9> 'int (const struct cred *, struct user_namespace *, int, int)' Function 0x1e5d580 'cap_capable' 'int (const struct cred *, struct user_namespace *, int, int)'
FunctionDecl 0x1e69670 <line:1951:1, line:1954:1> security_capable_noaudit 'int (const struct cred *, struct user_namespace *, int)' static inline
DeclRefExpr 0x1e69728 <col:9> 'int (const struct cred *, struct user_namespace *, int, int)' Function 0x1e5d580 'cap_capable' 'int (const struct cred *, struct user_namespace *, int, int)'
FunctionDecl 0x1e69b80 <line:1956:1, line:1960:1> security_quotactl 'int (int, int, int, struct super_block *)' static inline
FunctionDecl 0x1e69d50 <line:1962:1, line:1965:1> security_quota_on 'int (struct dentry *)' static inline
FunctionDecl 0x1e69ef0 <line:1967:1, line:1970:1> security_syslog 'int (int)' static inline
FunctionDecl 0x1e6a130 <line:1972:1, line:1976:1> security_settime 'int (const struct timespec *, const struct timezone *)' static inline
DeclRefExpr 0x1e6a1e0 <col:9> 'int (const struct timespec *, const struct timezone *)' Function 0x1e5d780 'cap_settime' 'int (const struct timespec *, const struct timezone *)'
FunctionDecl 0x1e6a4a0 <line:1978:1, line:1981:1> security_vm_enough_memory_mm 'int (struct mm_struct *, long)' static inline
DeclRefExpr 0x1e6a550 <col:9> 'int (struct mm_struct *, long)' Function 0x1e66770 'cap_vm_enough_memory' 'int (struct mm_struct *, long)'
FunctionDecl 0x1e6a790 <line:1983:1, line:1986:1> security_bprm_set_creds 'int (struct linux_binprm *)' static inline
DeclRefExpr 0x1e6a838 <col:9> 'int (struct linux_binprm *)' Function 0x1e5e4f0 'cap_bprm_set_creds' 'int (struct linux_binprm *)'
FunctionDecl 0x1e6aa30 <line:1988:1, line:1991:1> security_bprm_check 'int (struct linux_binprm *)' static inline
FunctionDecl 0x1e6abe0 <line:1993:1, line:1995:1> security_bprm_committing_creds 'void (struct linux_binprm *)' static inline
FunctionDecl 0x1e6ad50 <line:1997:1, line:1999:1> security_bprm_committed_creds 'void (struct linux_binprm *)' static inline
FunctionDecl 0x1e6aec0 <line:2001:1, line:2004:1> security_bprm_secureexec 'int (struct linux_binprm *)' static inline
DeclRefExpr 0x1e6af68 <col:9> 'int (struct linux_binprm *)' Function 0x1e5e640 'cap_bprm_secureexec' 'int (struct linux_binprm *)'
FunctionDecl 0x1e6b100 <line:2006:1, line:2009:1> security_sb_alloc 'int (struct super_block *)' static inline
FunctionDecl 0x1e6b2b0 <line:2011:1, line:2012:3> security_sb_free 'void (struct super_block *)' static inline
FunctionDecl 0x1e6b4c0 <line:2014:1, line:2017:1> security_sb_copy_data 'int (char *, char *)' static inline
FunctionDecl 0x1e6b700 <line:2019:1, line:2022:1> security_sb_remount 'int (struct super_block *, void *)' static inline
FunctionDecl 0x1e6ba50 <line:2024:1, line:2027:1> security_sb_kern_mount 'int (struct super_block *, int, void *)' static inline
FunctionDecl 0x1e6bd20 <line:2029:1, line:2033:1> security_sb_show_options 'int (struct seq_file *, struct super_block *)' static inline
FunctionDecl 0x1e6bee0 <line:2035:1, line:2038:1> security_sb_statfs 'int (struct dentry *)' static inline
FunctionDecl 0x1e6c330 <line:2040:1, line:2045:1> security_sb_mount 'int (const char *, struct path *, const char *, unsigned long, void *)' static inline
FunctionDecl 0x1e6c600 <line:2047:1, line:2050:1> security_sb_umount 'int (struct vfsmount *, int)' static inline
FunctionDecl 0x1e6c850 <line:2052:1, line:2056:1> security_sb_pivotroot 'int (struct path *, struct path *)' static inline
FunctionDecl 0x1e6cc30 <line:2058:1, line:2064:1> security_sb_set_mnt_opts 'int (struct super_block *, struct security_mnt_opts *, unsigned long, unsigned long *)' static inline
FunctionDecl 0x1e6cf60 <line:2066:1, line:2070:1> security_sb_clone_mnt_opts 'int (const struct super_block *, struct super_block *)' static inline
FunctionDecl 0x1e6d210 <line:2072:1, line:2075:1> security_sb_parse_opts_str 'int (char *, struct security_mnt_opts *)' static inline
FunctionDecl 0x1e6d3d0 <line:2077:1, line:2080:1> security_inode_alloc 'int (struct inode *)' static inline
FunctionDecl 0x1e6d580 <line:2082:1, line:2083:3> security_inode_free 'void (struct inode *)' static inline
FunctionDecl 0x1e6d9a0 <line:2085:1, line:2092:1> security_dentry_init_security 'int (struct dentry *, int, struct qstr *, void **, u32 *)' static inline
FunctionDecl 0x1e6de70 <../include/linux/security.h:2095:1, line:2102:1> security_inode_init_security 'int (struct inode *, struct inode *, const struct qstr *, const initxattrs, void *)' static inline
FunctionDecl 0x1e723e0 <line:2104:1, line:2111:1> security_old_inode_init_security 'int (struct inode *, struct inode *, const struct qstr *, const char **, void **, size_t *)' static inline
FunctionDecl 0x1e726e0 <../include/linux/security.h:2113:1, line:2118:1> security_inode_create 'int (struct inode *, struct dentry *, umode_t)' static inline
FunctionDecl 0x1e729b0 <line:2120:1, line:2125:1> security_inode_link 'int (struct dentry *, struct inode *, struct dentry *)' static inline
FunctionDecl 0x1e72c00 <line:2127:1, line:2131:1> security_inode_unlink 'int (struct inode *, struct dentry *)' static inline
FunctionDecl 0x1e72ec0 <line:2133:1, line:2138:1> security_inode_symlink 'int (struct inode *, struct dentry *, const char *)' static inline
FunctionDecl 0x1e73220 <line:2140:1, line:2145:1> security_inode_mkdir 'int (struct inode *, struct dentry *, int)' static inline
FunctionDecl 0x1e73470 <line:2147:1, line:2151:1> security_inode_rmdir 'int (struct inode *, struct dentry *)' static inline
FunctionDecl 0x1e73850 <line:2153:1, line:2158:1> security_inode_mknod 'int (struct inode *, struct dentry *, int, dev_t)' static inline
FunctionDecl 0x1e73bc0 <line:2160:1, line:2166:1> security_inode_rename 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' static inline
FunctionDecl 0x1e73d90 <line:2168:1, line:2171:1> security_inode_readlink 'int (struct dentry *)' static inline
FunctionDecl 0x1e74050 <line:2173:1, line:2177:1> security_inode_follow_link 'int (struct dentry *, struct nameidata *)' static inline
FunctionDecl 0x1e74290 <line:2179:1, line:2182:1> security_inode_permission 'int (struct inode *, int)' static inline
FunctionDecl 0x1e744e0 <line:2184:1, line:2188:1> security_inode_setattr 'int (struct dentry *, struct iattr *)' static inline
FunctionDecl 0x1e747b0 <line:2190:1, line:2194:1> security_inode_getattr 'int (struct vfsmount *, struct dentry *)' static inline
FunctionDecl 0x1e74b50 <line:2196:1, line:2200:1> security_inode_setxattr 'int (struct dentry *, const char *, const void *, size_t, int)' static inline
DeclRefExpr 0x1e74c18 <col:9> 'int (struct dentry *, const char *, const void *, size_t, int)' Function 0x1e5e970 'cap_inode_setxattr' 'int (struct dentry *, const char *, const void *, size_t, int)'
FunctionDecl 0x1e751a0 <line:2202:1, line:2204:3> security_inode_post_setxattr 'void (struct dentry *, const char *, const void *, size_t, int)' static inline
FunctionDecl 0x1e753b0 <line:2206:1, line:2210:1> security_inode_getxattr 'int (struct dentry *, const char *)' static inline
FunctionDecl 0x1e75570 <line:2212:1, line:2215:1> security_inode_listxattr 'int (struct dentry *)' static inline
FunctionDecl 0x1e757a0 <line:2217:1, line:2221:1> security_inode_removexattr 'int (struct dentry *, const char *)' static inline
DeclRefExpr 0x1e75850 <col:9> 'int (struct dentry *, const char *)' Function 0x1e5eb60 'cap_inode_removexattr' 'int (struct dentry *, const char *)'
FunctionDecl 0x1e75a60 <line:2223:1, line:2226:1> security_inode_need_killpriv 'int (struct dentry *)' static inline
DeclRefExpr 0x1e75b08 <col:9> 'int (struct dentry *)' Function 0x1e5ecc0 'cap_inode_need_killpriv' 'int (struct dentry *)'
FunctionDecl 0x1e75d00 <line:2228:1, line:2231:1> security_inode_killpriv 'int (struct dentry *)' static inline
DeclRefExpr 0x1e75da8 <col:9> 'int (struct dentry *)' Function 0x1e5ee10 'cap_inode_killpriv' 'int (struct dentry *)'
FunctionDecl 0x1e76150 <line:2233:1, line:2236:1> security_inode_getsecurity 'int (const struct inode *, const char *, void **, bool)' static inline
FunctionDecl 0x1e765e0 <../include/linux/security.h:2238:1, line:2241:1> security_inode_setsecurity 'int (struct inode *, const char *, const void *, size_t, int)' static inline
FunctionDecl 0x1e76960 <../include/linux/security.h:2243:1, line:2246:1> security_inode_listsecurity 'int (struct inode *, char *, size_t)' static inline
FunctionDecl 0x1e76c20 <line:2248:1, line:2251:1> security_inode_getsecid 'void (const struct inode *, u32 *)' static inline
FunctionDecl 0x1e76ee0 <line:2253:1, line:2256:1> security_file_permission 'int (struct file *, int)' static inline
FunctionDecl 0x1e770a0 <line:2258:1, line:2261:1> security_file_alloc 'int (struct file *)' static inline
FunctionDecl 0x1e77250 <line:2263:1, line:2264:3> security_file_free 'void (struct file *)' static inline
FunctionDecl 0x1e77550 <line:2266:1, line:2270:1> security_file_ioctl 'int (struct file *, unsigned int, unsigned long)' static inline
FunctionDecl 0x1e778a0 <line:2272:1, line:2276:1> security_mmap_file 'int (struct file *, unsigned long, unsigned long)' static inline
FunctionDecl 0x1e77a50 <line:2278:1, line:2281:1> security_mmap_addr 'int (unsigned long)' static inline
DeclRefExpr 0x1e77af8 <col:9> 'int (unsigned long)' Function 0x1e5ef50 'cap_mmap_addr' 'int (unsigned long)'
FunctionDecl 0x1e77e20 <line:2283:1, line:2288:1> security_file_mprotect 'int (struct vm_area_struct *, unsigned long, unsigned long)' static inline
FunctionDecl 0x1e780e0 <line:2290:1, line:2293:1> security_file_lock 'int (struct file *, unsigned int)' static inline
FunctionDecl 0x1e78390 <line:2295:1, line:2299:1> security_file_fcntl 'int (struct file *, unsigned int, unsigned long)' static inline
FunctionDecl 0x1e78550 <line:2301:1, line:2304:1> security_file_set_fowner 'int (struct file *)' static inline
FunctionDecl 0x1e788a0 <line:2306:1, line:2311:1> security_file_send_sigiotask 'int (struct task_struct *, struct fown_struct *, int)' static inline
FunctionDecl 0x1e78a60 <line:2313:1, line:2316:1> security_file_receive 'int (struct file *)' static inline
FunctionDecl 0x1e78d20 <line:2318:1, line:2322:1> security_file_open 'int (struct file *, const struct cred *)' static inline
FunctionDecl 0x1e78ec0 <line:2324:1, line:2327:1> security_task_create 'int (unsigned long)' static inline
FunctionDecl 0x1e79070 <line:2329:1, line:2330:3> security_task_free 'void (struct task_struct *)' static inline
FunctionDecl 0x1e792a0 <line:2332:1, line:2335:1> security_cred_alloc_blank 'int (struct cred *, gfp_t)' static inline
FunctionDecl 0x1e79460 <line:2337:1, line:2338:3> security_cred_free 'void (struct cred *)' static inline
FunctionDecl 0x1e79770 <line:2340:1, line:2345:1> security_prepare_creds 'int (struct cred *, const struct cred *, gfp_t)' static inline
FunctionDecl 0x1e79a40 <line:2347:1, line:2350:1> security_transfer_creds 'void (struct cred *, const struct cred *)' static inline
FunctionDecl 0x1e79c30 <line:2352:1, line:2355:1> security_kernel_act_as 'int (struct cred *, u32)' static inline
FunctionDecl 0x1e79e80 <line:2357:1, line:2361:1> security_kernel_create_files_as 'int (struct cred *, struct inode *)' static inline
FunctionDecl 0x1e7c060 <line:2363:1, line:2366:1> security_kernel_module_request 'int (char *)' static inline
FunctionDecl 0x1e7c210 <line:2368:1, line:2371:1> security_kernel_module_from_file 'int (struct file *)' static inline
FunctionDecl 0x1e7c4c0 <line:2373:1, line:2378:1> security_task_fix_setuid 'int (struct cred *, const struct cred *, int)' static inline
DeclRefExpr 0x1e7c578 <col:9> 'int (struct cred *, const struct cred *, int)' Function 0x1e5f5c0 'cap_task_fix_setuid' 'int (struct cred *, const struct cred *, int)'
FunctionDecl 0x1e7c8c0 <line:2380:1, line:2383:1> security_task_setpgid 'int (struct task_struct *, pid_t)' static inline
FunctionDecl 0x1e7ca80 <line:2385:1, line:2388:1> security_task_getpgid 'int (struct task_struct *)' static inline
FunctionDecl 0x1e7cc30 <line:2390:1, line:2393:1> security_task_getsid 'int (struct task_struct *)' static inline
FunctionDecl 0x1e7cee0 <line:2395:1, line:2398:1> security_task_getsecid 'void (struct task_struct *, u32 *)' static inline
FunctionDecl 0x1e7d1a0 <line:2400:1, line:2403:1> security_task_setnice 'int (struct task_struct *, int)' static inline
DeclRefExpr 0x1e7d250 <col:9> 'int (struct task_struct *, int)' Function 0x1e66510 'cap_task_setnice' 'int (struct task_struct *, int)'
FunctionDecl 0x1e7d510 <line:2405:1, line:2408:1> security_task_setioprio 'int (struct task_struct *, int)' static inline
DeclRefExpr 0x1e7d5c0 <col:9> 'int (struct task_struct *, int)' Function 0x1e66330 'cap_task_setioprio' 'int (struct task_struct *, int)'
FunctionDecl 0x1e7d7a0 <line:2410:1, line:2413:1> security_task_getioprio 'int (struct task_struct *)' static inline
FunctionDecl 0x1e7daf0 <line:2415:1, line:2420:1> security_task_setrlimit 'int (struct task_struct *, unsigned int, struct rlimit *)' static inline
FunctionDecl 0x1e7dcb0 <line:2422:1, line:2425:1> security_task_setscheduler 'int (struct task_struct *)' static inline
DeclRefExpr 0x1e7dd58 <col:9> 'int (struct task_struct *)' Function 0x1e66160 'cap_task_setscheduler' 'int (struct task_struct *)'
FunctionDecl 0x1e7def0 <line:2427:1, line:2430:1> security_task_getscheduler 'int (struct task_struct *)' static inline
FunctionDecl 0x1e7e0a0 <line:2432:1, line:2435:1> security_task_movememory 'int (struct task_struct *)' static inline
FunctionDecl 0x1e7e470 <line:2437:1, line:2442:1> security_task_kill 'int (struct task_struct *, struct siginfo *, int, u32)' static inline
FunctionDecl 0x1e7e640 <line:2444:1, line:2447:1> security_task_wait 'int (struct task_struct *)' static inline
FunctionDecl 0x1e7e9c0 <line:2449:1, line:2455:1> security_task_prctl 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)' static inline
DeclRefExpr 0x1e7ea88 <col:9> 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)' Function 0x1e65ff0 'cap_task_prctl' 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1e7ee80 <line:2457:1, line:2458:3> security_task_to_inode 'void (struct task_struct *, struct inode *)' static inline
FunctionDecl 0x1e7f0f0 <line:2460:1, line:2464:1> security_ipc_permission 'int (struct kern_ipc_perm *, short)' static inline
FunctionDecl 0x1e7f3b0 <line:2466:1, line:2469:1> security_ipc_getsecid 'void (struct kern_ipc_perm *, u32 *)' static inline
FunctionDecl 0x1e7f6f0 <line:2471:1, line:2474:1> security_msg_msg_alloc 'int (struct msg_msg *)' static inline
FunctionDecl 0x1e7f920 <line:2476:1, line:2477:3> security_msg_msg_free 'void (struct msg_msg *)' static inline
FunctionDecl 0x1e7fb90 <line:2479:1, line:2482:1> security_msg_queue_alloc 'int (struct msg_queue *)' static inline
FunctionDecl 0x1e7fdc0 <line:2484:1, line:2485:3> security_msg_queue_free 'void (struct msg_queue *)' static inline
FunctionDecl 0x1e80030 <line:2487:1, line:2491:1> security_msg_queue_associate 'int (struct msg_queue *, int)' static inline
FunctionDecl 0x1e80270 <line:2493:1, line:2496:1> security_msg_queue_msgctl 'int (struct msg_queue *, int)' static inline
FunctionDecl 0x1e805d0 <line:2498:1, line:2502:1> security_msg_queue_msgsnd 'int (struct msg_queue *, struct msg_msg *, int)' static inline
FunctionDecl 0x1e80a50 <line:2504:1, line:2510:1> security_msg_queue_msgrcv 'int (struct msg_queue *, struct msg_msg *, struct task_struct *, long, int)' static inline
FunctionDecl 0x1e80d30 <line:2512:1, line:2515:1> security_shm_alloc 'int (struct shmid_kernel *)' static inline
FunctionDecl 0x1e80f60 <line:2517:1, line:2518:3> security_shm_free 'void (struct shmid_kernel *)' static inline
FunctionDecl 0x1e811d0 <line:2520:1, line:2524:1> security_shm_associate 'int (struct shmid_kernel *, int)' static inline
FunctionDecl 0x1e81410 <line:2526:1, line:2529:1> security_shm_shmctl 'int (struct shmid_kernel *, int)' static inline
FunctionDecl 0x1e81760 <line:2531:1, line:2535:1> security_shm_shmat 'int (struct shmid_kernel *, char *, int)' static inline
FunctionDecl 0x1e81a30 <line:2537:1, line:2540:1> security_sem_alloc 'int (struct sem_array *)' static inline
FunctionDecl 0x1e81c60 <line:2542:1, line:2543:3> security_sem_free 'void (struct sem_array *)' static inline
FunctionDecl 0x1e81ed0 <line:2545:1, line:2548:1> security_sem_associate 'int (struct sem_array *, int)' static inline
FunctionDecl 0x1e82110 <line:2550:1, line:2553:1> security_sem_semctl 'int (struct sem_array *, int)' static inline
FunctionDecl 0x1e82580 <line:2555:1, line:2560:1> security_sem_semop 'int (struct sem_array *, struct sembuf *, unsigned int, int)' static inline
FunctionDecl 0x1e827e0 <line:2562:1, line:2563:3> security_d_instantiate 'void (struct dentry *, struct inode *)' static inline
FunctionDecl 0x1e82ae0 <line:2565:1, line:2568:1> security_getprocattr 'int (struct task_struct *, char *, char **)' static inline
FunctionDecl 0x1e82ed0 <../include/linux/security.h:2570:1, line:2573:1> security_setprocattr 'int (struct task_struct *, char *, void *, size_t)' static inline
FunctionDecl 0x1e83150 <../include/linux/security.h:2575:1, line:2578:1> security_netlink_send 'int (struct sock *, struct sk_buff *)' static inline
DeclRefExpr 0x1e83200 <col:9> 'int (struct sock *, struct sk_buff *)' Function 0x1e67250 'cap_netlink_send' 'int (struct sock *, struct sk_buff *)'
FunctionDecl 0x1e83430 <line:2580:1, line:2583:1> security_ismaclabel 'int (const char *)' static inline
FunctionDecl 0x1e83760 <line:2585:1, line:2588:1> security_secid_to_secctx 'int (u32, char **, u32 *)' static inline
FunctionDecl 0x1e83ac0 <../include/linux/security.h:2590:1, line:2595:1> security_secctx_to_secid 'int (const char *, u32, u32 *)' static inline
FunctionDecl 0x1e83d90 <../include/linux/security.h:2597:1, line:2599:1> security_release_secctx 'void (char *, u32)' static inline
FunctionDecl 0x1e840c0 <line:2601:1, line:2604:1> security_inode_notifysecctx 'int (struct inode *, void *, u32)' static inline
FunctionDecl 0x1e84430 <../include/linux/security.h:2605:1, line:2608:1> security_inode_setsecctx 'int (struct dentry *, void *, u32)' static inline
FunctionDecl 0x1e847a0 <../include/linux/security.h:2609:1, line:2612:1> security_inode_getsecctx 'int (struct inode *, void **, u32 *)' static inline
FunctionDecl 0x1e84b30 <../include/linux/security.h:2663:1, line:2668:1> security_unix_stream_connect 'int (struct sock *, struct sock *, struct sock *)' static inline
FunctionDecl 0x1e84e90 <line:2670:1, line:2674:1> security_unix_may_send 'int (struct socket *, struct socket *)' static inline
FunctionDecl 0x1e851f0 <line:2676:1, line:2680:1> security_socket_create 'int (int, int, int, int)' static inline
FunctionDecl 0x1e85660 <line:2682:1, line:2688:1> security_socket_post_create 'int (struct socket *, int, int, int, int)' static inline
FunctionDecl 0x1e85a60 <line:2690:1, line:2695:1> security_socket_bind 'int (struct socket *, struct sockaddr *, int)' static inline
FunctionDecl 0x1e85d20 <line:2697:1, line:2702:1> security_socket_connect 'int (struct socket *, struct sockaddr *, int)' static inline
FunctionDecl 0x1e85fe0 <line:2704:1, line:2707:1> security_socket_listen 'int (struct socket *, int)' static inline
FunctionDecl 0x1e86230 <line:2709:1, line:2713:1> security_socket_accept 'int (struct socket *, struct socket *)' static inline
FunctionDecl 0x1e86620 <line:2715:1, line:2719:1> security_socket_sendmsg 'int (struct socket *, struct msghdr *, int)' static inline
FunctionDecl 0x1e86a00 <line:2721:1, line:2726:1> security_socket_recvmsg 'int (struct socket *, struct msghdr *, int, int)' static inline
FunctionDecl 0x1e86c50 <line:2728:1, line:2731:1> security_socket_getsockname 'int (struct socket *)' static inline
FunctionDecl 0x1e86e00 <line:2733:1, line:2736:1> security_socket_getpeername 'int (struct socket *)' static inline
FunctionDecl 0x1e87140 <line:2738:1, line:2742:1> security_socket_getsockopt 'int (struct socket *, int, int)' static inline
FunctionDecl 0x1e873f0 <line:2744:1, line:2748:1> security_socket_setsockopt 'int (struct socket *, int, int)' static inline
FunctionDecl 0x1e87630 <line:2750:1, line:2753:1> security_socket_shutdown 'int (struct socket *, int)' static inline
FunctionDecl 0x1e87880 <line:2754:1, line:2758:1> security_sock_rcv_skb 'int (struct sock *, struct sk_buff *)' static inline
FunctionDecl 0x1e87c50 <line:2760:1, line:2764:1> security_socket_getpeersec_stream 'int (struct socket *, char *, int *, unsigned int)' static inline
FunctionDecl 0x1e87fe0 <../include/linux/security.h:2766:1, line:2769:1> security_socket_getpeersec_dgram 'int (struct socket *, struct sk_buff *, u32 *)' static inline
FunctionDecl 0x1e88350 <../include/linux/security.h:2771:1, line:2774:1> security_sk_alloc 'int (struct sock *, int, gfp_t)' static inline
FunctionDecl 0x1e88590 <line:2776:1, line:2778:1> security_sk_free 'void (struct sock *)' static inline
FunctionDecl 0x1e88860 <line:2780:1, line:2782:1> security_sk_clone 'void (const struct sock *, struct sock *)' static inline
FunctionDecl 0x1e88b70 <line:2784:1, line:2786:1> security_sk_classify_flow 'void (struct sock *, struct flowi *)' static inline
FunctionDecl 0x1e88e80 <line:2788:1, line:2790:1> security_req_classify_flow 'void (const struct request_sock *, struct flowi *)' static inline
FunctionDecl 0x1e89100 <line:2792:1, line:2794:1> security_sock_graft 'void (struct sock *, struct socket *)' static inline
FunctionDecl 0x1e89480 <line:2796:1, line:2800:1> security_inet_conn_request 'int (struct sock *, struct sk_buff *, struct request_sock *)' static inline
FunctionDecl 0x1e89750 <line:2802:1, line:2805:1> security_inet_csk_clone 'void (struct sock *, const struct request_sock *)' static inline
FunctionDecl 0x1e899d0 <line:2807:1, line:2810:1> security_inet_conn_established 'void (struct sock *, struct sk_buff *)' static inline
FunctionDecl 0x1e89b30 <line:2812:1, line:2815:1> security_secmark_relabel_packet 'int (u32)' static inline
FunctionDecl 0x1e89cd0 <line:2817:1, line:2819:1> security_secmark_refcount_inc 'void (void)' static inline
FunctionDecl 0x1e89e20 <line:2821:1, line:2823:1> security_secmark_refcount_dec 'void (void)' static inline
FunctionDecl 0x1e89fb0 <line:2825:1, line:2828:1> security_tun_dev_alloc_security 'int (void **)' static inline
FunctionDecl 0x1e8a150 <line:2830:1, line:2832:1> security_tun_dev_free_security 'void (void *)' static inline
FunctionDecl 0x1e8a2a0 <line:2834:1, line:2837:1> security_tun_dev_create 'int (void)' static inline
FunctionDecl 0x1e8a430 <line:2839:1, line:2842:1> security_tun_dev_attach_queue 'int (void *)' static inline
FunctionDecl 0x1e8a6e0 <line:2844:1, line:2847:1> security_tun_dev_attach 'int (struct sock *, void *)' static inline
FunctionDecl 0x1e8a880 <line:2849:1, line:2852:1> security_tun_dev_open 'int (void *)' static inline
FunctionDecl 0x1e8ab40 <line:2854:1, line:2856:1> security_skb_owned_by 'void (struct sk_buff *, struct sock *)' static inline
FunctionDecl 0x1e8af40 <line:2880:1, line:2883:1> security_xfrm_policy_alloc 'int (struct xfrm_sec_ctx **, struct xfrm_user_sec_ctx *)' static inline
FunctionDecl 0x1e8b210 <line:2885:1, line:2888:1> security_xfrm_policy_clone 'int (struct xfrm_sec_ctx *, struct xfrm_sec_ctx **)' static inline
FunctionDecl 0x1e8b450 <line:2890:1, line:2892:1> security_xfrm_policy_free 'void (struct xfrm_sec_ctx *)' static inline
FunctionDecl 0x1e8b640 <line:2894:1, line:2897:1> security_xfrm_policy_delete 'int (struct xfrm_sec_ctx *)' static inline
FunctionDecl 0x1e8b990 <line:2899:1, line:2903:1> security_xfrm_state_alloc 'int (struct xfrm_state *, struct xfrm_user_sec_ctx *)' static inline
FunctionDecl 0x1e8bcf0 <line:2905:1, line:2909:1> security_xfrm_state_alloc_acquire 'int (struct xfrm_state *, struct xfrm_sec_ctx *, u32)' static inline
FunctionDecl 0x1e8bf30 <line:2911:1, line:2913:1> security_xfrm_state_free 'void (struct xfrm_state *)' static inline
FunctionDecl 0x1e8e150 <line:2915:1, line:2918:1> security_xfrm_state_delete 'int (struct xfrm_state *)' static inline
FunctionDecl 0x1e8e490 <line:2920:1, line:2923:1> security_xfrm_policy_lookup 'int (struct xfrm_sec_ctx *, u32, u8)' static inline
FunctionDecl 0x1e8e8f0 <line:2925:1, line:2929:1> security_xfrm_state_pol_flow_match 'int (struct xfrm_state *, struct xfrm_policy *, const struct flowi *)' static inline
FunctionDecl 0x1e8ebb0 <line:2931:1, line:2934:1> security_xfrm_decode_session 'int (struct sk_buff *, u32 *)' static inline
FunctionDecl 0x1e8ee80 <line:2936:1, line:2938:1> security_skb_classify_flow 'void (struct sk_buff *, struct flowi *)' static inline
FunctionDecl 0x1e8f100 <line:2959:1, line:2962:1> security_path_unlink 'int (struct path *, struct dentry *)' static inline
FunctionDecl 0x1e8f460 <line:2964:1, line:2968:1> security_path_mkdir 'int (struct path *, struct dentry *, umode_t)' static inline
FunctionDecl 0x1e8f6b0 <line:2970:1, line:2973:1> security_path_rmdir 'int (struct path *, struct dentry *)' static inline
FunctionDecl 0x1e8fa90 <line:2975:1, line:2979:1> security_path_mknod 'int (struct path *, struct dentry *, umode_t, unsigned int)' static inline
FunctionDecl 0x1e8fc60 <line:2981:1, line:2984:1> security_path_truncate 'int (struct path *)' static inline
FunctionDecl 0x1e8ffb0 <line:2986:1, line:2990:1> security_path_symlink 'int (struct path *, struct dentry *, const char *)' static inline
FunctionDecl 0x1e90320 <line:2992:1, line:2997:1> security_path_link 'int (struct dentry *, struct path *, struct dentry *)' static inline
FunctionDecl 0x1e90720 <line:2999:1, line:3005:1> security_path_rename 'int (struct path *, struct dentry *, struct path *, struct dentry *)' static inline
FunctionDecl 0x1e909f0 <line:3007:1, line:3010:1> security_path_chmod 'int (struct path *, umode_t)' static inline
FunctionDecl 0x1e90d40 <line:3012:1, line:3015:1> security_path_chown 'int (struct path *, kuid_t, kgid_t)' static inline
FunctionDecl 0x1e90f00 <line:3017:1, line:3020:1> security_path_chroot 'int (struct path *)' static inline
FunctionDecl 0x1e911d0 <line:3104:1, line:3108:1> securityfs_create_dir 'struct dentry *(const char *, struct dentry *)' static inline
DeclRefExpr 0x1e91340 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
FunctionDecl 0x1e912a0 <<invalid sloc>> ERR_PTR 'int ()'
FunctionDecl 0x1e917c0 <../include/linux/security.h:3110:1, line:3117:1> securityfs_create_file 'struct dentry *(const char *, umode_t, struct dentry *, void *, const struct file_operations *)' static inline
DeclRefExpr 0x1e91888 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
FunctionDecl 0x1e91a40 <../include/linux/security.h:3119:1, line:3120:2> securityfs_remove 'void (struct dentry *)' static inline
FunctionDecl 0x1e91bc0 <line:3138:1, line:3141:1> alloc_secdata 'char *(void)' static inline
FunctionDecl 0x1e91d90 <line:3143:1, line:3144:3> free_secdata 'void (void *)' static inline
FunctionDecl 0x1e91f80 <line:3155:1, line:3159:1> yama_ptrace_access_check 'int (struct task_struct *, unsigned int)' static inline
FunctionDecl 0x1e92140 <line:3161:1, line:3164:1> yama_ptrace_traceme 'int (struct task_struct *)' static inline
FunctionDecl 0x1e922f0 <line:3166:1, line:3168:1> yama_task_free 'void (struct task_struct *)' static inline
FunctionDecl 0x1e92620 <line:3170:1, line:3175:1> yama_task_prctl 'int (int, unsigned long, unsigned long, unsigned long, unsigned long)' static inline
FunctionDecl 0x1e92890 <line:24:1, line:27:1> ima_bprm_check 'int (struct linux_binprm *)' static inline
FunctionDecl 0x1e92ac0 <line:29:1, line:32:1> ima_file_check 'int (struct file *, int)' static inline
FunctionDecl 0x1e92c80 <line:34:1, line:37:1> ima_file_free 'void (struct file *)' static inline
FunctionDecl 0x1e92f10 <line:39:1, line:42:1> ima_file_mmap 'int (struct file *, unsigned long)' static inline
FunctionDecl 0x1e930d0 <line:44:1, line:47:1> ima_module_check 'int (struct file *)' static inline
FunctionDecl 0x1e93280 <line:57:1, line:60:1> ima_inode_post_setattr 'void (struct dentry *)' static inline
FunctionDecl 0x1e93620 <line:62:1, line:68:1> ima_inode_setxattr 'int (struct dentry *, const char *, const void *, size_t)' static inline
FunctionDecl 0x1e93870 <line:70:1, line:74:1> ima_inode_removexattr 'int (struct dentry *, const char *)' static inline
FunctionDecl 0x1e97780 <line:42:1, col:79> tracepoint_probe_register 'int (const char *, void *, void *)' extern
FunctionDecl 0x1e979c0 <line:48:1, line:49:70> tracepoint_probe_unregister 'int (const char *, void *, void *)' extern
FunctionDecl 0x1e97c00 <line:51:1, line:52:22> tracepoint_probe_register_noupdate 'int (const char *, void *, void *)' extern
FunctionDecl 0x1e97e40 <line:53:1, line:54:17> tracepoint_probe_unregister_noupdate 'int (const char *, void *, void *)' extern
FunctionDecl 0x1e97f90 <line:55:1, col:45> tracepoint_probe_update_all 'void (void)' extern
FunctionDecl 0x1e983e0 <line:72:1, col:63> tracepoint_iter_start 'void (struct tracepoint_iter *)' extern
FunctionDecl 0x1e98530 <line:73:1, col:62> tracepoint_iter_next 'void (struct tracepoint_iter *)' extern
FunctionDecl 0x1e98680 <line:74:1, col:62> tracepoint_iter_stop 'void (struct tracepoint_iter *)' extern
FunctionDecl 0x1e987d0 <line:75:1, col:63> tracepoint_iter_reset 'void (struct tracepoint_iter *)' extern
FunctionDecl 0x1e98910 <line:82:1, line:85:1> tracepoint_synchronize_unregister 'void (void)' static inline
DeclRefExpr 0x1e989b0 <col:2> 'void (void)' Function 0x1a6bda0 'synchronize_sched' 'void (void)'
FunctionDecl 0x1e98cf0 <../include/linux/kmemcheck.h:92:1, line:95:1> kmemcheck_alloc_shadow 'void (struct page *, int, gfp_t, int)' static inline
FunctionDecl 0x1e98ef0 <line:97:1, line:100:1> kmemcheck_free_shadow 'void (struct page *, int)' static inline
FunctionDecl 0x1e99270 <line:102:1, line:106:1> kmemcheck_slab_alloc 'void (struct kmem_cache *, gfp_t, void *, size_t)' static inline
FunctionDecl 0x1e99580 <line:108:1, line:111:1> kmemcheck_slab_free 'void (struct kmem_cache *, void *, size_t)' static inline
FunctionDecl 0x1e99840 <line:113:1, line:116:1> kmemcheck_pagealloc_alloc 'void (struct page *, unsigned int, gfp_t)' static inline
FunctionDecl 0x1e99a40 <line:118:1, line:121:1> kmemcheck_page_is_tracked 'bool (struct page *)' static inline
FunctionDecl 0x1e99cc0 <line:123:1, line:125:1> kmemcheck_mark_unallocated 'void (void *, unsigned int)' static inline
FunctionDecl 0x1e99ea0 <line:127:1, line:129:1> kmemcheck_mark_uninitialized 'void (void *, unsigned int)' static inline
FunctionDecl 0x1e9a080 <line:131:1, line:133:1> kmemcheck_mark_initialized 'void (void *, unsigned int)' static inline
FunctionDecl 0x1e9a260 <line:135:1, line:137:1> kmemcheck_mark_freed 'void (void *, unsigned int)' static inline
FunctionDecl 0x1e9a450 <line:139:1, line:142:1> kmemcheck_mark_unallocated_pages 'void (struct page *, unsigned int)' static inline
FunctionDecl 0x1e9a640 <line:144:1, line:147:1> kmemcheck_mark_uninitialized_pages 'void (struct page *, unsigned int)' static inline
FunctionDecl 0x1e9a830 <line:149:1, line:152:1> kmemcheck_mark_initialized_pages 'void (struct page *, unsigned int)' static inline
FunctionDecl 0x1e9aa90 <line:154:1, line:157:1> kmemcheck_is_obj_initialized 'bool (unsigned long, size_t)' static inline
FunctionDecl 0x1e9c1b0 <line:53:1, line:62:1> seq_get_buf 'size_t (struct seq_file *, char **)' static inline
DeclRefExpr 0x1e9c260 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
FunctionDecl 0x1e9cba0 <line:73:1, line:81:1> seq_commit 'void (struct seq_file *, int)' static inline
DeclRefExpr 0x1e9ce18 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
FunctionDecl 0x1e9d390 <line:91:1, line:94:1> seq_setwidth 'void (struct seq_file *, size_t)' static inline
FunctionDecl 0x1e9d790 <line:95:1, col:40> seq_pad 'void (struct seq_file *, char)'
FunctionDecl 0x1e9da10 <line:97:1, col:58> mangle_path 'char *(char *, const char *, const char *)'
FunctionDecl 0x1e9dc80 <line:98:1, col:58> seq_open 'int (struct file *, const struct seq_operations *)'
FunctionDecl 0x1e9df50 <line:99:1, col:64> seq_read 'ssize_t (struct file *, char *, size_t, loff_t *)'
FunctionDecl 0x1e9e1b0 <line:100:1, col:44> seq_lseek 'loff_t (struct file *, loff_t, int)'
FunctionDecl 0x1e9e3a0 <line:101:1, col:46> seq_release 'int (struct inode *, struct file *)'
FunctionDecl 0x1e9e690 <line:102:1, col:61> seq_escape 'int (struct seq_file *, const char *, const char *)'
FunctionDecl 0x1e9e8f0 <line:103:1, col:40> seq_putc 'int (struct seq_file *, char)'
FunctionDecl 0x1e9eb50 <line:104:1, col:47> seq_puts 'int (struct seq_file *, const char *)'
FunctionDecl 0x1ecca20 <line:105:1, col:65> seq_write 'int (struct seq_file *, const void *, size_t)'
FunctionDecl 0x1eccb00 prev 0x1e4b870 <line:107:1, col:14> __printf 'int ()'
FunctionDecl 0x1eccd50 <col:16, col:67> seq_printf 'int (struct seq_file *, const char *, ...)'
FunctionDecl 0x1ecce20 prev 0x1eccb00 <line:108:1, col:14> __printf 'int ()'
FunctionDecl 0x1ecd100 <col:16, col:77> seq_vprintf 'int (struct seq_file *, const char *, __va_list_tag *)'
FunctionDecl 0x1ecd400 <line:110:1, col:66> seq_path 'int (struct seq_file *, const struct path *, const char *)'
FunctionDecl 0x1ecd700 <line:111:1, col:64> seq_dentry 'int (struct seq_file *, struct dentry *, const char *)'
FunctionDecl 0x1ecda90 <line:112:1, line:113:45> seq_path_root 'int (struct seq_file *, const struct path *, const struct path *, const char *)'
FunctionDecl 0x1ecdd90 <line:114:1, line:115:28> seq_bitmap 'int (struct seq_file *, const unsigned long *, unsigned int)'
FunctionDecl 0x1ece000 <line:116:1, line:119:1> seq_cpumask 'int (struct seq_file *, const struct cpumask *)' static inline
FunctionDecl 0x1ece320 <line:121:1, line:124:1> seq_nodemask 'int (struct seq_file *, nodemask_t *)' static inline
FunctionDecl 0x1ece610 <line:126:1, line:127:23> seq_bitmap_list 'int (struct seq_file *, const unsigned long *, unsigned int)'
FunctionDecl 0x1ece800 <line:129:1, line:133:1> seq_cpumask_list 'int (struct seq_file *, const struct cpumask *)' static inline
FunctionDecl 0x1eceaa0 <line:135:1, line:138:1> seq_nodemask_list 'int (struct seq_file *, nodemask_t *)' static inline
FunctionDecl 0x1ecef50 <line:140:1, col:74> single_open 'int (struct file *, int (*)(struct seq_file *, void *), void *)'
FunctionDecl 0x1ecf3e0 <line:141:1, col:87> single_open_size 'int (struct file *, int (*)(struct seq_file *, void *), void *, size_t)'
FunctionDecl 0x1ecf5e0 <line:142:1, col:49> single_release 'int (struct inode *, struct file *)'
FunctionDecl 0x1ecf8e0 <line:143:1, col:75> __seq_open_private 'void *(struct file *, const struct seq_operations *, int)'
FunctionDecl 0x1ecfbe0 <line:144:1, col:71> seq_open_private 'int (struct file *, const struct seq_operations *, int)'
FunctionDecl 0x1ecfdd0 <line:145:1, col:54> seq_release_private 'int (struct inode *, struct file *)'
FunctionDecl 0x1ed00c0 <line:146:1, line:147:26> seq_put_decimal_ull 'int (struct seq_file *, char, unsigned long long)'
FunctionDecl 0x1ed03b0 <line:148:1, line:149:17> seq_put_decimal_ll 'int (struct seq_file *, char, long long)'
FunctionDecl 0x1ed05b0 <line:151:1, line:159:1> seq_user_ns 'struct user_namespace *(struct seq_file *)' static inline
FunctionDecl 0x1ed0960 <line:166:1, line:167:13> seq_list_start 'struct list_head *(struct list_head *, loff_t)' extern
FunctionDecl 0x1ed0b50 <line:168:1, line:169:13> seq_list_start_head 'struct list_head *(struct list_head *, loff_t)' extern
FunctionDecl 0x1ed0e50 <line:170:1, line:171:15> seq_list_next 'struct list_head *(void *, struct list_head *, loff_t *)' extern
FunctionDecl 0x1ed10d0 <line:177:1, line:178:18> seq_hlist_start 'struct hlist_node *(struct hlist_head *, loff_t)' extern
FunctionDecl 0x1ed12c0 <line:179:1, line:180:23> seq_hlist_start_head 'struct hlist_node *(struct hlist_head *, loff_t)' extern
FunctionDecl 0x1ed15c0 <line:181:1, line:182:19> seq_hlist_next 'struct hlist_node *(void *, struct hlist_head *, loff_t *)' extern
FunctionDecl 0x1ed17b0 <line:184:1, line:185:22> seq_hlist_start_rcu 'struct hlist_node *(struct hlist_head *, loff_t)' extern
FunctionDecl 0x1ed19a0 <line:186:1, line:187:20> seq_hlist_start_head_rcu 'struct hlist_node *(struct hlist_head *, loff_t)' extern
FunctionDecl 0x1ed1c00 <line:188:1, line:190:22> seq_hlist_next_rcu 'struct hlist_node *(void *, struct hlist_head *, loff_t *)' extern
FunctionDecl 0x1ed1f10 <line:193:1, col:104> seq_hlist_start_percpu 'struct hlist_node *(struct hlist_head *, int *, loff_t)' extern
FunctionDecl 0x1ed22a0 <line:195:1, col:113> seq_hlist_next_percpu 'struct hlist_node *(void *, struct hlist_head *, int *, loff_t *)' extern
FunctionDecl 0x1ed2dc0 <line:42:1, line:46:1> poll_wait 'void (struct file *, wait_queue_head_t *, poll_table *)' static inline
FunctionDecl 0x1ed3320 <line:53:1, line:56:1> poll_does_not_wait 'bool (const poll_table *)' static inline
FunctionDecl 0x1ed3790 <../include/linux/poll.h:64:1, line:67:1> poll_requested_events 'unsigned long (const poll_table *)' static inline
FunctionDecl 0x1ed3b40 <line:69:1, line:73:1> init_poll_funcptr 'void (poll_table *, poll_queue_proc)' static inline
FunctionDecl 0x1edd790 <line:95:1, col:51> poll_initwait 'void (struct poll_wqueues *)' extern
FunctionDecl 0x1edd8e0 <line:96:1, col:51> poll_freewait 'void (struct poll_wqueues *)' extern
FunctionDecl 0x1eddc40 <line:97:1, line:98:43> poll_schedule_timeout 'int (struct poll_wqueues *, int, ktime_t *, unsigned long)' extern
FunctionDecl 0x1edde30 <line:99:1, col:57> select_estimate_accuracy 'long (struct timespec *)' extern
FunctionDecl 0x1ede080 <line:102:1, line:105:1> poll_schedule 'int (struct poll_wqueues *, int)' static inline
DeclRefExpr 0x1ede130 <col:9> 'int (struct poll_wqueues *, int, ktime_t *, unsigned long)' Function 0x1eddc40 'poll_schedule_timeout' 'int (struct poll_wqueues *, int, ktime_t *, unsigned long)'
FunctionDecl 0x1ede910 <line:129:1, line:138:1> get_fd_set 'int (unsigned long, void *, unsigned long *)' static inline
DeclRefExpr 0x1edee40 <col:10> 'int ()' Function 0x1ededa0 'copy_from_user' 'int ()'
DeclRefExpr 0x1edf060 <col:2> 'void *(void *, int, unsigned long)' Function 0x18a1b60 'memset' 'void *(void *, int, unsigned long)'
FunctionDecl 0x1ededa0 <<invalid sloc>> copy_from_user 'int ()'
FunctionDecl 0x1edf4c0 <line:157:1, line:158:35> do_sys_poll 'int (struct pollfd *, unsigned int, struct timespec *)' extern
FunctionDecl 0x1edf940 <line:159:1, line:160:52> core_sys_select 'int (int, fd_set *, fd_set *, fd_set *, struct timespec *)' extern
FunctionDecl 0x1edfc40 <line:162:1, col:76> poll_select_set_timeout 'int (struct timespec *, long, long)' extern
FunctionDecl 0x1ee04a0 <line:63:1, col:66> ring_buffer_event_length 'unsigned int (struct ring_buffer_event *)'
FunctionDecl 0x1ee0670 <line:64:1, col:61> ring_buffer_event_data 'void *(struct ring_buffer_event *)'
FunctionDecl 0x1ee0960 <line:80:1, line:81:36> ring_buffer_discard_commit 'void (struct ring_buffer *, struct ring_buffer_event *)'
FunctionDecl 0x1ee0c60 <line:86:1, line:87:83> __ring_buffer_alloc 'struct ring_buffer *(unsigned long, unsigned int, struct lock_class_key *)'
FunctionDecl 0x1ee0ec0 <line:100:1, col:58> ring_buffer_wait 'void (struct ring_buffer *, int)'
FunctionDecl 0x1ee1240 <line:101:1, line:102:47> ring_buffer_poll_wait 'int (struct ring_buffer *, int, struct file *, poll_table *)'
FunctionDecl 0x1ee1430 <line:107:1, col:49> ring_buffer_free 'void (struct ring_buffer *)'
FunctionDecl 0x1ee1710 <line:109:1, col:79> ring_buffer_resize 'int (struct ring_buffer *, unsigned long, int)'
FunctionDecl 0x1ee18f0 <line:111:1, col:70> ring_buffer_change_overwrite 'void (struct ring_buffer *, int)'
FunctionDecl 0x1ee1b70 <line:113:1, line:114:30> ring_buffer_lock_reserve 'struct ring_buffer_event *(struct ring_buffer *, unsigned long)'
FunctionDecl 0x1ee1de0 <line:115:1, line:116:41> ring_buffer_unlock_commit 'int (struct ring_buffer *, struct ring_buffer_event *)'
FunctionDecl 0x1ee20d0 <line:117:1, line:118:41> ring_buffer_write 'int (struct ring_buffer *, unsigned long, void *)'
FunctionDecl 0x1ee2460 <line:120:1, line:122:30> ring_buffer_peek 'struct ring_buffer_event *(struct ring_buffer *, int, u64 *, unsigned long *)'
FunctionDecl 0x1ee2750 <line:123:1, line:125:33> ring_buffer_consume 'struct ring_buffer_event *(struct ring_buffer *, int, u64 *, unsigned long *)'
FunctionDecl 0x1ee2a70 <line:127:1, line:128:61> ring_buffer_read_prepare 'struct ring_buffer_iter *(struct ring_buffer *, int)'
FunctionDecl 0x1ee2bb0 <line:129:1, col:40> ring_buffer_read_prepare_sync 'void (void)'
FunctionDecl 0x1ee2d80 <line:130:1, col:58> ring_buffer_read_start 'void (struct ring_buffer_iter *)'
FunctionDecl 0x1ee2ed0 <line:131:1, col:59> ring_buffer_read_finish 'void (struct ring_buffer_iter *)'
FunctionDecl 0x1ee3140 <line:133:1, line:134:61> ring_buffer_iter_peek 'struct ring_buffer_event *(struct ring_buffer_iter *, u64 *)'
FunctionDecl 0x1ee3330 <line:135:1, line:136:56> ring_buffer_read 'struct ring_buffer_event *(struct ring_buffer_iter *, u64 *)'
FunctionDecl 0x1ee3490 <line:137:1, col:58> ring_buffer_iter_reset 'void (struct ring_buffer_iter *)'
FunctionDecl 0x1ee3660 <line:138:1, col:57> ring_buffer_iter_empty 'int (struct ring_buffer_iter *)'
FunctionDecl 0x1ee38b0 <line:140:1, col:67> ring_buffer_size 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee3a90 <line:142:1, col:63> ring_buffer_reset_cpu 'void (struct ring_buffer *, int)'
FunctionDecl 0x1ee3bf0 <line:143:1, col:50> ring_buffer_reset 'void (struct ring_buffer *)'
FunctionDecl 0x1ee3ee0 <line:149:1, line:154:1> ring_buffer_swap_cpu 'int (struct ring_buffer *, struct ring_buffer *, int)' static inline
FunctionDecl 0x1ee4140 <../include/linux/ring_buffer.h:157:1, col:49> ring_buffer_empty 'int (struct ring_buffer *)'
FunctionDecl 0x1ee4390 <line:158:1, col:62> ring_buffer_empty_cpu 'int (struct ring_buffer *, int)'
FunctionDecl 0x1ee44f0 <line:160:1, col:59> ring_buffer_record_disable 'void (struct ring_buffer *)'
FunctionDecl 0x1ee4640 <line:161:1, col:58> ring_buffer_record_enable 'void (struct ring_buffer *)'
FunctionDecl 0x1ee4790 <line:162:1, col:55> ring_buffer_record_off 'void (struct ring_buffer *)'
FunctionDecl 0x1ee48e0 <line:163:1, col:54> ring_buffer_record_on 'void (struct ring_buffer *)'
FunctionDecl 0x1ee4a30 <line:164:1, col:56> ring_buffer_record_is_on 'int (struct ring_buffer *)'
FunctionDecl 0x1ee4c00 <line:165:1, col:72> ring_buffer_record_disable_cpu 'void (struct ring_buffer *, int)'
FunctionDecl 0x1ee4de0 <line:166:1, col:71> ring_buffer_record_enable_cpu 'void (struct ring_buffer *, int)'
FunctionDecl 0x1ee5040 <line:168:1, col:68> ring_buffer_oldest_event_ts 'u64 (struct ring_buffer *, int)'
FunctionDecl 0x1ee5220 <line:169:1, col:72> ring_buffer_bytes_cpu 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee5400 <line:170:1, col:61> ring_buffer_entries 'unsigned long (struct ring_buffer *)'
FunctionDecl 0x1ee5550 <line:171:1, col:62> ring_buffer_overruns 'unsigned long (struct ring_buffer *)'
FunctionDecl 0x1ee8130 <line:172:1, col:74> ring_buffer_entries_cpu 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee8310 <line:173:1, col:74> ring_buffer_overrun_cpu 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee84f0 <line:174:1, col:81> ring_buffer_commit_overrun_cpu 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee86d0 <line:175:1, col:81> ring_buffer_dropped_events_cpu 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee88b0 <line:176:1, col:78> ring_buffer_read_events_cpu 'unsigned long (struct ring_buffer *, int)'
FunctionDecl 0x1ee8a90 <line:178:1, col:63> ring_buffer_time_stamp 'u64 (struct ring_buffer *, int)'
FunctionDecl 0x1ee8d80 <line:179:1, line:180:27> ring_buffer_normalize_time_stamp 'void (struct ring_buffer *, int, u64 *)'
FunctionDecl 0x1ee9100 <line:181:1, line:182:25> ring_buffer_set_clock 'void (struct ring_buffer *, u64 (*)(void))'
FunctionDecl 0x1ee92c0 <line:184:1, col:39> ring_buffer_page_len 'size_t (void *)'
FunctionDecl 0x1ee9510 <line:187:1, col:70> ring_buffer_alloc_read_page 'void *(struct ring_buffer *, int)'
FunctionDecl 0x1ee9770 <line:188:1, col:71> ring_buffer_free_read_page 'void (struct ring_buffer *, void *)'
FunctionDecl 0x1ee9b70 <line:189:1, line:190:35> ring_buffer_read_page 'int (struct ring_buffer *, void **, size_t, int, int)'
FunctionDecl 0x1ee9e90 <line:194:1, col:55> ring_buffer_print_entry_header 'int (struct trace_seq *)'
FunctionDecl 0x1ee9fe0 <line:195:1, col:54> ring_buffer_print_page_header 'int (struct trace_seq *)'
FunctionDecl 0x1eea520 <line:20:1, line:26:1> trace_seq_init 'void (struct trace_seq *)' static inline
FunctionDecl 0x1eeaa00 <line:50:1, line:53:1> trace_seq_printf 'int (struct trace_seq *, const char *, ...)' static inline
FunctionDecl 0x1eead80 <line:54:1, line:58:1> trace_seq_bprintf 'int (struct trace_seq *, const char *, const u32 *)' static inline
FunctionDecl 0x1eeb050 <line:60:1, line:63:1> trace_print_seq 'int (struct seq_file *, struct trace_seq *)' static inline
FunctionDecl 0x1eeb3a0 <line:64:1, line:68:1> trace_seq_to_user 'ssize_t (struct trace_seq *, char *, size_t)' static inline
FunctionDecl 0x1eeb680 <line:69:1, line:72:1> trace_seq_puts 'int (struct trace_seq *, const char *)' static inline
FunctionDecl 0x1eeb940 <line:73:1, line:76:1> trace_seq_putc 'int (struct trace_seq *, unsigned char)' static inline
FunctionDecl 0x1eebc90 <line:77:1, line:81:1> trace_seq_putmem 'int (struct trace_seq *, const void *, size_t)' static inline
FunctionDecl 0x1eebf40 <line:82:1, line:86:1> trace_seq_putmem_hex 'int (struct trace_seq *, const void *, size_t)' static inline
FunctionDecl 0x1eec200 <line:87:1, line:90:1> trace_seq_reserve 'void *(struct trace_seq *, size_t)' static inline
FunctionDecl 0x1eec520 <../include/linux/trace_seq.h:91:1, line:94:1> trace_seq_path 'int (struct trace_seq *, const struct path *)' static inline
FunctionDecl 0x1ef8a70 <line:64:1, line:67:1> task_nsproxy 'struct nsproxy *(struct task_struct *)' static inline
DeclRefExpr 0x1ef8f90 <col:3> 'int ()' Function 0x17b3820 'smp_read_barrier_depends' 'int ()'
FunctionDecl 0x1ef9310 <../include/linux/nsproxy.h:69:1, col:65> copy_namespaces 'int (unsigned long, struct task_struct *)'
FunctionDecl 0x1ef9470 <line:70:1, col:50> exit_task_namespaces 'void (struct task_struct *)'
FunctionDecl 0x1ef96d0 <line:71:1, col:73> switch_task_namespaces 'void (struct task_struct *, struct nsproxy *)'
FunctionDecl 0x1ef98b0 <line:72:1, col:37> free_nsproxy 'void (struct nsproxy *)'
FunctionDecl 0x1ef9c30 <line:73:1, line:74:35> unshare_nsproxy_namespaces 'int (unsigned long, struct nsproxy **, struct cred *, struct fs_struct *)'
FunctionDecl 0x1ef9ea0 <line:77:1, line:82:1> put_nsproxy 'void (struct nsproxy *)' static inline
DeclRefExpr 0x1ef9f48 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1efa048 <col:3> 'void (struct nsproxy *)' Function 0x1ef98b0 'free_nsproxy' 'void (struct nsproxy *)'
FunctionDecl 0x1efa270 <line:84:1, line:87:1> get_nsproxy 'void (struct nsproxy *)' static inline
DeclRefExpr 0x1efa318 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x1efa720 <line:32:1, line:35:1> kref_init 'void (struct kref *)' static inline
DeclRefExpr 0x1efa7c8 <col:2> 'int ()' Function 0x19b6460 'atomic_set' 'int ()'
FunctionDecl 0x1efa9e0 <line:41:1, line:48:1> kref_get 'void (struct kref *)' static inline
DeclRefExpr 0x1efab50 <col:2> 'int ()' Function 0x1efaab0 'WARN_ON_ONCE' 'int ()'
DeclRefExpr 0x1efab78 <col:15> 'int ()' Function 0x19bb600 'atomic_inc_return' 'int ()'
FunctionDecl 0x1efaab0 <<invalid sloc>> WARN_ON_ONCE 'int ()'
FunctionDecl 0x1f09ac0 <line:68:1, line:78:1> kref_sub 'int (struct kref *, unsigned int, void (*)(struct kref *))' static inline
DeclRefExpr 0x1f09b78 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1f09ce0 <col:6> 'int ()' Function 0x19b9a10 'atomic_sub_and_test' 'int ()'
FunctionDecl 0x1f0a290 <line:97:1, line:100:1> kref_put 'int (struct kref *, void (*)(struct kref *))' static inline
DeclRefExpr 0x1f0a340 <col:9> 'int (struct kref *, unsigned int, void (*)(struct kref *))' Function 0x1f09ac0 'kref_sub' 'int (struct kref *, unsigned int, void (*)(struct kref *))'
FunctionDecl 0x1f0a820 <line:115:1, line:132:1> kref_put_spinlock_irqsave 'int (struct kref *, void (*)(struct kref *), spinlock_t *)' static inline
DeclRefExpr 0x1f0a960 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1f0aac8 <col:6> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x1f0ad30 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1f0af20 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1f0b0b0 <col:11> 'int ()' Function 0x19efe10 'arch_local_irq_save' 'int ()'
DeclRefExpr 0x1f0b230 <col:29> 'int ()' Function 0x198b5d0 'barrier' 'int ()'
DeclRefExpr 0x1f0b2f0 <col:24> 'raw_spinlock_t *(spinlock_t *)' Function 0x1999130 'spinlock_check' 'raw_spinlock_t *(spinlock_t *)'
DeclRefExpr 0x1f0b5e8 <col:6> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1f0b820 <col:2> 'int ()' Function 0x19ac840 'typeof' 'int ()'
DeclRefExpr 0x1f0b988 <col:3> 'int ()' Function 0x19acc60 'arch_local_irq_restore' 'int ()'
DeclRefExpr 0x1f0bbb0 <col:2> 'void (spinlock_t *, unsigned long)' Function 0x19ac6f0 'spin_unlock_irqrestore' 'void (spinlock_t *, unsigned long)'
FunctionDecl 0x1f0c020 <line:134:1, line:149:1> kref_put_mutex 'int (struct kref *, void (*)(struct kref *), struct mutex *)' static inline
DeclRefExpr 0x1f0c0d8 <col:2> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1f0c240 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1f0c268 <col:16> 'int (atomic_t *, int, int)' Function 0x19b06e0 'atomic_add_unless' 'int (atomic_t *, int, int)'
DeclRefExpr 0x1f0c440 <col:3> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x1f0c4f0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1f0c518 <col:17> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
DeclRefExpr 0x1f0c680 <col:4> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
FunctionDecl 0x1f0d650 <line:69:1, line:72:1> get_pid_ns 'struct pid_namespace *(struct pid_namespace *)' static inline
FunctionDecl 0x1f0d9e0 <line:74:1, line:80:1> copy_pid_ns 'struct pid_namespace *(unsigned long, struct user_namespace *, struct pid_namespace *)' static inline
DeclRefExpr 0x1f0db60 <col:8> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
FunctionDecl 0x1f0ddb0 <line:82:1, line:84:1> put_pid_ns 'void (struct pid_namespace *)' static inline
FunctionDecl 0x1f0df20 <line:86:1, line:89:1> zap_pid_ns_processes 'void (struct pid_namespace *)' static inline
DeclRefExpr 0x1f0dfc8 <col:2> 'int ()' Function 0x1b38750 'BUG' 'int ()'
FunctionDecl 0x1f0e200 <line:91:1, line:94:1> reboot_pid_ns 'int (struct pid_namespace *, int)' static inline
FunctionDecl 0x1f0e460 <line:97:1, col:72> task_active_pid_ns 'struct pid_namespace *(struct task_struct *)' extern
FunctionDecl 0x1f0e5a0 <line:98:1, col:23> pidhash_init 'void (void)'
FunctionDecl 0x1f0e6d0 <line:99:1, col:22> pidmap_init 'void (void)'
FunctionDecl 0x1f0ec40 <line:50:1, line:53:1> kallsyms_lookup_name 'unsigned long (const char *)' static inline
FunctionDecl 0x1f0f230 <line:55:1, line:61:1> kallsyms_on_each_symbol 'int (int (*)(void *, const char *, struct module *, unsigned long), void *)' static inline
FunctionDecl 0x1f0f510 <line:63:1, line:68:1> kallsyms_lookup_size_offset 'int (unsigned long, unsigned long *, unsigned long *)' static inline
FunctionDecl 0x1f0f900 <line:70:1, line:76:1> kallsyms_lookup 'const char *(unsigned long, unsigned long *, unsigned long *, char **, char *)' static inline
FunctionDecl 0x1f0fbf0 <../include/linux/kallsyms.h:78:1, line:82:1> sprint_symbol 'int (char *, unsigned long)' static inline
FunctionDecl 0x1f0fed0 <line:84:1, line:88:1> sprint_symbol_no_offset 'int (char *, unsigned long)' static inline
FunctionDecl 0x1f101b0 <line:90:1, line:94:1> sprint_backtrace 'int (char *, unsigned long)' static inline
FunctionDecl 0x1f104d0 <line:96:1, line:99:1> lookup_symbol_name 'int (unsigned long, char *)' static inline
FunctionDecl 0x1f108d0 <../include/linux/kallsyms.h:101:1, line:104:1> lookup_symbol_attrs 'int (unsigned long, unsigned long *, unsigned long *, char *, char *)' static inline
FunctionDecl 0x1f10a40 prev 0x1ecce20 <../include/linux/kallsyms.h:111:1, col:21> __printf 'int ()' static
FunctionDecl 0x1f10b70 <line:112:1, line:114:1> __check_printsym_format 'void (const char *, ...)'
FunctionDecl 0x1f10d80 <line:116:1, line:121:1> print_symbol 'void (const char *, unsigned long)' static inline
DeclRefExpr 0x1f10e30 <col:2> 'void (const char *, ...)' Function 0x1f10b70 '__check_printsym_format' 'void (const char *, ...)'
FunctionDecl 0x1f11020 <line:123:1, line:126:1> print_ip_sym 'void (unsigned long)' static inline
DeclRefExpr 0x1f110c8 <col:2> 'int (const char *, ...)' Function 0x1876460 'printk' 'int (const char *, ...)'
FunctionDecl 0x1f11470 <line:229:1, line:232:1> ftrace_nr_registered_ops 'int (void)' static inline
FunctionDecl 0x1f11600 <line:233:1, col:50> clear_ftrace_function 'void (void)' static inline
FunctionDecl 0x1f11750 <line:234:1, col:40> ftrace_kill 'void (void)' static inline
FunctionDecl 0x1f12910 <line:235:1, col:40> ftrace_stop 'void (void)' static inline
FunctionDecl 0x1f12a60 <line:236:1, col:41> ftrace_start 'void (void)' static inline
FunctionDecl 0x1f131e0 <line:531:1, col:60> skip_trace 'int (unsigned long)' static inline
FunctionDecl 0x1f13380 <line:532:1, col:57> ftrace_force_update 'int (void)' static inline
FunctionDecl 0x1f13510 <line:533:1, col:50> ftrace_disable_daemon 'void (void)' static inline
FunctionDecl 0x1f13660 <line:534:1, col:49> ftrace_enable_daemon 'void (void)' static inline
FunctionDecl 0x1f13840 <line:535:1, col:60> ftrace_release_mod 'void (struct module *)' static inline
FunctionDecl 0x1f13a80 <line:544:1, line:547:1> ftrace_text_reserved 'int (void *, void *)' static inline
FunctionDecl 0x1f13c20 <line:548:1, line:551:1> ftrace_location 'unsigned long (unsigned long)' static inline
FunctionDecl 0x1f13f60 <line:565:1, line:566:52> ftrace_filter_write 'ssize_t (struct file *, const char *, size_t, loff_t *)' static inline
FunctionDecl 0x1f142d0 <../include/linux/ftrace.h:567:1, line:568:53> ftrace_notrace_write 'ssize_t (struct file *, const char *, size_t, loff_t *)' static inline
FunctionDecl 0x1f14560 <../include/linux/ftrace.h:569:1, line:570:80> ftrace_regex_release 'int (struct inode *, struct file *)' static inline
FunctionDecl 0x1f14830 <../include/linux/ftrace.h:573:1, col:72> ftrace_filter_lseek 'loff_t (struct file *, loff_t, int)'
FunctionDecl 0x1f14980 prev 0x1f11750 <line:576:1, col:22> ftrace_kill 'void (void)'
FunctionDecl 0x1f14ab0 <line:578:1, line:583:1> tracer_disable 'void (void)' static inline
FunctionDecl 0x1f14c00 <line:590:1, line:599:1> __ftrace_enabled_save 'int (void)' static inline
FunctionDecl 0x1f14d90 <line:601:1, line:606:1> __ftrace_enabled_restore 'void (int)' static inline
FunctionDecl 0x1f14fa0 <line:632:3, col:77> time_hardirqs_on 'void (unsigned long, unsigned long)' static inline
FunctionDecl 0x1f15180 <line:633:3, col:78> time_hardirqs_off 'void (unsigned long, unsigned long)' static inline
FunctionDecl 0x1f152e0 <line:651:1, col:40> ftrace_init 'void (void)' static inline
FunctionDecl 0x1f15d60 <line:762:1, col:68> ftrace_graph_init_task 'void (struct task_struct *)' static inline
FunctionDecl 0x1f15ed0 <line:763:1, col:68> ftrace_graph_exit_task 'void (struct task_struct *)' static inline
FunctionDecl 0x1f160c0 <line:764:1, col:82> ftrace_graph_init_idle_task 'void (struct task_struct *, int)' static inline
FunctionDecl 0x1f16360 <line:766:1, line:770:1> register_ftrace_graph 'int (trace_func_graph_ret_t, trace_func_graph_ent_t)' static inline
FunctionDecl 0x1f16520 <line:771:1, col:52> unregister_ftrace_graph 'void (void)' static inline
FunctionDecl 0x1f16680 <line:773:1, line:776:1> task_curr_ret_stack 'int (struct task_struct *)' static inline
FunctionDecl 0x1f16840 <line:778:1, col:48> pause_graph_tracing 'void (void)' static inline
FunctionDecl 0x1f16990 <line:779:1, col:50> unpause_graph_tracing 'void (void)' static inline
FunctionDecl 0x1f16ae0 <line:836:1, col:54> disable_trace_on_warning 'void (void)' static inline
FunctionDecl 0x1f17290 <line:141:1, col:94> request_resource_conflict 'struct resource *(struct resource *, struct resource *)' extern
FunctionDecl 0x1f17500 <line:142:1, col:72> request_resource 'int (struct resource *, struct resource *)' extern
FunctionDecl 0x1f176e0 <line:143:1, col:49> release_resource 'int (struct resource *)' extern
FunctionDecl 0x1f178b0 <line:144:1, col:50> release_child_resources 'void (struct resource *)'
FunctionDecl 0x1f17c10 <line:145:1, line:147:25> reserve_region_with_split 'void (struct resource *, resource_size_t, resource_size_t, const char *)' extern
FunctionDecl 0x1f17e20 <line:148:1, col:95> insert_resource_conflict 'struct resource *(struct resource *, struct resource *)' extern
FunctionDecl 0x1f18010 <line:149:1, col:73> insert_resource 'int (struct resource *, struct resource *)' extern
FunctionDecl 0x1f18280 <line:150:1, col:86> insert_resource_expand_to_fit 'void (struct resource *, struct resource *)' extern
FunctionDecl 0x1f183e0 <line:151:1, col:60> arch_remove_reservations 'void (struct resource *)' extern
FunctionDecl 0x1f18d10 <line:152:1, line:159:26> allocate_resource 'int (struct resource *, struct resource *, resource_size_t, resource_size_t, resource_size_t, resource_size_t, resource_size_t (*)(void *, const struct resource *, resource_size_t, resource_size_t), void *)' extern
FunctionDecl 0x1f18fc0 <line:160:1, col:78> lookup_resource 'struct resource *(struct resource *, resource_size_t)'
FunctionDecl 0x1f192b0 <line:161:1, line:162:27> adjust_resource 'int (struct resource *, resource_size_t, resource_size_t)'
FunctionDecl 0x1f19490 <line:163:1, col:56> resource_alignment 'resource_size_t (struct resource *)'
FunctionDecl 0x1f19660 <line:164:1, line:167:1> resource_size 'resource_size_t (const struct resource *)' static inline
FunctionDecl 0x1f19a10 <line:168:1, line:171:1> resource_type 'unsigned long (const struct resource *)' static inline
FunctionDecl 0x1f19f50 <line:182:1, line:185:33> __request_region 'struct resource *(struct resource *, resource_size_t, resource_size_t, const char *, int)' extern
FunctionDecl 0x1f1a1b0 <line:192:1, col:78> __check_region 'int (struct resource *, resource_size_t, resource_size_t)' extern
FunctionDecl 0x1f1a4a0 <line:193:1, line:194:20> __release_region 'void (struct resource *, resource_size_t, resource_size_t)' extern
FunctionDecl 0x1f2e580 <col:1, line:215:40> __devm_request_region 'struct resource *(struct device *, struct resource *, resource_size_t, resource_size_t, const char *)' extern
FunctionDecl 0x1f2ea40 <col:1, line:223:47> __devm_release_region 'void (struct device *, struct resource *, resource_size_t, resource_size_t)' extern
FunctionDecl 0x1f2eca0 <line:224:1, col:75> iomem_map_sanity_check 'int (resource_size_t, unsigned long)' extern
FunctionDecl 0x1f2ede0 <line:225:1, col:39> iomem_is_exclusive 'int (u64)' extern
FunctionDecl 0x1f2f390 <line:227:1, line:229:63> walk_system_ram_range 'int (unsigned long, unsigned long, void *, int (*)(unsigned long, unsigned long, void *))' extern
FunctionDecl 0x1f2f610 <line:232:1, line:235:1> resource_overlaps 'bool (struct resource *, struct resource *)' static inline
FunctionDecl 0x1f30760 <line:49:1, col:68> kobj_ns_type_register 'int (const struct kobj_ns_type_operations *)'
FunctionDecl 0x1f30930 <line:50:1, col:51> kobj_ns_type_registered 'int (enum kobj_ns_type)'
FunctionDecl 0x1f30b20 <line:51:1, col:79> kobj_child_ns_ops 'const struct kobj_ns_type_operations *(struct kobject *)'
FunctionDecl 0x1f30c90 <line:52:1, col:71> kobj_ns_ops 'const struct kobj_ns_type_operations *(struct kobject *)'
FunctionDecl 0x1f30e60 <line:54:1, col:54> kobj_ns_current_may_mount 'bool (enum kobj_ns_type)'
FunctionDecl 0x1f31030 <line:55:1, col:50> kobj_ns_grab_current 'void *(enum kobj_ns_type)'
FunctionDecl 0x1f31290 <line:56:1, col:68> kobj_ns_netlink 'const void *(enum kobj_ns_type, struct sock *)'
FunctionDecl 0x1f31460 <line:57:1, col:51> kobj_ns_initial 'const void *(enum kobj_ns_type)'
FunctionDecl 0x1f316b0 <line:58:1, col:51> kobj_ns_drop 'void (enum kobj_ns_type, void *)'
FunctionDecl 0x1f33d10 <line:258:1, line:262:1> sysfs_schedule_callback 'int (struct kobject *, void (*)(void *), void *, struct module *)' static inline
FunctionDecl 0x1f34000 <../include/linux/sysfs.h:264:1, line:267:1> sysfs_create_dir_ns 'int (struct kobject *, const void *)' static inline
FunctionDecl 0x1f34240 <line:269:1, line:271:1> sysfs_remove_dir 'void (struct kobject *)' static inline
FunctionDecl 0x1f34540 <line:273:1, line:277:1> sysfs_rename_dir_ns 'int (struct kobject *, const char *, const void *)' static inline
FunctionDecl 0x1f348a0 <line:279:1, line:284:1> sysfs_move_dir_ns 'int (struct kobject *, struct kobject *, const void *)' static inline
FunctionDecl 0x1f34c60 <line:286:1, line:291:1> sysfs_create_file_ns 'int (struct kobject *, const struct attribute *, const void *)' static inline
FunctionDecl 0x1f34f90 <line:293:1, line:297:1> sysfs_create_files 'int (struct kobject *, const struct attribute **)' static inline
FunctionDecl 0x1f352f0 <line:299:1, line:303:1> sysfs_chmod_file 'int (struct kobject *, const struct attribute *, umode_t)' static inline
FunctionDecl 0x1f35650 <line:305:1, line:309:1> sysfs_remove_file_ns 'void (struct kobject *, const struct attribute *, const void *)' static inline
FunctionDecl 0x1f358e0 <line:311:1, line:314:1> sysfs_remove_files 'void (struct kobject *, const struct attribute **)' static inline
FunctionDecl 0x1f35bc0 <line:316:1, line:320:1> sysfs_create_bin_file 'int (struct kobject *, const struct bin_attribute *)' static inline
FunctionDecl 0x1f35e90 <line:322:1, line:325:1> sysfs_remove_bin_file 'void (struct kobject *, const struct bin_attribute *)' static inline
FunctionDecl 0x1f361a0 <line:327:1, line:331:1> sysfs_create_link 'int (struct kobject *, struct kobject *, const char *)' static inline
FunctionDecl 0x1f3f160 <line:333:1, line:338:1> sysfs_create_link_nowarn 'int (struct kobject *, struct kobject *, const char *)' static inline
FunctionDecl 0x1f3f420 <line:340:1, line:342:1> sysfs_remove_link 'void (struct kobject *, const char *)' static inline
FunctionDecl 0x1f3f840 <line:344:1, line:349:1> sysfs_rename_link_ns 'int (struct kobject *, struct kobject *, const char *, const char *, const void *)' static inline
FunctionDecl 0x1f3fbb0 <line:351:1, line:354:1> sysfs_delete_link 'void (struct kobject *, struct kobject *, const char *)' static inline
FunctionDecl 0x1f3fed0 <line:356:1, line:360:1> sysfs_create_group 'int (struct kobject *, const struct attribute_group *)' static inline
FunctionDecl 0x1f40200 <line:362:1, line:366:1> sysfs_create_groups 'int (struct kobject *, const struct attribute_group **)' static inline
FunctionDecl 0x1f40450 <line:368:1, line:372:1> sysfs_update_group 'int (struct kobject *, const struct attribute_group *)' static inline
FunctionDecl 0x1f40720 <line:374:1, line:377:1> sysfs_remove_group 'void (struct kobject *, const struct attribute_group *)' static inline
FunctionDecl 0x1f409a0 <line:379:1, line:382:1> sysfs_remove_groups 'void (struct kobject *, const struct attribute_group **)' static inline
FunctionDecl 0x1f40cb0 <line:384:1, line:388:1> sysfs_add_file_to_group 'int (struct kobject *, const struct attribute *, const char *)' static inline
FunctionDecl 0x1f41010 <line:390:1, line:393:1> sysfs_remove_file_from_group 'void (struct kobject *, const struct attribute *, const char *)' static inline
FunctionDecl 0x1f41220 <line:395:1, line:399:1> sysfs_merge_group 'int (struct kobject *, const struct attribute_group *)' static inline
FunctionDecl 0x1f41470 <line:401:1, line:404:1> sysfs_unmerge_group 'void (struct kobject *, const struct attribute_group *)' static inline
FunctionDecl 0x1f41800 <line:406:1, line:411:1> sysfs_add_link_to_group 'int (struct kobject *, const char *, struct kobject *, const char *)' static inline
FunctionDecl 0x1f41b60 <line:413:1, line:416:1> sysfs_remove_link_from_group 'void (struct kobject *, const char *, const char *)' static inline
FunctionDecl 0x1f41dd0 <line:418:1, line:421:1> sysfs_notify 'void (struct kobject *, const char *, const char *)' static inline
FunctionDecl 0x1f42050 <line:422:1, line:424:1> sysfs_notify_dirent 'void (struct sysfs_dirent *)' static inline
FunctionDecl 0x1f42370 <line:425:1, line:430:1> sysfs_get_dirent_ns 'struct sysfs_dirent *(struct sysfs_dirent *, const unsigned char *, const void *)' static inline
FunctionDecl 0x1f42640 <../include/linux/sysfs.h:431:1, line:434:1> sysfs_get 'struct sysfs_dirent *(struct sysfs_dirent *)' static inline
FunctionDecl 0x1f42860 <../include/linux/sysfs.h:435:1, line:437:1> sysfs_put 'void (struct sysfs_dirent *)' static inline
FunctionDecl 0x1f43580 prev 0x1f10a40 <line:79:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1f437d0 <line:80:1, col:65> kobject_set_name 'int (struct kobject *, const char *, ...)'
FunctionDecl 0x1f43ac0 <line:81:1, line:82:20> kobject_set_name_vargs 'int (struct kobject *, const char *, __va_list_tag *)' extern
FunctionDecl 0x1f43d00 <line:84:1, line:87:1> kobject_name 'const char *(const struct kobject *)' static inline
FunctionDecl 0x1f44030 <line:89:1, col:71> kobject_init 'void (struct kobject *, struct kobj_type *)' extern
FunctionDecl 0x1f44190 <line:98:1, col:45> kobject_del 'void (struct kobject *)' extern
FunctionDecl 0x1f44560 <line:107:1, col:56> kobject_get 'struct kobject *(struct kobject *)' extern
FunctionDecl 0x1f446b0 <line:108:1, col:45> kobject_put 'void (struct kobject *)' extern
FunctionDecl 0x1f44880 <line:110:1, col:58> kobject_namespace 'const void *(struct kobject *)' extern
FunctionDecl 0x1f44ad0 <line:111:1, col:63> kobject_get_path 'char *(struct kobject *, gfp_t)' extern
FunctionDecl 0x1f46c90 <line:171:1, col:40> kset_init 'void (struct kset *)' extern
FunctionDecl 0x1f46e50 <line:173:1, col:46> kset_unregister 'void (struct kset *)' extern
FunctionDecl 0x1f49510 <line:178:1, line:181:1> to_kset 'struct kset *(struct kobject *)' static inline
FunctionDecl 0x1f49c50 <line:183:1, line:186:1> kset_get 'struct kset *(struct kset *)' static inline
DeclRefExpr 0x1f49d20 <col:13> 'struct kset *(struct kobject *)' Function 0x1f49510 'to_kset' 'struct kset *(struct kobject *)'
DeclRefExpr 0x1f49d48 <col:21> 'struct kobject *(struct kobject *)' Function 0x1f44560 'kobject_get' 'struct kobject *(struct kobject *)'
FunctionDecl 0x1f4a100 <../include/linux/kobject.h:188:1, line:191:1> kset_put 'void (struct kset *)' static inline
DeclRefExpr 0x1f4a1a8 <col:2> 'void (struct kobject *)' Function 0x1f446b0 'kobject_put' 'void (struct kobject *)'
FunctionDecl 0x1f4a440 <line:193:1, line:196:1> get_ktype 'struct kobj_type *(struct kobject *)' static inline
FunctionDecl 0x1f4a780 <line:198:1, col:65> kset_find_obj 'struct kobject *(struct kset *, const char *)' extern
FunctionDecl 0x1f4aca0 <line:211:1, col:68> kobject_uevent 'int (struct kobject *, enum kobject_action)'
FunctionDecl 0x1f4b010 <line:212:1, line:213:16> kobject_uevent_env 'int (struct kobject *, enum kobject_action, char **)'
FunctionDecl 0x1f4b0f0 prev 0x1f43580 <line:215:1, col:14> __printf 'int ()'
FunctionDecl 0x1f4b340 <line:216:1, col:72> add_uevent_var 'int (struct kobj_uevent_env *, const char *, ...)'
FunctionDecl 0x1f4b680 <line:218:1, line:219:29> kobject_action_type 'int (const char *, size_t, enum kobject_action *)'
FunctionDecl 0x1f4c170 <line:36:1, line:37:42> klist_init 'void (struct klist *, void (*)(struct klist_node *), void (*)(struct klist_node *))' extern
FunctionDecl 0x1f4c5a0 <line:45:1, col:65> klist_add_tail 'void (struct klist_node *, struct klist *)' extern
FunctionDecl 0x1f4c790 <line:46:1, col:65> klist_add_head 'void (struct klist_node *, struct klist *)' extern
FunctionDecl 0x1f4ca00 <line:47:1, col:73> klist_add_after 'void (struct klist_node *, struct klist_node *)' extern
FunctionDecl 0x1f4cbf0 <line:48:1, col:74> klist_add_before 'void (struct klist_node *, struct klist_node *)' extern
FunctionDecl 0x1f4cd50 <line:50:1, col:43> klist_del 'void (struct klist_node *)' extern
FunctionDecl 0x1f4cea0 <line:51:1, col:46> klist_remove 'void (struct klist_node *)' extern
FunctionDecl 0x1f4d070 <line:53:1, col:52> klist_node_attached 'int (struct klist_node *)' extern
FunctionDecl 0x1f4d4f0 <line:62:1, col:66> klist_iter_init 'void (struct klist *, struct klist_iter *)' extern
FunctionDecl 0x1f4d800 <line:63:1, line:64:26> klist_iter_init_node 'void (struct klist *, struct klist_iter *, struct klist_node *)' extern
FunctionDecl 0x1f4d9e0 <line:65:1, col:49> klist_iter_exit 'void (struct klist_iter *)' extern
FunctionDecl 0x1f4dbd0 <line:66:1, col:58> klist_next 'struct klist_node *(struct klist_iter *)' extern
FunctionDecl 0x1f4ded0 <../include/linux/pinctrl/devinfo.h:43:1, line:46:1> pinctrl_bind_pins 'int (struct device *)' static inline
FunctionDecl 0x1f4e4c0 <line:42:1, line:44:1> pm_vt_switch_required 'void (struct device *, bool)' static inline
FunctionDecl 0x1f4e6b0 <line:45:1, line:47:1> pm_vt_switch_unregister 'void (struct device *)' static inline
FunctionDecl 0x1f5a910 <line:567:1, col:60> update_pm_runtime_accounting 'void (struct device *)' extern
FunctionDecl 0x1f5aa60 <line:568:1, col:53> dev_pm_get_subsys_data 'int (struct device *)' extern
FunctionDecl 0x1f5abb0 <line:569:1, col:53> dev_pm_put_subsys_data 'int (struct device *)' extern
FunctionDecl 0x1f5afa0 <line:683:1, line:686:1> dpm_suspend_start 'int (pm_message_t)' static inline
FunctionDecl 0x1f5b260 <line:690:1, line:693:1> device_pm_wait_for_dev 'int (struct device *, struct device *)' static inline
FunctionDecl 0x1f5b730 <line:695:1, line:697:1> dpm_for_each_dev 'void (void *, void (*)(struct device *, void *))' static inline
FunctionDecl 0x1f5bf90 <line:28:1, line:37:1> ratelimit_state_init 'void (struct ratelimit_state *, int, int)' static inline
FunctionDecl 0x1f5c9a0 <line:41:1, col:69> ___ratelimit 'int (struct ratelimit_state *, const char *)' extern
FunctionDecl 0x1f5daf0 <line:59:1, col:70> bus_remove_file 'void (struct bus_type *, struct bus_attribute *)' extern
FunctionDecl 0x1f5f3b0 <line:135:1, col:48> bus_unregister 'void (struct bus_type *)' extern
FunctionDecl 0x1f5fb40 <line:144:1, line:147:35> subsys_dev_iter_init 'void (struct subsys_dev_iter *, struct bus_type *, struct device *, const struct device_type *)'
FunctionDecl 0x1f5fd50 <line:148:1, col:65> subsys_dev_iter_next 'struct device *(struct subsys_dev_iter *)'
FunctionDecl 0x1f5ff20 <line:149:1, col:55> subsys_dev_iter_exit 'void (struct subsys_dev_iter *)'
FunctionDecl 0x1f604c0 <line:151:1, line:152:49> bus_for_each_dev 'int (struct bus_type *, struct device *, void *, int (*)(struct device *, void *))'
FunctionDecl 0x1f60990 <line:153:1, line:155:55> bus_find_device 'struct device *(struct bus_type *, struct device *, void *, int (*)(struct device *, void *))'
FunctionDecl 0x1f60cc0 <line:156:1, line:158:28> bus_find_device_by_name 'struct device *(struct bus_type *, struct device *, const char *)'
FunctionDecl 0x1f60fe0 <line:159:1, line:160:25> subsys_find_device_by_id 'struct device *(struct bus_type *, unsigned int, struct device *)'
FunctionDecl 0x1f61590 <line:161:1, line:162:61> bus_for_each_drv 'int (struct bus_type *, struct device_driver *, void *, int (*)(struct device_driver *, void *))'
FunctionDecl 0x1f61aa0 <line:163:1, line:165:31> bus_sort_breadthfirst 'void (struct bus_type *, int (*)(const struct device *, const struct device *))'
FunctionDecl 0x1f61d80 <line:174:1, line:175:31> bus_register_notifier 'int (struct bus_type *, struct notifier_block *)' extern
FunctionDecl 0x1f61f70 <line:176:1, line:177:33> bus_unregister_notifier 'int (struct bus_type *, struct notifier_block *)' extern
FunctionDecl 0x1f62170 <line:193:1, col:54> bus_get_kset 'struct kset *(struct bus_type *)' extern
FunctionDecl 0x1f62360 <line:194:1, col:63> bus_get_device_klist 'struct klist *(struct bus_type *)' extern
FunctionDecl 0x1f6aa40 <line:254:1, col:56> driver_unregister 'void (struct device_driver *)' extern
FunctionDecl 0x1f6acb0 <line:256:1, line:257:27> driver_find 'struct device_driver *(const char *, struct bus_type *)' extern
FunctionDecl 0x1f6adf0 <line:258:1, col:34> driver_probe_done 'int (void)' extern
FunctionDecl 0x1f6af20 <line:259:1, col:39> wait_for_device_probe 'void (void)' extern
FunctionDecl 0x1f6b930 <line:282:1, line:283:46> driver_remove_file 'void (struct device_driver *, const struct driver_attribute *)' extern
FunctionDecl 0x1f6be50 <line:290:1, line:292:51> driver_find_device 'struct device *(struct device_driver *, struct device *, void *, int (*)(struct device *, void *))'
FunctionDecl 0x1f6c700 <line:315:1, col:59> subsys_interface_register 'int (struct subsys_interface *)'
FunctionDecl 0x1f6c8d0 <line:316:1, col:62> subsys_interface_unregister 'void (struct subsys_interface *)'
FunctionDecl 0x1f6cb30 <line:318:1, line:319:44> subsys_system_register 'int (struct bus_type *, const struct attribute_group **)'
FunctionDecl 0x1f6cd20 <line:320:1, line:321:45> subsys_virtual_register 'int (struct bus_type *, const struct attribute_group **)'
FunctionDecl 0x1f6e340 <line:385:1, col:49> class_unregister 'void (struct class *)' extern
FunctionDecl 0x1f6e650 <line:396:1, col:60> class_compat_register 'struct class_compat *(const char *)'
FunctionDecl 0x1f6e820 <line:397:1, col:54> class_compat_unregister 'void (struct class_compat *)'
FunctionDecl 0x1f6eb20 <line:398:1, line:399:35> class_compat_create_link 'int (struct class_compat *, struct device *, struct device *)'
FunctionDecl 0x1f6ee30 <line:400:1, line:401:36> class_compat_remove_link 'void (struct class_compat *, struct device *, struct device *)'
FunctionDecl 0x1f6f260 <line:403:1, line:406:35> class_dev_iter_init 'void (struct class_dev_iter *, struct class *, struct device *, const struct device_type *)' extern
FunctionDecl 0x1f6f470 <line:407:1, col:70> class_dev_iter_next 'struct device *(struct class_dev_iter *)' extern
FunctionDecl 0x1f6f640 <line:408:1, col:60> class_dev_iter_exit 'void (struct class_dev_iter *)' extern
FunctionDecl 0x1f6fad0 <line:410:1, line:412:47> class_for_each_device 'int (struct class *, struct device *, void *, int (*)(struct device *, void *))' extern
FunctionDecl 0x1f700b0 <line:413:1, line:415:49> class_find_device 'struct device *(struct class *, struct device *, const void *, int (*)(struct device *, const void *))' extern
FunctionDecl 0x1f70c50 <line:435:1, line:437:20> class_remove_file_ns 'void (struct class *, const struct class_attribute *, const void *)' extern
FunctionDecl 0x1f70f20 <line:464:1, line:465:34> show_class_attr_string 'ssize_t (struct class *, struct class_attribute *, char *)' extern
FunctionDecl 0x1f718c0 <line:476:1, col:64> class_interface_unregister 'void (struct class_interface *)' extern
FunctionDecl 0x1f71a90 <line:481:1, col:44> class_destroy 'void (struct class *)' extern
FunctionDecl 0x1f74290 <line:525:1, line:526:15> device_show_ulong 'ssize_t (struct device *, struct device_attribute *, char *)'
FunctionDecl 0x1f74570 <line:527:1, line:528:36> device_store_ulong 'ssize_t (struct device *, struct device_attribute *, const char *, size_t)'
FunctionDecl 0x1f747e0 <line:529:1, line:530:13> device_show_int 'ssize_t (struct device *, struct device_attribute *, char *)'
FunctionDecl 0x1f74ac0 <line:531:1, line:532:34> device_store_int 'ssize_t (struct device *, struct device_attribute *, const char *, size_t)'
FunctionDecl 0x1f74d30 <line:533:1, line:534:13> device_show_bool 'ssize_t (struct device *, struct device_attribute *, char *)'
FunctionDecl 0x1f75010 <line:535:1, line:536:34> device_store_bool 'ssize_t (struct device *, struct device_attribute *, const char *, size_t)'
FunctionDecl 0x1f752f0 <line:559:1, line:560:46> device_create_file 'int (struct device *, const struct device_attribute *)' extern
FunctionDecl 0x1f75560 <line:561:1, line:562:46> device_remove_file 'void (struct device *, const struct device_attribute *)' extern
FunctionDecl 0x1f75830 <line:565:1, line:566:40> device_remove_bin_file 'void (struct device *, const struct bin_attribute *)' extern
FunctionDecl 0x1f75bd0 <line:567:1, line:568:57> device_schedule_callback_owner 'int (struct device *, void (*)(struct device *), struct module *)' extern
FunctionDecl 0x1f76370 <line:584:1, col:71> devres_alloc 'void *(dr_release_t, size_t, gfp_t)' extern
FunctionDecl 0x1f76ad0 <line:586:1, line:589:15> devres_for_each_res 'void (struct device *, dr_release_t, dr_match_t, void *, void (*)(struct device *, void *, void *), void *)' extern
FunctionDecl 0x1f76c30 <line:590:1, col:34> devres_free 'void (void *)' extern
FunctionDecl 0x1f76e00 <line:591:1, col:53> devres_add 'void (struct device *, void *)' extern
FunctionDecl 0x1f77170 <line:592:1, line:593:39> devres_find 'void *(struct device *, dr_release_t, dr_match_t, void *)' extern
FunctionDecl 0x1f774f0 <line:594:1, line:595:38> devres_get 'void *(struct device *, void *, dr_match_t, void *)' extern
FunctionDecl 0x1f777d0 <line:596:1, line:597:41> devres_remove 'void *(struct device *, dr_release_t, dr_match_t, void *)' extern
FunctionDecl 0x1f77b50 <line:598:1, line:599:40> devres_destroy 'int (struct device *, dr_release_t, dr_match_t, void *)' extern
FunctionDecl 0x1f77e30 <line:600:1, line:601:40> devres_release 'int (struct device *, dr_release_t, dr_match_t, void *)' extern
FunctionDecl 0x1f78080 <line:606:1, col:60> devres_close_group 'void (struct device *, void *)' extern
FunctionDecl 0x1f78260 <line:607:1, col:61> devres_remove_group 'void (struct device *, void *)' extern
FunctionDecl 0x1f78440 <line:608:1, col:61> devres_release_group 'int (struct device *, void *)' extern
FunctionDecl 0x1f78730 <line:611:1, col:69> devm_kmalloc 'void *(struct device *, size_t, gfp_t)' extern
FunctionDecl 0x1f78980 <line:612:1, line:615:1> devm_kzalloc 'void *(struct device *, size_t, gfp_t)' static inline
DeclRefExpr 0x1f78a38 <col:9> 'void *(struct device *, size_t, gfp_t)' Function 0x1f78730 'devm_kmalloc' 'void *(struct device *, size_t, gfp_t)'
FunctionDecl 0x1f78f70 <../include/linux/device.h:616:1, line:622:1> devm_kmalloc_array 'void *(struct device *, size_t, size_t, gfp_t)' static inline
DeclRefExpr 0x1f79328 <col:9> 'void *(struct device *, size_t, gfp_t)' Function 0x1f78730 'devm_kmalloc' 'void *(struct device *, size_t, gfp_t)'
FunctionDecl 0x1f79730 <line:623:1, line:627:1> devm_kcalloc 'void *(struct device *, size_t, size_t, gfp_t)' static inline
DeclRefExpr 0x1f797f0 <col:9> 'void *(struct device *, size_t, size_t, gfp_t)' Function 0x1f78f70 'devm_kmalloc_array' 'void *(struct device *, size_t, size_t, gfp_t)'
FunctionDecl 0x1f79be0 <../include/linux/device.h:628:1, col:51> devm_kfree 'void (struct device *, void *)' extern
FunctionDecl 0x1f79e50 <line:630:1, col:77> devm_ioremap_resource 'void *(struct device *, struct resource *)'
FunctionDecl 0x1f7a040 <line:631:1, line:632:24> devm_request_and_ioremap 'void *(struct device *, struct resource *)'
FunctionDecl 0x1f7a3c0 <line:635:1, col:75> devm_add_action 'int (struct device *, void (*)(void *), void *)'
FunctionDecl 0x1f7a740 <line:636:1, col:79> devm_remove_action 'void (struct device *, void (*)(void *), void *)'
FunctionDecl 0x1f7f1b0 <line:790:1, line:793:1> kobj_to_dev 'struct device *(struct kobject *)' static inline
FunctionDecl 0x1f7fec0 <line:105:1, line:108:1> device_set_wakeup_capable 'void (struct device *, bool)' static inline
FunctionDecl 0x1f801e0 <line:110:1, line:113:1> device_can_wakeup 'bool (struct device *)' static inline
FunctionDecl 0x1f805d0 <line:115:1, line:116:26> wakeup_source_prepare 'void (struct wakeup_source *, const char *)' static inline
FunctionDecl 0x1f807d0 <line:118:1, line:121:1> wakeup_source_create 'struct wakeup_source *(const char *)' static inline
FunctionDecl 0x1f80a70 <../include/linux/pm_wakeup.h:123:1, col:66> wakeup_source_drop 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f80be0 <line:125:1, col:69> wakeup_source_destroy 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f80d50 <line:127:1, col:65> wakeup_source_add 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f80ec0 <line:129:1, col:68> wakeup_source_remove 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f81030 <line:131:1, line:134:1> wakeup_source_register 'struct wakeup_source *(const char *)' static inline
FunctionDecl 0x1f81250 <../include/linux/pm_wakeup.h:136:1, col:72> wakeup_source_unregister 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f813c0 <line:138:1, line:142:1> device_wakeup_enable 'int (struct device *)' static inline
FunctionDecl 0x1f81680 <line:144:1, line:148:1> device_wakeup_disable 'int (struct device *)' static inline
FunctionDecl 0x1f81a40 <line:150:1, line:154:1> device_set_wakeup_enable 'int (struct device *, bool)' static inline
FunctionDecl 0x1f81da0 <line:156:1, line:161:1> device_init_wakeup 'int (struct device *, bool)' static inline
DeclRefExpr 0x1f81e50 <col:2> 'void (struct device *, bool)' Function 0x1f7fec0 'device_set_wakeup_capable' 'void (struct device *, bool)'
DeclRefExpr 0x1f81fa8 <col:2> 'int (struct device *, bool)' Function 0x1f81a40 'device_set_wakeup_enable' 'int (struct device *, bool)'
FunctionDecl 0x1f82210 <line:163:1, line:166:1> device_may_wakeup 'bool (struct device *)' static inline
FunctionDecl 0x1f82580 <line:168:1, col:63> __pm_stay_awake 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f826f0 <line:170:1, col:55> pm_stay_awake 'void (struct device *)' static inline
FunctionDecl 0x1f82860 <line:172:1, col:58> __pm_relax 'void (struct wakeup_source *)' static inline
FunctionDecl 0x1f829d0 <line:174:1, col:50> pm_relax 'void (struct device *)' static inline
FunctionDecl 0x1f82c40 <line:176:1, col:84> __pm_wakeup_event 'void (struct wakeup_source *, unsigned int)' static inline
FunctionDecl 0x1f82eb0 <line:178:1, col:76> pm_wakeup_event 'void (struct device *, unsigned int)' static inline
FunctionDecl 0x1f830a0 <line:182:1, line:187:1> wakeup_source_init 'void (struct wakeup_source *, const char *)' static inline
DeclRefExpr 0x1f83150 <col:2> 'void (struct wakeup_source *, const char *)' Function 0x1f805d0 'wakeup_source_prepare' 'void (struct wakeup_source *, const char *)'
DeclRefExpr 0x1f832a8 <col:2> 'void (struct wakeup_source *)' Function 0x1f80d50 'wakeup_source_add' 'void (struct wakeup_source *)'
FunctionDecl 0x1f83490 <line:189:1, line:193:1> wakeup_source_trash 'void (struct wakeup_source *)' static inline
DeclRefExpr 0x1f83538 <col:2> 'void (struct wakeup_source *)' Function 0x1f80ec0 'wakeup_source_remove' 'void (struct wakeup_source *)'
DeclRefExpr 0x1f835e8 <col:2> 'void (struct wakeup_source *)' Function 0x1f80a70 'wakeup_source_drop' 'void (struct wakeup_source *)'
FunctionDecl 0x1f837f0 <../include/linux/device.h:798:1, line:805:1> dev_name 'const char *(const struct device *)' static inline
DeclRefExpr 0x1f839f8 <col:9> 'const char *(const struct kobject *)' Function 0x1f43d00 'kobject_name' 'const char *(const struct kobject *)'
FunctionDecl 0x1f83bc0 prev 0x1f4b0f0 <line:807:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1f83e10 <line:808:1, col:59> dev_set_name 'int (struct device *, const char *, ...)'
FunctionDecl 0x1f83f70 <line:820:1, line:823:1> dev_to_node 'int (struct device *)' static inline
FunctionDecl 0x1f84240 <line:824:1, line:826:1> set_dev_node 'void (struct device *, int)' static inline
FunctionDecl 0x1f84450 <line:829:1, line:832:1> dev_to_psd 'struct pm_subsys_data *(struct device *)' static inline
FunctionDecl 0x1f84820 <../include/linux/device.h:834:1, line:837:1> dev_get_uevent_suppress 'unsigned int (const struct device *)' static inline
FunctionDecl 0x1f84af0 <line:839:1, line:842:1> dev_set_uevent_suppress 'void (struct device *, int)' static inline
FunctionDecl 0x1f84d90 <line:844:1, line:847:1> device_is_registered 'int (struct device *)' static inline
FunctionDecl 0x1f84ff0 <line:849:1, line:853:1> device_enable_async_suspend 'void (struct device *)' static inline
FunctionDecl 0x1f85370 <line:855:1, line:859:1> device_disable_async_suspend 'void (struct device *)' static inline
FunctionDecl 0x1f856f0 <line:861:1, line:864:1> device_async_suspend_enabled 'bool (struct device *)' static inline
FunctionDecl 0x1f85a10 <line:866:1, line:869:1> pm_suspend_ignore_children 'void (struct device *, bool)' static inline
FunctionDecl 0x1f85d10 <line:871:1, line:876:1> dev_pm_syscore_device 'void (struct device *, bool)' static inline
FunctionDecl 0x1f85e80 <line:878:1, line:881:1> device_lock 'void (struct device *)' static inline
DeclRefExpr 0x1f85f28 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
FunctionDecl 0x1f860f0 <line:883:1, line:886:1> device_trylock 'int (struct device *)' static inline
DeclRefExpr 0x1f86198 <col:9> 'int (struct mutex *)' Function 0x1a403f0 'mutex_trylock' 'int (struct mutex *)'
FunctionDecl 0x1f863e0 <line:888:1, line:891:1> device_unlock 'void (struct device *)' static inline
DeclRefExpr 0x1f86488 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
FunctionDecl 0x1f887e0 <line:893:1, col:22> driver_init 'void (void)'
FunctionDecl 0x1f88990 <line:899:1, col:49> device_unregister 'void (struct device *)' extern
FunctionDecl 0x1f88ae0 <line:900:1, col:49> device_initialize 'void (struct device *)' extern
FunctionDecl 0x1f88ca0 <line:902:1, col:42> device_del 'void (struct device *)' extern
FunctionDecl 0x1f890a0 <line:903:1, line:904:49> device_for_each_child 'int (struct device *, void *, int (*)(struct device *, void *))' extern
FunctionDecl 0x1f894d0 <line:905:1, line:906:49> device_find_child 'struct device *(struct device *, void *, int (*)(struct device *, void *))' extern
FunctionDecl 0x1f89730 <line:907:1, col:66> device_rename 'int (struct device *, const char *)' extern
FunctionDecl 0x1f89a70 <line:908:1, line:909:34> device_move 'int (struct device *, struct device *, enum dpm_order)' extern
FunctionDecl 0x1f89e70 <line:910:1, line:912:27> device_get_devnode 'const char *(struct device *, umode_t *, kuid_t *, kgid_t *, const char **)' extern
FunctionDecl 0x1f8a060 <line:913:1, col:54> dev_get_drvdata 'void *(const struct device *)' extern
FunctionDecl 0x1f8a230 <line:914:1, col:58> dev_set_drvdata 'int (struct device *, void *)' extern
FunctionDecl 0x1f8a390 <line:916:1, line:919:1> device_supports_offline 'bool (struct device *)' static inline
FunctionDecl 0x1f8a7a0 <line:921:1, col:37> lock_device_hotplug 'void (void)' extern
FunctionDecl 0x1f8a8d0 <line:922:1, col:39> unlock_device_hotplug 'void (void)' extern
FunctionDecl 0x1f8aa00 <line:923:1, col:42> lock_device_hotplug_sysfs 'int (void)' extern
FunctionDecl 0x1f8ab50 <line:924:1, col:45> device_offline 'int (struct device *)' extern
FunctionDecl 0x1f8aca0 <line:925:1, col:44> device_online 'int (struct device *)' extern
FunctionDecl 0x1f8af10 <line:929:1, line:930:31> __root_device_register 'struct device *(const char *, struct module *)' extern
FunctionDecl 0x1f8b070 <line:939:1, col:55> root_device_unregister 'void (struct device *)' extern
FunctionDecl 0x1f8b1c0 <line:941:1, line:944:1> dev_get_platdata 'void *(const struct device *)' static inline
FunctionDecl 0x1f8b440 <line:951:1, col:53> device_release_driver 'void (struct device *)' extern
FunctionDecl 0x1f8ba30 <line:959:1, line:964:21> device_create_vargs 'struct device *(struct class *, struct device *, dev_t, void *, const char *, __va_list_tag *)' extern
FunctionDecl 0x1f8bb20 prev 0x1f83bc0 <line:965:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1f8bf40 <line:966:1, line:968:29> device_create 'struct device *(struct class *, struct device *, dev_t, void *, const char *, ...)'
FunctionDecl 0x1f8c030 prev 0x1f8bb20 <line:969:1, col:21> __printf 'int ()' extern
FunctionDecl 0x1f8c4e0 <line:970:1, line:973:29> device_create_with_groups 'struct device *(struct class *, struct device *, dev_t, void *, const struct attribute_group **, const char *, ...)'
FunctionDecl 0x1f8c760 <line:974:1, col:57> device_destroy 'void (struct class *, dev_t)' extern
FunctionDecl 0x1f8cb80 <line:991:1, col:52> get_device 'struct device *(struct device *)' extern
FunctionDecl 0x1f8ccd0 <line:992:1, col:42> put_device 'void (struct device *)' extern
FunctionDecl 0x1f8ce20 <line:999:1, col:72> devtmpfs_create_node 'int (struct device *)' static inline
FunctionDecl 0x1f8cfd0 <line:1000:1, col:72> devtmpfs_delete_node 'int (struct device *)' static inline
FunctionDecl 0x1f8d170 <line:1001:1, col:70> devtmpfs_mount 'int (const char *)' static inline
FunctionDecl 0x1f8d310 <line:1005:1, col:33> device_shutdown 'void (void)' extern
FunctionDecl 0x1f8d460 <line:1008:1, col:62> dev_driver_string 'const char *(const struct device *)' extern
FunctionDecl 0x1f8d530 prev 0x1f8c030 <line:1039:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8d880 <line:1040:1, line:1042:13> dev_vprintk_emit 'int (int, const struct device *, const char *, __va_list_tag *)'
FunctionDecl 0x1f8d9c0 prev 0x1f8d530 <line:1043:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8dc90 <line:1044:1, line:1045:13> dev_printk_emit 'int (int, const struct device *, const char *, ...)'
FunctionDecl 0x1f8e080 <line:1047:1, line:1049:13> __dev_printk 'int (const char *, const struct device *, struct va_format *)' static inline
FunctionDecl 0x1f8e1c0 prev 0x1f8d9c0 <line:1050:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8e490 <line:1051:1, line:1053:13> dev_printk 'int (const char *, const struct device *, const char *, ...)'
FunctionDecl 0x1f8e5d0 prev 0x1f8e1c0 <line:1055:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8e820 <line:1056:1, line:1057:13> dev_emerg 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f8e950 prev 0x1f8e5d0 <line:1058:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8eb20 <line:1059:1, line:1060:13> dev_crit 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f8ec50 prev 0x1f8e950 <line:1061:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8ee20 <line:1062:1, line:1063:13> dev_alert 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f8ef50 prev 0x1f8ec50 <line:1064:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8f120 <line:1065:1, line:1066:13> dev_err 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f8f250 prev 0x1f8ef50 <line:1067:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8f420 <line:1068:1, line:1069:13> dev_warn 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f8f550 prev 0x1f8f250 <line:1070:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8f720 <line:1071:1, line:1072:13> dev_notice 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f8f850 prev 0x1f8f550 <line:1073:1, col:28> __printf 'int ()' static inline
FunctionDecl 0x1f8fa20 <line:1074:1, line:1075:13> _dev_info 'int (const struct device *, const char *, ...)'
FunctionDecl 0x1f90120 <line:33:1, col:46> unregister_node 'void (struct node *)' extern
FunctionDecl 0x1f90260 <line:49:1, line:52:1> register_one_node 'int (int)' static inline
FunctionDecl 0x1f90400 <line:53:1, line:56:1> unregister_one_node 'int (int)' static inline
FunctionDecl 0x1f90620 <line:57:1, line:60:1> register_cpu_under_node 'int (unsigned int, unsigned int)' static inline
FunctionDecl 0x1f995c0 <line:61:1, line:64:1> unregister_cpu_under_node 'int (unsigned int, unsigned int)' static inline
FunctionDecl 0x1f99880 <line:65:1, line:69:1> register_mem_sect_under_node 'int (struct memory_block *, int)' static inline
FunctionDecl 0x1f99b40 <line:70:1, line:74:1> unregister_mem_sect_under_nodes 'int (struct memory_block *, unsigned long)' static inline
FunctionDecl 0x1f99e00 <line:76:1, line:79:1> register_hugetlbfs_with_node 'void (node_registration_func_t, node_registration_func_t)' static inline
FunctionDecl 0x1f9a3d0 <line:29:1, col:49> register_cpu 'int (struct cpu *, int)' extern
FunctionDecl 0x1f9a5b0 <line:30:1, col:50> get_cpu_device 'struct device *(unsigned int)' extern
FunctionDecl 0x1f9a730 <line:31:1, col:45> cpu_is_hotpluggable 'bool (unsigned int)' extern
FunctionDecl 0x1f9a970 <line:32:1, col:56> arch_match_cpu_phys_id 'bool (int, u64)' extern
FunctionDecl 0x1f9ac60 <line:33:1, line:34:41> arch_find_n_match_cpu_physical_id 'bool (struct device_node *, int, unsigned int *)' extern
FunctionDecl 0x1f9ae40 <line:36:1, col:58> cpu_add_dev_attr 'int (struct device_attribute *)' extern
FunctionDecl 0x1f9b010 <line:37:1, col:62> cpu_remove_dev_attr 'void (struct device_attribute *)' extern
FunctionDecl 0x1f9b240 <line:39:1, col:64> cpu_add_dev_attr_group 'int (struct attribute_group *)' extern
FunctionDecl 0x1f9b410 <line:40:1, col:68> cpu_remove_dev_attr_group 'void (struct attribute_group *)' extern
FunctionDecl 0x1f9c0b0 <line:156:1, line:159:1> register_cpu_notifier 'int (struct notifier_block *)' static inline
FunctionDecl 0x1f9c2e0 <line:161:1, line:163:1> unregister_cpu_notifier 'void (struct notifier_block *)' static inline
FunctionDecl 0x1f9c430 <line:165:1, line:167:1> cpu_maps_update_begin 'void (void)' static inline
FunctionDecl 0x1f9c580 <line:169:1, line:171:1> cpu_maps_update_done 'void (void)' static inline
FunctionDecl 0x1f9c750 <line:193:1, col:45> cpu_hotplug_begin 'void (void)' static inline
FunctionDecl 0x1f9c8a0 <line:194:1, col:44> cpu_hotplug_done 'void (void)' static inline
FunctionDecl 0x1f9c9f0 <line:209:1, col:58> disable_nonboot_cpus 'int (void)' static inline
FunctionDecl 0x1f9cb80 <line:210:1, col:47> enable_nonboot_cpus 'void (void)' static inline
FunctionDecl 0x1f9cee0 <line:218:1, col:46> cpu_startup_entry 'void (enum cpuhp_state)'
FunctionDecl 0x1f9d020 prev 0x1aef650 <line:219:1, col:19> cpu_idle 'void (void)'
FunctionDecl 0x1f9d150 <line:221:1, col:36> cpu_idle_poll_ctrl 'void (bool)'
FunctionDecl 0x1f9d290 <line:223:1, col:24> arch_cpu_idle 'void (void)'
FunctionDecl 0x1f9d3c0 <line:224:1, col:32> arch_cpu_idle_prepare 'void (void)'
FunctionDecl 0x1f9d4f0 <line:225:1, col:30> arch_cpu_idle_enter 'void (void)'
FunctionDecl 0x1f9d620 <line:226:1, col:29> arch_cpu_idle_exit 'void (void)'
FunctionDecl 0x1f9d750 <line:227:1, col:29> arch_cpu_idle_dead 'void (void)'
FunctionDecl 0x1f9de40 <line:26:1, line:31:1> init_irq_work 'void (struct irq_work *, void (*)(struct irq_work *))' static inline
FunctionDecl 0x1f9e170 <line:33:1, col:42> irq_work_queue 'void (struct irq_work *)'
FunctionDecl 0x1f9e2b0 <line:34:1, col:23> irq_work_run 'void (void)'
FunctionDecl 0x1f9e400 <line:35:1, col:41> irq_work_sync 'void (struct irq_work *)'
FunctionDecl 0x1f9e540 <line:40:1, col:61> irq_work_needs_cpu 'bool (void)' static inline
FunctionDecl 0x1f9e960 <line:24:1, line:28:1> static_key_slow_dec_deferred 'void (struct static_key_deferred *)' static inline
DeclRefExpr 0x1f9ea08 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
DeclRefExpr 0x1f9ebf8 <col:2> 'void (struct static_key *)' Function 0x1cbde20 'static_key_slow_dec' 'void (struct static_key *)'
FunctionDecl 0x1f9ef20 <line:29:1, line:34:1> jump_label_rate_limit 'void (struct static_key_deferred *, unsigned long)' static inline
DeclRefExpr 0x1f9efd0 <col:32> 'int ()' Function 0x1cbd970 'WARN' 'int ()'
FunctionDecl 0x1f9f390 <../include/linux/perf_regs.h:10:1, line:13:1> perf_reg_value 'u64 (struct pt_regs *, int)' static inline
FunctionDecl 0x1f9f550 <line:15:1, line:18:1> perf_reg_validate 'int (u64)' static inline
FunctionDecl 0x1f9f7f0 <line:20:1, line:23:1> perf_reg_abi 'u64 (struct task_struct *)' static inline
FunctionDecl 0x1fa8df0 <line:773:1, line:775:35> perf_event_task_sched_in 'void (struct task_struct *, struct task_struct *)' static inline
FunctionDecl 0x1fa8ff0 <line:776:1, line:778:36> perf_event_task_sched_out 'void (struct task_struct *, struct task_struct *)' static inline
FunctionDecl 0x1fa9160 <line:779:1, col:79> perf_event_init_task 'int (struct task_struct *)' static inline
FunctionDecl 0x1fa9310 <line:780:1, col:70> perf_event_exit_task 'void (struct task_struct *)' static inline
FunctionDecl 0x1fa9480 <line:781:1, col:69> perf_event_free_task 'void (struct task_struct *)' static inline
FunctionDecl 0x1fa95f0 <line:782:1, col:71> perf_event_delayed_put 'void (struct task_struct *)' static inline
FunctionDecl 0x1fa9740 <line:783:1, col:54> perf_event_print_debug 'void (void)' static inline
FunctionDecl 0x1fa9890 <line:784:1, col:70> perf_event_task_disable 'int (void)' static inline
FunctionDecl 0x1fa9a40 <../include/linux/perf_event.h:785:1, col:69> perf_event_task_enable 'int (void)' static inline
FunctionDecl 0x1fa9c90 <../include/linux/perf_event.h:786:1, line:789:1> perf_event_refresh 'int (struct perf_event *, int)' static inline
FunctionDecl 0x1faa070 <../include/linux/perf_event.h:791:1, line:792:71> perf_sw_event 'void (u32, u64, struct pt_regs *, u64)' static inline
FunctionDecl 0x1faa2f0 <line:793:1, line:794:57> perf_bp_event 'void (struct perf_event *, void *)' static inline
FunctionDecl 0x1faa570 <line:796:1, line:797:62> perf_register_guest_info_callbacks 'int (struct perf_guest_info_callbacks *)' static inline
FunctionDecl 0x1faa720 <line:798:1, line:799:62> perf_unregister_guest_info_callbacks 'int (struct perf_guest_info_callbacks *)' static inline
FunctionDecl 0x1faa950 <line:801:1, col:67> perf_event_mmap 'void (struct vm_area_struct *)' static inline
FunctionDecl 0x1faaac0 <line:802:1, col:64> perf_event_comm 'void (struct task_struct *)' static inline
FunctionDecl 0x1faac30 <line:803:1, col:64> perf_event_fork 'void (struct task_struct *)' static inline
FunctionDecl 0x1faad80 <line:804:1, col:47> perf_event_init 'void (void)' static inline
FunctionDecl 0x1faaed0 <line:805:1, col:75> perf_swevent_get_recursion_context 'int (void)' static inline
FunctionDecl 0x1fab080 <line:806:1, col:68> perf_swevent_put_recursion_context 'void (int)' static inline
FunctionDecl 0x1fab270 <line:807:1, col:81> perf_swevent_set_period 'u64 (struct perf_event *)' static inline
FunctionDecl 0x1fab440 <line:808:1, col:67> perf_event_enable 'void (struct perf_event *)' static inline
FunctionDecl 0x1fab5b0 <line:809:1, col:68> perf_event_disable 'void (struct perf_event *)' static inline
FunctionDecl 0x1fab700 <line:810:1, col:67> __perf_event_disable 'int (void *)' static inline
FunctionDecl 0x1fab8c0 <line:811:1, col:52> perf_event_task_tick 'void (void)' static inline
FunctionDecl 0x1faba10 <line:817:1, col:68> perf_event_can_stop_tick 'bool (void)' static inline
FunctionDecl 0x1fabbc0 <line:823:1, col:55> perf_restore_debug_store 'void (void)' static inline
FunctionDecl 0x1fac6c0 <line:25:1, line:27:50> ftrace_print_flags_seq 'const char *(struct trace_seq *, const char *, unsigned long, const struct trace_print_flags *)'
FunctionDecl 0x1fac9d0 <line:29:1, line:30:54> ftrace_print_symbols_seq 'const char *(struct trace_seq *, unsigned long, const struct trace_print_flags *)'
FunctionDecl 0x1facd60 <line:33:1, line:36:23> ftrace_print_symbols_seq_u64 'const char *(struct trace_seq *, unsigned long long, const struct trace_print_flags_u64 *)'
FunctionDecl 0x1fad050 <line:39:1, line:40:39> ftrace_print_hex_seq 'const char *(struct trace_seq *, const unsigned char *, int)'
FunctionDecl 0x1fad520 <line:45:1, line:46:32> ftrace_raw_output_prep 'int (struct trace_iterator *, struct trace_event *)'
FunctionDecl 0x1fb2a60 <line:125:1, col:59> register_ftrace_event 'int (struct trace_event *)' extern
FunctionDecl 0x1fb2bb0 <line:126:1, col:61> unregister_ftrace_event 'int (struct trace_event *)' extern
FunctionDecl 0x1fb30f0 <line:136:1, line:138:13> tracing_generic_entry_update 'void (struct trace_entry *, unsigned long, int)'
FunctionDecl 0x1fb3730 <line:141:1, line:145:32> trace_event_buffer_lock_reserve 'struct ring_buffer_event *(struct ring_buffer **, struct ftrace_event_file *, int, unsigned long, unsigned long, int)'
FunctionDecl 0x1fb3b70 <line:146:1, line:149:34> trace_current_buffer_lock_reserve 'struct ring_buffer_event *(struct ring_buffer **, int, unsigned long, unsigned long, int)'
FunctionDecl 0x1fb3f00 <line:150:1, line:152:33> trace_current_buffer_unlock_commit 'void (struct ring_buffer *, struct ring_buffer_event *, unsigned long, int)'
FunctionDecl 0x1fb41f0 <line:153:1, line:155:32> trace_buffer_unlock_commit 'void (struct ring_buffer *, struct ring_buffer_event *, unsigned long, int)'
FunctionDecl 0x1fb4620 <line:156:1, line:159:30> trace_buffer_unlock_commit_regs 'void (struct ring_buffer *, struct ring_buffer_event *, unsigned long, int, struct pt_regs *)'
FunctionDecl 0x1fb4820 <line:160:1, line:161:38> trace_current_buffer_discard_commit 'void (struct ring_buffer *, struct ring_buffer_event *)'
FunctionDecl 0x1fb4980 <line:163:1, col:52> tracing_record_cmdline 'void (struct task_struct *)'
FunctionDecl 0x1fb5960 <line:196:1, line:197:39> ftrace_event_reg 'int (struct ftrace_event_call *, enum trace_reg, void *)' extern
FunctionDecl 0x1fb7780 <line:340:1, col:57> destroy_preds 'void (struct ftrace_event_file *)' extern
FunctionDecl 0x1fb7950 <line:341:1, col:62> destroy_call_preds 'void (struct ftrace_event_call *)' extern
FunctionDecl 0x1fb7ba0 <line:342:1, col:69> filter_match_preds 'int (struct event_filter *, void *)' extern
FunctionDecl 0x1fb7f30 <line:344:1, line:346:36> filter_check_discard 'int (struct ftrace_event_file *, void *, struct ring_buffer *, struct ring_buffer_event *)' extern
FunctionDecl 0x1fb82d0 <line:347:1, line:349:41> call_filter_check_discard 'int (struct ftrace_event_call *, void *, struct ring_buffer *, struct ring_buffer_event *)' extern
FunctionDecl 0x1fb87f0 <line:363:1, col:63> trace_event_raw_init 'int (struct ftrace_event_call *)' extern
FunctionDecl 0x1fb8cf0 <line:364:1, line:366:40> trace_define_field 'int (struct ftrace_event_call *, const char *, const char *, int, int, int, int)' extern
FunctionDecl 0x1fb8e70 <line:367:1, col:63> trace_add_event_call 'int (struct ftrace_event_call *)' extern
FunctionDecl 0x1fb8fc0 <line:368:1, col:66> trace_remove_event_call 'int (struct ftrace_event_call *)' extern
FunctionDecl 0x1fb9240 <line:372:1, col:71> trace_set_clr_event 'int (const char *, const char *, int)'
FunctionDecl 0x1fc3fc0 <../include/linux/syscalls.h:200:12, col:45> sys_time 'long (time_t *)'
FunctionDecl 0x1fc4100 <line:201:12, col:46> sys_stime 'long (time_t *)'
FunctionDecl 0x1fc43c0 <line:202:12, line:203:31> sys_gettimeofday 'long (struct timeval *, struct timezone *)'
FunctionDecl 0x1fc45b0 <line:204:12, line:205:31> sys_settimeofday 'long (struct timeval *, struct timezone *)'
FunctionDecl 0x1fc4790 <line:206:12, col:56> sys_adjtimex 'long (struct timex *)'
FunctionDecl 0x1fc4960 <line:208:12, col:50> sys_times 'long (struct tms *)'
FunctionDecl 0x1fc4aa0 <line:210:12, col:32> sys_gettid 'long (void)'
FunctionDecl 0x1fc4d00 <line:211:12, col:89> sys_nanosleep 'long (struct timespec *, struct timespec *)'
FunctionDecl 0x1fc4e80 <line:212:12, col:47> sys_alarm 'long (unsigned int)'
FunctionDecl 0x1fc4fc0 <line:213:12, col:32> sys_getpid 'long (void)'
FunctionDecl 0x1fc50f0 <line:214:12, col:33> sys_getppid 'long (void)'
FunctionDecl 0x1fc5220 <line:215:12, col:32> sys_getuid 'long (void)'
FunctionDecl 0x1fc5350 <line:216:12, col:33> sys_geteuid 'long (void)'
FunctionDecl 0x1fc5480 <line:217:12, col:32> sys_getgid 'long (void)'
FunctionDecl 0x1fc55b0 <line:218:12, col:33> sys_getegid 'long (void)'
FunctionDecl 0x1fc58a0 <line:219:12, col:89> sys_getresuid 'long (uid_t *, uid_t *, uid_t *)'
FunctionDecl 0x1fc5b60 <line:220:12, col:89> sys_getresgid 'long (gid_t *, gid_t *, gid_t *)'
FunctionDecl 0x1fc5cf0 <line:221:12, col:38> sys_getpgid 'long (pid_t)'
FunctionDecl 0x1fc5e30 <line:222:12, col:33> sys_getpgrp 'long (void)'
FunctionDecl 0x1fc5f60 <line:223:12, col:37> sys_getsid 'long (pid_t)'
FunctionDecl 0x1fc61a0 <line:224:12, col:70> sys_getgroups 'long (int, gid_t *)'
FunctionDecl 0x1fc63e0 <line:226:12, col:52> sys_setregid 'long (gid_t, gid_t)'
FunctionDecl 0x1fc6560 <line:227:12, col:37> sys_setgid 'long (gid_t)'
FunctionDecl 0x1fc6760 <line:228:12, col:52> sys_setreuid 'long (uid_t, uid_t)'
FunctionDecl 0x1fc68e0 <line:229:12, col:37> sys_setuid 'long (uid_t)'
FunctionDecl 0x1fc6bb0 <line:230:12, col:65> sys_setresuid 'long (uid_t, uid_t, uid_t)'
FunctionDecl 0x1fc6e40 <line:231:12, col:65> sys_setresgid 'long (gid_t, gid_t, gid_t)'
FunctionDecl 0x1fc6f90 <line:232:12, col:39> sys_setfsuid 'long (uid_t)'
FunctionDecl 0x1fc70d0 <line:233:12, col:39> sys_setfsgid 'long (gid_t)'
FunctionDecl 0x1fc7310 <line:234:12, col:50> sys_setpgid 'long (pid_t, pid_t)'
FunctionDecl 0x1fc7450 <line:235:12, col:32> sys_setsid 'long (void)'
FunctionDecl 0x1fc7600 <line:236:12, col:70> sys_setgroups 'long (int, gid_t *)'
FunctionDecl 0x1fc7780 <line:238:12, col:49> sys_acct 'long (const char *)'
FunctionDecl 0x1fc7a00 <line:239:12, line:240:28> sys_capget 'long (cap_user_header_t, cap_user_data_t)'
FunctionDecl 0x1fc7c00 <line:241:12, line:242:31> sys_capset 'long (cap_user_header_t, const cap_user_data_t)'
FunctionDecl 0x1fc7d40 <line:243:12, col:57> sys_personality 'long (unsigned int)'
FunctionDecl 0x1fc7ec0 <line:245:12, col:56> sys_sigpending 'long (int *)'
FunctionDecl 0x1fc8140 <line:246:12, line:247:30> sys_sigprocmask 'long (int, int *, int *)'
FunctionDecl 0x1fc8410 <line:248:12, line:249:36> sys_sigaltstack 'long (const struct sigaltstack *, struct sigaltstack *)'
FunctionDecl 0x1fc8660 <line:251:12, col:72> sys_getitimer 'long (int, struct itimerval *)'
FunctionDecl 0x1fc8950 <line:252:12, line:254:36> sys_setitimer 'long (int, struct itimerval *, struct itimerval *)'
FunctionDecl 0x1fc8cf0 <line:255:12, line:257:39> sys_timer_create 'long (clockid_t, struct sigevent *, timer_t *)'
FunctionDecl 0x1fc8fe0 <line:258:12, line:259:38> sys_timer_gettime 'long (timer_t, struct itimerspec *)'
FunctionDecl 0x1fc9160 <line:260:12, col:54> sys_timer_getoverrun 'long (timer_t)'
FunctionDecl 0x1fc9530 <line:261:12, line:263:42> sys_timer_settime 'long (timer_t, int, const struct itimerspec *, struct itimerspec *)'
FunctionDecl 0x1fc9680 <line:264:12, col:50> sys_timer_delete 'long (timer_t)'
FunctionDecl 0x1fc98d0 <line:265:12, line:266:37> sys_clock_settime 'long (clockid_t, const struct timespec *)'
FunctionDecl 0x1fc9b20 <line:267:12, line:268:31> sys_clock_gettime 'long (clockid_t, struct timespec *)'
FunctionDecl 0x1fc9d70 <line:269:12, line:270:28> sys_clock_adjtime 'long (clockid_t, struct timex *)'
FunctionDecl 0x1fc9f40 <line:271:12, line:272:31> sys_clock_getres 'long (clockid_t, struct timespec *)'
FunctionDecl 0x1fca2b0 <line:273:12, line:275:33> sys_clock_nanosleep 'long (clockid_t, int, const struct timespec *, struct timespec *)'
FunctionDecl 0x1fca400 <line:277:12, col:39> sys_nice 'long (int)'
FunctionDecl 0x1fca740 <line:278:12, line:279:38> sys_sched_setscheduler 'long (pid_t, int, struct sched_param *)'
FunctionDecl 0x1fca9a0 <line:280:12, line:281:38> sys_sched_setparam 'long (pid_t, struct sched_param *)'
FunctionDecl 0x1fcaae0 <line:282:12, col:49> sys_sched_getscheduler 'long (pid_t)'
FunctionDecl 0x1fcacb0 <line:283:12, line:284:38> sys_sched_getparam 'long (pid_t, struct sched_param *)'
FunctionDecl 0x1fcaf80 <line:285:12, line:286:41> sys_sched_setaffinity 'long (pid_t, unsigned int, unsigned long *)'
FunctionDecl 0x1fcb1c0 <line:287:12, line:288:41> sys_sched_getaffinity 'long (pid_t, unsigned int, unsigned long *)'
FunctionDecl 0x1fcb310 <line:289:12, col:37> sys_sched_yield 'long (void)'
FunctionDecl 0x1fcb440 <line:290:12, col:54> sys_sched_get_priority_max 'long (int)'
FunctionDecl 0x1fcb580 <line:291:12, col:54> sys_sched_get_priority_min 'long (int)'
FunctionDecl 0x1fcb790 <line:292:12, line:293:38> sys_sched_rr_get_interval 'long (pid_t, struct timespec *)'
FunctionDecl 0x1fcba10 <line:294:12, col:64> sys_setpriority 'long (int, int, int)'
FunctionDecl 0x1fcbbe0 <line:295:12, col:51> sys_getpriority 'long (int, int)'
FunctionDecl 0x1fcbda0 <line:297:12, col:38> sys_shutdown 'long (int, int)'
FunctionDecl 0x1fcc0c0 <line:298:12, line:299:21> sys_reboot 'long (int, int, unsigned int, void *)'
FunctionDecl 0x1fcc210 <line:300:12, col:41> sys_restart_syscall 'long (void)'
FunctionDecl 0x1fcc5f0 <line:301:12, line:303:24> sys_kexec_load 'long (unsigned long, unsigned long, struct kexec_segment *, unsigned long)'
FunctionDecl 0x1fcc740 <line:305:12, col:40> sys_exit 'long (int)'
FunctionDecl 0x1fcc880 <line:306:12, col:46> sys_exit_group 'long (int)'
FunctionDecl 0x1fccbe0 <line:307:12, line:308:42> sys_wait4 'long (pid_t, int *, int, struct rusage *)'
FunctionDecl 0x1fccff0 <line:309:12, line:311:44> sys_waitid 'long (int, pid_t, struct siginfo *, int, struct rusage *)'
FunctionDecl 0x1fcd2e0 <line:312:12, col:74> sys_waitpid 'long (pid_t, int *, int)'
FunctionDecl 0x1fcd430 <line:313:12, col:55> sys_set_tid_address 'long (int *)'
FunctionDecl 0x1fcd8a0 <line:314:12, line:316:12> sys_futex 'long (u32 *, int, u32, struct timespec *, u32 *, u32)'
FunctionDecl 0x1fcdb40 <line:318:12, line:319:29> sys_init_module 'long (void *, unsigned long, const char *)'
FunctionDecl 0x1fcdd50 <line:320:12, line:321:23> sys_delete_module 'long (const char *, unsigned int)'
FunctionDecl 0x1fcdf90 <line:331:12, col:78> sys_rt_sigsuspend 'long (sigset_t *, size_t)'
FunctionDecl 0x1fce3c0 <line:339:12, line:342:12> sys_rt_sigaction 'long (int, const struct sigaction *, struct sigaction *, size_t)'
FunctionDecl 0x1fce720 <line:344:12, line:345:45> sys_rt_sigprocmask 'long (int, sigset_t *, sigset_t *, size_t)'
FunctionDecl 0x1fce8f0 <line:346:12, col:74> sys_rt_sigpending 'long (sigset_t *, size_t)'
FunctionDecl 0x1fcec50 <line:347:12, line:350:22> sys_rt_sigtimedwait 'long (const sigset_t *, siginfo_t *, const struct timespec *, size_t)'
FunctionDecl 0x1fcefb0 <line:351:12, line:352:26> sys_rt_tgsigqueueinfo 'long (pid_t, pid_t, int, siginfo_t *)'
FunctionDecl 0x1fcf180 <line:353:12, col:42> sys_kill 'long (int, int)'
FunctionDecl 0x1fcf3b0 <line:354:12, col:54> sys_tgkill 'long (int, int, int)'
FunctionDecl 0x1fcf580 <line:355:12, col:43> sys_tkill 'long (int, int)'
FunctionDecl 0x1fcf850 <line:356:12, col:78> sys_rt_sigqueueinfo 'long (int, int, siginfo_t *)'
FunctionDecl 0x1fcf9a0 <line:357:12, col:34> sys_sgetmask 'long (void)'
FunctionDecl 0x1fcfad0 <line:358:12, col:41> sys_ssetmask 'long (int)'
FunctionDecl 0x1fcfd10 <line:359:12, col:59> sys_signal 'long (int, __sighandler_t)'
FunctionDecl 0x1fcfe50 <line:360:12, col:31> sys_pause 'long (void)'
FunctionDecl 0x1fcff80 <line:362:12, col:30> sys_sync 'long (void)'
FunctionDecl 0x1fd00b0 <line:363:12, col:42> sys_fsync 'long (unsigned int)'
FunctionDecl 0x1fd01f0 <line:364:12, col:46> sys_fdatasync 'long (unsigned int)'
FunctionDecl 0x1fd03f0 <line:365:12, col:48> sys_bdflush 'long (int, long)'
FunctionDecl 0x1fd0770 <line:366:12, line:368:22> sys_mount 'long (char *, char *, char *, unsigned long, void *)'
FunctionDecl 0x1fd0990 <line:369:12, col:56> sys_umount 'long (char *, int)'
FunctionDecl 0x1fd0b10 <line:370:12, col:48> sys_oldumount 'long (char *)'
FunctionDecl 0x1fd0d10 <line:371:12, col:66> sys_truncate 'long (const char *, long)'
FunctionDecl 0x1fd0f10 <line:372:12, col:68> sys_ftruncate 'long (unsigned int, unsigned long)'
FunctionDecl 0x1fd11f0 <line:373:12, line:374:44> sys_stat 'long (const char *, struct __old_kernel_stat *)'
FunctionDecl 0x1fd14d0 <line:375:12, line:376:30> sys_statfs 'long (const char *, struct statfs *)'
FunctionDecl 0x1fd1840 <line:377:12, line:378:32> sys_statfs64 'long (const char *, size_t, struct statfs64 *)'
FunctionDecl 0x1fd1aa0 <line:379:12, col:71> sys_fstatfs 'long (unsigned int, struct statfs *)'
FunctionDecl 0x1fd1d80 <line:380:12, line:381:32> sys_fstatfs64 'long (unsigned int, size_t, struct statfs64 *)'
FunctionDecl 0x1fd1f60 <line:382:12, line:383:44> sys_lstat 'long (const char *, struct __old_kernel_stat *)'
FunctionDecl 0x1fd21b0 <line:384:12, line:385:44> sys_fstat 'long (unsigned int, struct __old_kernel_stat *)'
FunctionDecl 0x1fd2490 <line:386:12, line:387:32> sys_newstat 'long (const char *, struct stat *)'
FunctionDecl 0x1fd2660 <line:388:12, line:389:32> sys_newlstat 'long (const char *, struct stat *)'
FunctionDecl 0x1fd28b0 <line:390:12, col:74> sys_newfstat 'long (unsigned int, struct stat *)'
FunctionDecl 0x1fd2b90 <line:391:12, col:66> sys_ustat 'long (unsigned int, struct ustat *)'
FunctionDecl 0x1fd2e70 <line:393:12, line:394:34> sys_stat64 'long (const char *, struct stat64 *)'
FunctionDecl 0x1fd30c0 <line:395:12, col:76> sys_fstat64 'long (unsigned long, struct stat64 *)'
FunctionDecl 0x1fd3290 <line:396:12, line:397:34> sys_lstat64 'long (const char *, struct stat64 *)'
FunctionDecl 0x1fd34d0 <line:398:12, col:70> sys_truncate64 'long (const char *, loff_t)'
FunctionDecl 0x1fd3710 <line:399:12, col:63> sys_ftruncate64 'long (unsigned int, loff_t)'
FunctionDecl 0x1fd3af0 <line:402:12, line:403:57> sys_setxattr 'long (const char *, const char *, const void *, size_t, int)'
FunctionDecl 0x1fd3e30 <line:404:12, line:405:58> sys_lsetxattr 'long (const char *, const char *, const void *, size_t, int)'
FunctionDecl 0x1fd62a0 <line:406:12, line:407:58> sys_fsetxattr 'long (int, const char *, const void *, size_t, int)'
FunctionDecl 0x1fd6610 <line:408:12, line:409:40> sys_getxattr 'long (const char *, const char *, void *, size_t)'
FunctionDecl 0x1fd68d0 <line:410:12, line:411:41> sys_lgetxattr 'long (const char *, const char *, void *, size_t)'
FunctionDecl 0x1fd6c30 <line:412:12, line:413:41> sys_fgetxattr 'long (int, const char *, void *, size_t)'
FunctionDecl 0x1fd6f10 <line:414:12, line:415:21> sys_listxattr 'long (const char *, char *, size_t)'
FunctionDecl 0x1fd7150 <line:416:12, line:417:22> sys_llistxattr 'long (const char *, char *, size_t)'
FunctionDecl 0x1fd7430 <line:418:12, col:70> sys_flistxattr 'long (int, char *, size_t)'
FunctionDecl 0x1fd7640 <line:419:12, line:420:28> sys_removexattr 'long (const char *, const char *)'
FunctionDecl 0x1fd7800 <line:421:12, line:422:29> sys_lremovexattr 'long (const char *, const char *)'
FunctionDecl 0x1fd7a00 <line:423:12, col:65> sys_fremovexattr 'long (int, const char *)'
FunctionDecl 0x1fd7b40 <line:425:12, col:42> sys_brk 'long (unsigned long)'
FunctionDecl 0x1fd7e10 <line:426:12, line:427:23> sys_mprotect 'long (unsigned long, size_t, unsigned long)'
FunctionDecl 0x1fd81a0 <line:428:12, line:430:50> sys_mremap 'long (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1fd84e0 <line:431:12, line:433:23> sys_remap_file_pages 'long (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1fd87d0 <line:434:12, col:69> sys_msync 'long (unsigned long, size_t, int)'
FunctionDecl 0x1fd8b30 <line:435:12, col:76> sys_fadvise64 'long (int, loff_t, size_t, int)'
FunctionDecl 0x1fd8e90 <line:436:12, col:79> sys_fadvise64_64 'long (int, loff_t, loff_t, int)'
FunctionDecl 0x1fd90e0 <line:437:12, col:58> sys_munmap 'long (unsigned long, size_t)'
FunctionDecl 0x1fd92a0 <line:438:12, col:58> sys_mlock 'long (unsigned long, size_t)'
FunctionDecl 0x1fd9460 <line:439:12, col:60> sys_munlock 'long (unsigned long, size_t)'
FunctionDecl 0x1fd95a0 <line:440:12, col:39> sys_mlockall 'long (int)'
FunctionDecl 0x1fd96e0 <line:441:12, col:36> sys_munlockall 'long (void)'
FunctionDecl 0x1fd9900 <line:442:12, col:74> sys_madvise 'long (unsigned long, size_t, int)'
FunctionDecl 0x1fd9be0 <line:443:12, line:444:31> sys_mincore 'long (unsigned long, size_t, unsigned char *)'
FunctionDecl 0x1fd9db0 <line:446:12, line:447:31> sys_pivot_root 'long (const char *, const char *)'
FunctionDecl 0x1fd9ef0 <line:448:12, col:55> sys_chroot 'long (const char *)'
FunctionDecl 0x1fda1c0 <line:449:12, line:450:17> sys_mknod 'long (const char *, umode_t, unsigned int)'
FunctionDecl 0x1fda390 <line:451:12, line:452:31> sys_link 'long (const char *, const char *)'
FunctionDecl 0x1fda550 <line:453:12, col:75> sys_symlink 'long (const char *, const char *)'
FunctionDecl 0x1fda690 <line:454:12, col:55> sys_unlink 'long (const char *)'
FunctionDecl 0x1fda850 <line:455:12, line:456:31> sys_rename 'long (const char *, const char *)'
FunctionDecl 0x1fdaa90 <line:457:12, col:68> sys_chmod 'long (const char *, umode_t)'
FunctionDecl 0x1fdacd0 <line:458:12, col:57> sys_fchmod 'long (unsigned int, umode_t)'
FunctionDecl 0x1fdaf50 <line:460:12, col:79> sys_fcntl 'long (unsigned int, unsigned int, unsigned long)'
FunctionDecl 0x1fdb190 <line:462:12, line:463:40> sys_fcntl64 'long (unsigned int, unsigned int, unsigned long)'
FunctionDecl 0x1fdb2e0 <line:465:12, col:44> sys_pipe 'long (int *)'
FunctionDecl 0x1fdb4e0 <line:466:12, col:56> sys_pipe2 'long (int *, int)'
FunctionDecl 0x1fdb620 <line:467:12, col:44> sys_dup 'long (unsigned int)'
FunctionDecl 0x1fdb7e0 <line:468:12, col:64> sys_dup2 'long (unsigned int, unsigned int)'
FunctionDecl 0x1fdba60 <line:469:12, col:75> sys_dup3 'long (unsigned int, unsigned int, int)'
FunctionDecl 0x1fdbca0 <line:470:12, col:73> sys_ioperm 'long (unsigned long, unsigned long, int)'
FunctionDecl 0x1fdbee0 <line:471:12, line:472:22> sys_ioctl 'long (unsigned int, unsigned int, unsigned long)'
FunctionDecl 0x1fdc0b0 <line:473:12, col:60> sys_flock 'long (unsigned int, unsigned int)'
FunctionDecl 0x1fdc340 <line:474:12, col:73> sys_io_setup 'long (unsigned int, aio_context_t *)'
FunctionDecl 0x1fdc4c0 <line:475:12, col:49> sys_io_destroy 'long (aio_context_t)'
FunctionDecl 0x1fdc950 <line:476:12, line:480:36> sys_io_getevents 'long (aio_context_t, long, long, struct io_event *, struct timespec *)'
FunctionDecl 0x1fdcd40 <line:481:12, line:482:34> sys_io_submit 'long (aio_context_t, long, struct iocb **)'
FunctionDecl 0x1fdd040 <line:483:12, line:484:40> sys_io_cancel 'long (aio_context_t, struct iocb *, struct io_event *)'
FunctionDecl 0x1fdd3d0 <line:485:12, line:486:43> sys_sendfile 'long (int, int, off_t *, size_t)'
FunctionDecl 0x1fdd730 <line:487:12, line:488:46> sys_sendfile64 'long (int, int, loff_t *, size_t)'
FunctionDecl 0x1fdd9c0 <line:489:12, line:490:33> sys_readlink 'long (const char *, char *, int)'
FunctionDecl 0x1fddb90 <line:491:12, col:68> sys_creat 'long (const char *, umode_t)'
FunctionDecl 0x1fdde60 <line:492:12, line:493:28> sys_open 'long (const char *, int, umode_t)'
FunctionDecl 0x1fde000 <line:494:12, col:42> sys_close 'long (unsigned int)'
FunctionDecl 0x1fde200 <line:495:12, col:65> sys_access 'long (const char *, int)'
FunctionDecl 0x1fde340 <line:496:12, col:33> sys_vhangup 'long (void)'
FunctionDecl 0x1fde600 <line:497:12, line:498:28> sys_chown 'long (const char *, uid_t, gid_t)'
FunctionDecl 0x1fde840 <line:499:12, line:500:28> sys_lchown 'long (const char *, uid_t, gid_t)'
FunctionDecl 0x1fdead0 <line:501:12, col:68> sys_fchown 'long (unsigned int, uid_t, gid_t)'
FunctionDecl 0x1fdedc0 <line:528:12, line:529:33> sys_utime 'long (char *, struct utimbuf *)'
FunctionDecl 0x1fdf010 <line:530:12, line:531:34> sys_utimes 'long (char *, struct timeval *)'
FunctionDecl 0x1fdf2e0 <line:532:12, line:533:25> sys_lseek 'long (unsigned int, off_t, unsigned int)'
FunctionDecl 0x1fdf6d0 <line:534:12, line:536:23> sys_llseek 'long (unsigned int, unsigned long, unsigned long, loff_t *, unsigned int)'
FunctionDecl 0x1fdf9c0 <line:537:12, col:73> sys_read 'long (unsigned int, char *, size_t)'
FunctionDecl 0x1fdfca0 <line:538:12, col:66> sys_readahead 'long (int, loff_t, size_t)'
FunctionDecl 0x1fdff90 <line:539:12, line:541:24> sys_readv 'long (unsigned long, const struct iovec *, unsigned long)'
FunctionDecl 0x1fe0270 <line:542:12, line:543:18> sys_write 'long (unsigned int, const char *, size_t)'
FunctionDecl 0x1fe04c0 <line:544:12, line:546:25> sys_writev 'long (unsigned long, const struct iovec *, unsigned long)'
FunctionDecl 0x1fe0820 <line:547:12, line:548:32> sys_pread64 'long (unsigned int, char *, size_t, loff_t)'
FunctionDecl 0x1fe0b80 <line:549:12, line:550:33> sys_pwrite64 'long (unsigned int, const char *, size_t, loff_t)'
FunctionDecl 0x1fe0f80 <line:551:12, line:552:67> sys_preadv 'long (unsigned long, const struct iovec *, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1fe12d0 <line:553:12, line:554:68> sys_pwritev 'long (unsigned long, const struct iovec *, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1fe14f0 <line:555:12, col:64> sys_getcwd 'long (char *, unsigned long)'
FunctionDecl 0x1fe16b0 <line:556:12, col:68> sys_mkdir 'long (const char *, umode_t)'
FunctionDecl 0x1fe17f0 <line:557:12, col:54> sys_chdir 'long (const char *)'
FunctionDecl 0x1fe1930 <line:558:12, col:43> sys_fchdir 'long (unsigned int)'
FunctionDecl 0x1fe1a70 <line:559:12, col:54> sys_rmdir 'long (const char *)'
FunctionDecl 0x1fe1d40 <line:560:12, col:78> sys_lookup_dcookie 'long (u64, char *, size_t)'
FunctionDecl 0x1fe20a0 <line:561:12, line:562:32> sys_quotactl 'long (unsigned int, const char *, qid_t, void *)'
FunctionDecl 0x1fe2420 <line:563:12, line:565:23> sys_getdents 'long (unsigned int, struct linux_dirent *, unsigned int)'
FunctionDecl 0x1fe27a0 <line:566:12, line:568:23> sys_getdents64 'long (unsigned int, struct linux_dirent64 *, unsigned int)'
FunctionDecl 0x1fe2b30 <line:570:12, line:571:36> sys_setsockopt 'long (int, int, int, char *, int)'
FunctionDecl 0x1fe2ed0 <line:572:12, line:573:44> sys_getsockopt 'long (int, int, int, char *, int *)'
FunctionDecl 0x1fe31d0 <line:574:12, col:60> sys_bind 'long (int, struct sockaddr *, int)'
FunctionDecl 0x1fe3420 <line:575:12, col:63> sys_connect 'long (int, struct sockaddr *, int)'
FunctionDecl 0x1fe3710 <line:576:12, col:71> sys_accept 'long (int, struct sockaddr *, int *)'
FunctionDecl 0x1fe3a80 <line:577:12, col:77> sys_accept4 'long (int, struct sockaddr *, int *, int)'
FunctionDecl 0x1fe3cd0 <line:578:12, col:76> sys_getsockname 'long (int, struct sockaddr *, int *)'
FunctionDecl 0x1fe3f20 <line:579:12, col:76> sys_getpeername 'long (int, struct sockaddr *, int *)'
FunctionDecl 0x1fe4280 <line:580:12, col:62> sys_send 'long (int, void *, size_t, unsigned int)'
FunctionDecl 0x1fe4700 <line:581:12, line:582:34> sys_sendto 'long (int, void *, size_t, unsigned int, struct sockaddr *, int)'
FunctionDecl 0x1fe4a00 <line:583:12, col:78> sys_sendmsg 'long (int, struct msghdr *, unsigned int)'
FunctionDecl 0x1fe4e00 <line:584:12, line:585:42> sys_sendmmsg 'long (int, struct mmsghdr *, unsigned int, unsigned int)'
FunctionDecl 0x1fe50c0 <line:586:12, col:62> sys_recv 'long (int, void *, size_t, unsigned int)'
FunctionDecl 0x1fe5540 <line:587:12, line:588:43> sys_recvfrom 'long (int, void *, size_t, unsigned int, struct sockaddr *, int *)'
FunctionDecl 0x1fe57a0 <line:589:12, col:78> sys_recvmsg 'long (int, struct msghdr *, unsigned int)'
FunctionDecl 0x1fe5bb0 <line:590:12, line:592:40> sys_recvmmsg 'long (int, struct mmsghdr *, unsigned int, unsigned int, struct timespec *)'
FunctionDecl 0x1fe5e00 <line:593:12, col:41> sys_socket 'long (int, int, int)'
FunctionDecl 0x1fe8180 <line:594:12, col:59> sys_socketpair 'long (int, int, int, int *)'
FunctionDecl 0x1fe8390 <line:595:12, col:68> sys_socketcall 'long (int, unsigned long *)'
FunctionDecl 0x1fe8550 <line:596:12, col:36> sys_listen 'long (int, int)'
FunctionDecl 0x1fe8840 <line:597:12, line:598:16> sys_poll 'long (struct pollfd *, unsigned int, int)'
FunctionDecl 0x1fe8c40 <line:599:12, line:600:50> sys_select 'long (int, fd_set *, fd_set *, fd_set *, struct timeval *)'
FunctionDecl 0x1fe8ec0 <line:601:12, col:65> sys_old_select 'long (struct sel_arg_struct *)'
FunctionDecl 0x1fe9000 <line:602:12, col:42> sys_epoll_create 'long (int)'
FunctionDecl 0x1fe9140 <line:603:12, col:44> sys_epoll_create1 'long (int)'
FunctionDecl 0x1fe9530 <line:604:12, line:605:37> sys_epoll_ctl 'long (int, int, int, struct epoll_event *)'
FunctionDecl 0x1fe98a0 <line:606:12, line:607:31> sys_epoll_wait 'long (int, struct epoll_event *, int, int)'
FunctionDecl 0x1fe9d20 <line:608:12, line:611:22> sys_epoll_pwait 'long (int, struct epoll_event *, int, int, const sigset_t *, size_t)'
FunctionDecl 0x1fe9f00 <line:612:12, col:59> sys_gethostname 'long (char *, int)'
FunctionDecl 0x1fea0c0 <line:613:12, col:59> sys_sethostname 'long (char *, int)'
FunctionDecl 0x1fea280 <line:614:12, col:61> sys_setdomainname 'long (char *, int)'
FunctionDecl 0x1fea4e0 <line:615:12, col:61> sys_newuname 'long (struct new_utsname *)'
FunctionDecl 0x1fea740 <line:616:12, col:54> sys_uname 'long (struct old_utsname *)'
FunctionDecl 0x1fea9a0 <line:617:12, col:60> sys_olduname 'long (struct oldold_utsname *)'
FunctionDecl 0x1feabf0 <line:619:12, line:620:31> sys_getrlimit 'long (unsigned int, struct rlimit *)'
FunctionDecl 0x1feadc0 <line:622:12, col:84> sys_old_getrlimit 'long (unsigned int, struct rlimit *)'
FunctionDecl 0x1feaf90 <line:624:12, line:625:31> sys_setrlimit 'long (unsigned int, struct rlimit *)'
FunctionDecl 0x1feb3f0 <line:626:12, line:628:37> sys_prlimit64 'long (pid_t, unsigned int, const struct rlimit64 *, struct rlimit64 *)'
FunctionDecl 0x1feb650 <line:629:12, col:64> sys_getrusage 'long (int, struct rusage *)'
FunctionDecl 0x1feb790 <line:630:12, col:35> sys_umask 'long (int)'
FunctionDecl 0x1feb990 <line:632:12, col:49> sys_msgget 'long (key_t, int)'
FunctionDecl 0x1febcf0 <line:633:12, line:634:29> sys_msgsnd 'long (int, struct msgbuf *, size_t, int)'
FunctionDecl 0x1fec0f0 <line:635:12, line:636:42> sys_msgrcv 'long (int, struct msgbuf *, size_t, long, int)'
FunctionDecl 0x1fec480 <line:637:12, col:75> sys_msgctl 'long (int, int, struct msqid_ds *)'
FunctionDecl 0x1fec710 <line:639:12, col:60> sys_semget 'long (key_t, int, int)'
FunctionDecl 0x1feca00 <line:640:12, line:641:19> sys_semop 'long (int, struct sembuf *, unsigned int)'
FunctionDecl 0x1fecd10 <line:642:12, col:77> sys_semctl 'long (int, int, int, unsigned long)'
FunctionDecl 0x1fed090 <line:643:12, line:645:42> sys_semtimedop 'long (int, struct sembuf *, unsigned int, const struct timespec *)'
FunctionDecl 0x1fed320 <line:646:12, col:70> sys_shmat 'long (int, char *, int)'
FunctionDecl 0x1fed600 <line:647:12, col:60> sys_shmget 'long (key_t, size_t, int)'
FunctionDecl 0x1fed750 <line:648:12, col:47> sys_shmdt 'long (char *)'
FunctionDecl 0x1fedac0 <line:649:12, col:75> sys_shmctl 'long (int, int, struct shmid_ds *)'
FunctionDecl 0x1feded0 <line:650:12, line:651:52> sys_ipc 'long (unsigned int, int, unsigned long, unsigned long, void *, long)'
FunctionDecl 0x1fee250 <line:653:12, col:106> sys_mq_open 'long (const char *, int, umode_t, struct mq_attr *)'
FunctionDecl 0x1fee3a0 <line:654:12, col:54> sys_mq_unlink 'long (const char *)'
FunctionDecl 0x1fee790 <line:655:12, col:155> sys_mq_timedsend 'long (mqd_t, const char *, size_t, unsigned int, const struct timespec *)'
FunctionDecl 0x1feeba0 <line:656:12, col:160> sys_mq_timedreceive 'long (mqd_t, char *, size_t, unsigned int *, const struct timespec *)'
FunctionDecl 0x1feee10 <line:657:12, col:86> sys_mq_notify 'long (mqd_t, const struct sigevent *)'
FunctionDecl 0x1fef160 <line:658:12, col:115> sys_mq_getsetattr 'long (mqd_t, const struct mq_attr *, struct mq_attr *)'
FunctionDecl 0x1fef3f0 <line:660:12, col:88> sys_pciconfig_iobase 'long (long, unsigned long, unsigned long)'
FunctionDecl 0x1fef780 <line:661:12, line:663:21> sys_pciconfig_read 'long (unsigned long, unsigned long, unsigned long, unsigned long, void *)'
FunctionDecl 0x1fefac0 <line:664:12, line:666:21> sys_pciconfig_write 'long (unsigned long, unsigned long, unsigned long, unsigned long, void *)'
FunctionDecl 0x1fefe60 <line:668:12, line:669:42> sys_prctl 'long (int, unsigned long, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1ff0060 <line:670:12, col:74> sys_swapon 'long (const char *, int)'
FunctionDecl 0x1ff01a0 <line:671:12, col:59> sys_swapoff 'long (const char *)'
FunctionDecl 0x1ff0400 <line:672:12, col:61> sys_sysctl 'long (struct __sysctl_args *)'
FunctionDecl 0x1ff0660 <line:673:12, col:56> sys_sysinfo 'long (struct sysinfo *)'
FunctionDecl 0x1ff08e0 <line:674:12, line:675:43> sys_sysfs 'long (int, unsigned long, unsigned long)'
FunctionDecl 0x1ff0b20 <line:676:12, col:63> sys_syslog 'long (int, char *, int)'
FunctionDecl 0x1ff0c70 <line:677:12, col:54> sys_uselib 'long (const char *)'
FunctionDecl 0x1ff0db0 <line:678:12, col:36> sys_ni_syscall 'long (void)'
FunctionDecl 0x1ff10a0 <line:679:12, line:680:25> sys_ptrace 'long (long, long, unsigned long, unsigned long)'
FunctionDecl 0x1ff13d0 <line:682:12, line:686:31> sys_add_key 'long (const char *, const char *, const void *, size_t, int)'
FunctionDecl 0x1ff16f0 <line:688:12, line:691:28> sys_request_key 'long (const char *, const char *, const char *, int)'
FunctionDecl 0x1ff1a20 <line:693:12, line:694:45> sys_keyctl 'long (int, unsigned long, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1ff1c70 <line:696:12, col:62> sys_ioprio_set 'long (int, int, int)'
FunctionDecl 0x1ff1e40 <line:697:12, col:50> sys_ioprio_get 'long (int, int)'
FunctionDecl 0x1ff20c0 <line:698:12, line:699:26> sys_set_mempolicy 'long (int, unsigned long *, unsigned long)'
FunctionDecl 0x1ff2420 <line:700:12, line:702:35> sys_migrate_pages 'long (pid_t, unsigned long, const unsigned long *, const unsigned long *)'
FunctionDecl 0x1ff28f0 <line:703:12, line:707:14> sys_move_pages 'long (pid_t, unsigned long, const void **, const int *, int *, int)'
FunctionDecl 0x1ff2d10 <line:708:12, line:712:19> sys_mbind 'long (unsigned long, unsigned long, unsigned long, unsigned long *, unsigned long, unsigned int)'
FunctionDecl 0x1ff30c0 <line:713:12, line:716:44> sys_get_mempolicy 'long (int *, unsigned long *, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1ff3220 <line:718:12, col:38> sys_inotify_init 'long (void)'
FunctionDecl 0x1ff3350 <line:719:12, col:44> sys_inotify_init1 'long (int)'
FunctionDecl 0x1ff3620 <line:720:12, line:721:14> sys_inotify_add_watch 'long (int, const char *, u32)'
FunctionDecl 0x1ff3830 <line:722:12, col:54> sys_inotify_rm_watch 'long (int, __s32)'
FunctionDecl 0x1ff3b00 <line:724:12, line:725:27> sys_spu_run 'long (int, __u32 *, __u32 *)'
FunctionDecl 0x1ff3e60 <line:726:12, line:727:43> sys_spu_create 'long (const char *, unsigned int, umode_t, int)'
FunctionDecl 0x1ff41c0 <line:729:12, line:730:20> sys_mknodat 'long (int, const char *, umode_t, unsigned int)'
FunctionDecl 0x1ff44a0 <line:731:12, col:80> sys_mkdirat 'long (int, const char *, umode_t)'
FunctionDecl 0x1ff4730 <line:732:12, col:77> sys_unlinkat 'long (int, const char *, int)'
FunctionDecl 0x1ff49c0 <line:733:12, line:734:49> sys_symlinkat 'long (const char *, int, const char *)'
FunctionDecl 0x1ff4d50 <line:735:12, line:736:56> sys_linkat 'long (int, const char *, int, const char *, int)'
FunctionDecl 0x1ff5070 <line:737:12, line:738:48> sys_renameat 'long (int, const char *, int, const char *)'
FunctionDecl 0x1ff5360 <line:739:12, line:740:39> sys_futimesat 'long (int, const char *, struct timeval *)'
FunctionDecl 0x1ff55a0 <line:741:12, col:77> sys_faccessat 'long (int, const char *, int)'
FunctionDecl 0x1ff57e0 <line:742:12, line:743:21> sys_fchmodat 'long (int, const char *, umode_t)'
FunctionDecl 0x1ff5bd0 <line:744:12, line:745:30> sys_fchownat 'long (int, const char *, uid_t, gid_t, int)'
FunctionDecl 0x1ff5ea0 <line:746:12, line:747:19> sys_openat 'long (int, const char *, int, umode_t)'
FunctionDecl 0x1ff6210 <line:748:12, line:749:48> sys_newfstatat 'long (int, const char *, struct stat *, int)'
FunctionDecl 0x1ff6580 <line:750:12, line:751:50> sys_fstatat64 'long (int, const char *, struct stat64 *, int)'
FunctionDecl 0x1ff6890 <line:752:12, line:753:21> sys_readlinkat 'long (int, const char *, char *, int)'
FunctionDecl 0x1ff6b60 <line:754:12, line:755:46> sys_utimensat 'long (int, const char *, struct timespec *, int)'
FunctionDecl 0x1ff6cb0 <line:756:12, col:56> sys_unshare 'long (unsigned long)'
FunctionDecl 0x1ff7110 <line:758:12, line:760:37> sys_splice 'long (int, loff_t *, int, loff_t *, size_t, unsigned int)'
FunctionDecl 0x1ff7490 <line:762:12, line:763:50> sys_vmsplice 'long (int, const struct iovec *, unsigned long, unsigned int)'
FunctionDecl 0x1ff77f0 <line:765:12, col:76> sys_tee 'long (int, int, size_t, unsigned int)'
FunctionDecl 0x1ff7b50 <line:767:12, line:768:24> sys_sync_file_range 'long (int, loff_t, loff_t, unsigned int)'
FunctionDecl 0x1ff7eb0 <line:769:12, line:770:38> sys_sync_file_range2 'long (int, unsigned int, loff_t, loff_t)'
FunctionDecl 0x1ffa2d0 <line:771:12, line:773:31> sys_get_robust_list 'long (int, struct robust_list_head **, size_t *)'
FunctionDecl 0x1ffa530 <line:774:12, line:775:19> sys_set_robust_list 'long (struct robust_list_head *, size_t)'
FunctionDecl 0x1ffa8b0 <line:776:12, col:106> sys_getcpu 'long (unsigned int *, unsigned int *, struct getcpu_cache *)'
FunctionDecl 0x1ffab40 <line:777:12, col:82> sys_signalfd 'long (int, sigset_t *, size_t)'
FunctionDecl 0x1ffaea0 <line:778:12, col:94> sys_signalfd4 'long (int, sigset_t *, size_t, int)'
FunctionDecl 0x1ffb070 <line:779:12, col:58> sys_timerfd_create 'long (int, int)'
FunctionDecl 0x1ffb390 <line:780:12, line:782:39> sys_timerfd_settime 'long (int, int, const struct itimerspec *, struct itimerspec *)'
FunctionDecl 0x1ffb5b0 <line:783:12, col:76> sys_timerfd_gettime 'long (int, struct itimerspec *)'
FunctionDecl 0x1ffb6f0 <line:784:12, col:47> sys_eventfd 'long (unsigned int)'
FunctionDecl 0x1ffb8f0 <line:785:12, col:59> sys_eventfd2 'long (unsigned int, int)'
FunctionDecl 0x1ffbc40 <line:786:12, col:74> sys_fallocate 'long (int, int, loff_t, loff_t)'
FunctionDecl 0x1ffbfc0 <line:787:12, col:93> sys_old_readdir 'long (unsigned int, struct old_linux_dirent *, unsigned int)'
FunctionDecl 0x1ffc440 <line:788:12, line:790:22> sys_pselect6 'long (int, fd_set *, fd_set *, fd_set *, struct timespec *, void *)'
FunctionDecl 0x1ffc870 <line:791:12, line:793:12> sys_ppoll 'long (struct pollfd *, unsigned int, struct timespec *, const sigset_t *, size_t)'
FunctionDecl 0x1ffca50 <line:794:12, col:81> sys_fanotify_init 'long (unsigned int, unsigned int)'
FunctionDecl 0x1ffce30 <line:795:12, line:797:35> sys_fanotify_mark 'long (int, unsigned int, u64, int, const char *)'
FunctionDecl 0x1ffcf90 <line:798:12, col:34> sys_syncfs 'long (int)'
FunctionDecl 0x1ffd0d0 <line:800:12, col:30> sys_fork 'long (void)'
FunctionDecl 0x1ffd200 <line:801:12, col:31> sys_vfork 'long (void)'
FunctionDecl 0x1ffd570 <line:810:12, line:811:26> sys_clone 'long (unsigned long, unsigned long, int *, int *, int)'
FunctionDecl 0x1ffd810 <line:815:12, line:817:40> sys_execve 'long (const char *, const char *const *, const char *const *)'
FunctionDecl 0x1ffdca0 <line:819:12, line:821:56> sys_perf_event_open 'long (struct perf_event_attr *, pid_t, int, int, unsigned long)'
FunctionDecl 0x1ffe0c0 <line:823:12, line:825:41> sys_mmap_pgoff 'long (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)'
FunctionDecl 0x1ffe340 <line:826:12, col:64> sys_old_mmap 'long (struct mmap_arg_struct *)'
FunctionDecl 0x1ffe7c0 <line:827:12, line:829:39> sys_name_to_handle_at 'long (int, const char *, struct file_handle *, int *, int)'
FunctionDecl 0x1ffeac0 <line:830:12, line:832:20> sys_open_by_handle_at 'long (int, struct file_handle *, int)'
FunctionDecl 0x1ffec90 <line:833:12, col:45> sys_setns 'long (int, int)'
FunctionDecl 0x1fff110 <line:834:12, line:839:29> sys_process_vm_readv 'long (pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long)'
FunctionDecl 0x1fff4f0 <line:840:12, line:845:30> sys_process_vm_writev 'long (pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long)'
FunctionDecl 0x1fff8f0 <line:847:12, line:848:43> sys_kcmp 'long (pid_t, pid_t, int, unsigned long, unsigned long)'
FunctionDecl 0x1fffb40 <line:849:12, col:77> sys_finit_module 'long (int, const char *, int)'
FunctionDecl 0x20000e0 <line:63:1, col:47> mnt_want_write 'int (struct vfsmount *)' extern
FunctionDecl 0x2000230 <line:64:1, col:49> mnt_want_write_file 'int (struct file *)' extern
FunctionDecl 0x2000380 <line:65:1, col:48> mnt_clone_write 'int (struct vfsmount *)' extern
FunctionDecl 0x20004d0 <line:66:1, col:48> mnt_drop_write 'void (struct vfsmount *)' extern
FunctionDecl 0x2000620 <line:67:1, col:50> mnt_drop_write_file 'void (struct file *)' extern
FunctionDecl 0x2000770 <line:68:1, col:40> mntput 'void (struct vfsmount *)' extern
FunctionDecl 0x2000960 <line:69:1, col:52> mntget 'struct vfsmount *(struct vfsmount *)' extern
FunctionDecl 0x2000ab0 <line:70:1, col:41> mnt_pin 'void (struct vfsmount *)' extern
FunctionDecl 0x2000c00 <line:71:1, col:43> mnt_unpin 'void (struct vfsmount *)' extern
FunctionDecl 0x2000d50 <line:72:1, col:50> __mnt_is_readonly 'int (struct vfsmount *)' extern
FunctionDecl 0x2001150 <line:75:1, line:77:21> vfs_kern_mount 'struct vfsmount *(struct file_system_type *, int, const char *, void *)' extern
FunctionDecl 0x20013d0 <line:79:1, col:79> mnt_set_expiry 'void (struct vfsmount *, struct list_head *)' extern
FunctionDecl 0x2001530 <line:80:1, col:60> mark_mounts_for_expiry 'void (struct list_head *)' extern
FunctionDecl 0x20016f0 <line:82:1, col:38> name_to_dev_t 'dev_t (char *)' extern
FunctionDecl 0x20018c0 <line:14:1, col:31> fput 'void (struct file *)' extern
FunctionDecl 0x2001dd0 <line:20:1, line:21:35> alloc_file 'struct file *(struct path *, fmode_t, const struct file_operations *)' extern
FunctionDecl 0x2003180 <line:23:1, line:27:1> fput_light 'void (struct file *, int)' static inline
DeclRefExpr 0x2003270 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
FunctionDecl 0x2003670 <line:34:1, line:38:1> fdput 'void (struct fd)' static inline
DeclRefExpr 0x2003788 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
FunctionDecl 0x20039f0 <line:40:1, col:41> fget 'struct file *(unsigned int)' extern
FunctionDecl 0x2003c50 <line:41:1, col:65> fget_light 'struct file *(unsigned int, int *)' extern
FunctionDecl 0x2003e20 <line:43:1, line:48:1> fdget 'struct fd (unsigned int)' static inline
DeclRefExpr 0x2003fd8 <col:19> 'struct file *(unsigned int, int *)' Function 0x2003c50 'fget_light' 'struct file *(unsigned int, int *)'
FunctionDecl 0x20043d0 <line:50:1, col:45> fget_raw 'struct file *(unsigned int)' extern
FunctionDecl 0x20045a0 <line:51:1, col:69> fget_raw_light 'struct file *(unsigned int, int *)' extern
FunctionDecl 0x20046f0 <line:53:1, line:58:1> fdget_raw 'struct fd (unsigned int)' static inline
DeclRefExpr 0x20048a8 <col:19> 'struct file *(unsigned int, int *)' Function 0x20045a0 'fget_raw_light' 'struct file *(unsigned int, int *)'
FunctionDecl 0x2004dc0 <line:60:1, col:72> f_dupfd 'int (unsigned int, struct file *, unsigned int)' extern
FunctionDecl 0x2005010 <line:61:1, col:69> replace_fd 'int (unsigned int, struct file *, unsigned int)' extern
FunctionDecl 0x2005220 <line:62:1, col:56> set_close_on_exec 'void (unsigned int, int)' extern
FunctionDecl 0x2005360 <line:63:1, col:46> get_close_on_exec 'bool (unsigned int)' extern
FunctionDecl 0x20054b0 <line:64:1, col:35> put_filp 'void (struct file *)' extern
FunctionDecl 0x20055f0 <line:65:1, col:46> get_unused_fd_flags 'int (unsigned int)' extern
FunctionDecl 0x2005730 <line:67:1, col:42> put_unused_fd 'void (unsigned int)' extern
FunctionDecl 0x2005980 <line:69:1, col:58> fd_install 'void (unsigned int, struct file *)' extern
FunctionDecl 0x2005ac0 <line:71:1, col:36> flush_delayed_fput 'void (void)' extern
FunctionDecl 0x2005c10 <line:72:1, col:38> __fput_sync 'void (struct file *)' extern
FunctionDecl 0x2005de0 <../include/linux/device_cgroup.h:15:1, line:16:13> devcgroup_inode_permission 'int (struct inode *, int)' static inline
FunctionDecl 0x2006040 <line:17:1, line:18:13> devcgroup_inode_mknod 'int (int, dev_t)' static inline
FunctionDecl 0x20065b0 <line:19:1, col:41> exit_fs 'void (struct task_struct *)' extern
FunctionDecl 0x2006810 <line:20:1, col:64> set_fs_root 'void (struct fs_struct *, const struct path *)' extern
FunctionDecl 0x2006a00 <line:21:1, col:63> set_fs_pwd 'void (struct fs_struct *, const struct path *)' extern
FunctionDecl 0x2006c00 <line:22:1, col:59> copy_fs_struct 'struct fs_struct *(struct fs_struct *)' extern
FunctionDecl 0x2006dd0 <line:23:1, col:46> free_fs_struct 'void (struct fs_struct *)' extern
FunctionDecl 0x2006f10 <line:24:1, col:34> unshare_fs_struct 'int (void)' extern
FunctionDecl 0x2007170 <line:26:1, line:32:1> get_fs_root 'void (struct fs_struct *, struct path *)' static inline
DeclRefExpr 0x2007220 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x2007430 <col:2> 'void (const struct path *)' Function 0x1a32e30 'path_get' 'void (const struct path *)'
DeclRefExpr 0x20074f8 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x2007770 <line:34:1, line:40:1> get_fs_pwd 'void (struct fs_struct *, struct path *)' static inline
DeclRefExpr 0x2007820 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x2007a30 <col:2> 'void (const struct path *)' Function 0x1a32e30 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2007af8 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x2007cc0 <line:42:1, col:34> current_chrooted 'bool (void)' extern
FunctionDecl 0x2008880 <line:64:1, line:70:1> posix_acl_dup 'struct posix_acl *(struct posix_acl *)' static inline
DeclRefExpr 0x2008968 <col:3> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x2008c90 <line:75:1, line:80:1> posix_acl_release 'void (struct posix_acl *)' static inline
DeclRefExpr 0x2008d60 <col:13> 'int ()' Function 0x19b9e90 'atomic_dec_and_test' 'int ()'
FunctionDecl 0x2008f70 <<invalid sloc>> kfree_call_rcu 'int ()'
FunctionDecl 0x2009430 <../include/linux/posix_acl.h:85:1, col:51> posix_acl_init 'void (struct posix_acl *, int)' extern
FunctionDecl 0x2009690 <line:86:1, col:52> posix_acl_alloc 'struct posix_acl *(int, gfp_t)' extern
FunctionDecl 0x20098c0 <line:87:1, col:52> posix_acl_valid 'int (const struct posix_acl *)' extern
FunctionDecl 0x2009bb0 <line:88:1, col:78> posix_acl_permission 'int (struct inode *, const struct posix_acl *, int)' extern
FunctionDecl 0x2009e20 <line:89:1, col:60> posix_acl_from_mode 'struct posix_acl *(umode_t, gfp_t)' extern
FunctionDecl 0x200a080 <line:90:1, col:68> posix_acl_equiv_mode 'int (const struct posix_acl *, umode_t *)' extern
FunctionDecl 0x200a3c0 <line:91:1, col:66> posix_acl_create 'int (struct posix_acl **, gfp_t, umode_t *)' extern
FunctionDecl 0x200a6b0 <line:92:1, col:63> posix_acl_chmod 'int (struct posix_acl **, gfp_t, umode_t)' extern
FunctionDecl 0x200a8a0 <line:94:1, col:59> get_posix_acl 'struct posix_acl *(struct inode *, int)' extern
FunctionDecl 0x200aba0 <line:95:1, col:65> set_posix_acl 'int (struct inode *, int, struct posix_acl *)' extern
FunctionDecl 0x200ad00 <line:170:1, line:176:1> cache_no_acl 'void (struct inode *)' static inline
FunctionDecl 0x2014be0 <line:27:1, line:29:1> bdev_cache_init 'void (void)' static inline
FunctionDecl 0x2014dc0 <line:31:1, line:34:1> __sync_blockdev 'int (struct block_device *, int)' static inline
FunctionDecl 0x2015100 <./internal.h:45:1, col:50> __inode_permission 'int (struct inode *, int)' extern
FunctionDecl 0x20153c0 <line:46:1, col:89> user_path_mountpoint_at 'int (int, const char *, unsigned int, struct path *)' extern
FunctionDecl 0x20157f0 <line:47:1, line:48:48> vfs_path_lookup 'int (struct dentry *, struct vfsmount *, const char *, unsigned int, struct path *)' extern
FunctionDecl 0x2015a10 <line:53:1, col:67> copy_mount_options 'int (const void *, unsigned long *)' extern
FunctionDecl 0x2015c10 <line:54:1, col:58> copy_mount_string 'int (const void *, char **)' extern
FunctionDecl 0x2015d90 <line:56:1, col:49> lookup_mnt 'struct vfsmount *(struct path *)' extern
FunctionDecl 0x2015ff0 <line:57:1, col:61> finish_automount 'int (struct vfsmount *, struct path *)' extern
FunctionDecl 0x2016150 <line:59:1, col:60> sb_prepare_remount_readonly 'int (struct super_block *)' extern
FunctionDecl 0x20163a0 <./internal.h:63:1, col:46> __mnt_want_write 'int (struct vfsmount *)' extern
FunctionDecl 0x20164f0 <line:64:1, col:47> __mnt_want_write_file 'int (struct file *)' extern
FunctionDecl 0x2016640 <line:65:1, col:47> __mnt_drop_write 'void (struct vfsmount *)' extern
FunctionDecl 0x2016790 <line:66:1, col:48> __mnt_drop_write_file 'void (struct file *)' extern
FunctionDecl 0x20169f0 <line:71:1, col:68> chroot_fs_refs 'void (const struct path *, const struct path *)' extern
FunctionDecl 0x2016bb0 <line:76:1, col:40> get_empty_filp 'struct file *(void)' extern
FunctionDecl 0x2016f10 <line:81:1, col:64> do_remount_sb 'int (struct super_block *, int, void *, int)' extern
FunctionDecl 0x2017100 <line:82:1, col:54> grab_super_passive 'bool (struct super_block *)' extern
FunctionDecl 0x20173d0 <line:83:1, line:84:36> mount_fs 'struct dentry *(struct file_system_type *, int, const char *, void *)' extern
FunctionDecl 0x20175c0 <line:85:1, col:48> user_get_super 'struct super_block *(dev_t)' extern
FunctionDecl 0x2017be0 <line:97:1, line:98:30> do_filp_open 'struct file *(int, struct filename *, const struct open_flags *)' extern
FunctionDecl 0x2017f90 <line:99:1, line:100:42> do_file_open_root 'struct file *(struct dentry *, struct vfsmount *, const char *, const struct open_flags *)' extern
FunctionDecl 0x20181e0 <line:102:1, line:103:52> do_handle_open 'long (int, struct file_handle *, int)' extern
FunctionDecl 0x2018340 <line:104:1, col:46> open_check_o_direct 'int (struct file *)' extern
FunctionDecl 0x2018690 <line:110:1, line:111:15> prune_icache_sb 'long (struct super_block *, unsigned long, int)' extern
FunctionDecl 0x20187f0 <line:112:1, col:46> inode_add_lru 'void (struct inode *)' extern
FunctionDecl 0x2018940 <line:117:1, col:50> inode_wb_list_del 'void (struct inode *)' extern
FunctionDecl 0x2018a80 <line:119:1, col:37> get_nr_dirty_inodes 'long (void)' extern
FunctionDecl 0x2018bd0 <line:120:1, col:46> evict_inodes 'void (struct super_block *)' extern
FunctionDecl 0x2018e20 <line:121:1, col:56> invalidate_inodes 'int (struct super_block *, bool)' extern
FunctionDecl 0x2019020 <line:126:1, col:74> __d_alloc 'struct dentry *(struct super_block *, const struct qstr *)' extern
FunctionDecl 0x2019180 <line:127:1, col:47> d_set_mounted 'int (struct dentry *)' extern
FunctionDecl 0x20193c0 <line:128:1, line:129:15> prune_dcache_sb 'long (struct super_block *, unsigned long, int)' extern
FunctionDecl 0x2019690 <line:134:1, col:76> __kernel_write 'ssize_t (struct file *, const char *, size_t, loff_t *)' extern
FunctionDecl 0x2019a60 <line:135:1, col:69> rw_verify_area 'int (int, struct file *, const loff_t *, size_t)' extern
FunctionDecl 0x2019f00 <line:140:1, line:141:47> do_splice_direct 'long (struct file *, loff_t *, struct file *, loff_t *, size_t, unsigned int)' extern
FunctionDecl 0x201b430 <line:64:1, line:67:1> real_mount 'struct mount *(struct vfsmount *)' static inline
FunctionDecl 0x201ba10 <line:69:1, line:72:1> mnt_has_parent 'int (struct mount *)' static inline
FunctionDecl 0x201bc90 <line:74:1, line:78:1> is_mounted 'int (struct vfsmount *)' static inline
DeclRefExpr 0x201be00 <col:10> 'int ()' Function 0x201bd60 'IS_ERR_OR_NULL' 'int ()'
DeclRefExpr 0x201be28 <col:25> 'struct mount *(struct vfsmount *)' Function 0x201b430 'real_mount' 'struct mount *(struct vfsmount *)'
FunctionDecl 0x201bd60 <<invalid sloc>> IS_ERR_OR_NULL 'int ()'
FunctionDecl 0x201c1c0 <line:80:1, col:69> __lookup_mnt 'struct mount *(struct vfsmount *, struct dentry *)' extern
FunctionDecl 0x201c3c0 <line:81:1, col:74> __lookup_mnt_last 'struct mount *(struct vfsmount *, struct dentry *)' extern
FunctionDecl 0x201c620 <line:83:1, col:55> legitimize_mnt 'bool (struct vfsmount *, unsigned int)' extern
FunctionDecl 0x201c800 <line:85:1, line:88:1> get_mnt_ns 'void (struct mnt_namespace *)' static inline
DeclRefExpr 0x201c8a8 <col:2> 'int ()' Function 0x19b7f30 'atomic_inc' 'int ()'
FunctionDecl 0x201cad0 <line:92:1, line:95:1> lock_mount_hash 'void (void)' static inline
DeclRefExpr 0x201cb70 <col:2> 'void (seqlock_t *)' Function 0x19edfd0 'write_seqlock' 'void (seqlock_t *)'
FunctionDecl 0x20200b0 <line:97:1, line:100:1> unlock_mount_hash 'void (void)' static inline
DeclRefExpr 0x2020150 <col:2> 'void (seqlock_t *)' Function 0x19ee3c0 'write_sequnlock' 'void (seqlock_t *)'
FunctionDecl 0x2020870 prev 0x1c7cdf0 <namei.c:120:1, line:128:1> final_putname 'void (struct filename *)'
DeclRefExpr 0x20209a0 <col:26> 'void (struct kmem_cache *, void *)' Function 0x1b35730 'kmem_cache_free' 'void (struct kmem_cache *, void *)'
DeclRefExpr 0x2020bc0 <col:3> 'void (const void *)' Function 0x1b35950 'kfree' 'void (const void *)'
DeclRefExpr 0x2020cd8 <col:26> 'void (struct kmem_cache *, void *)' Function 0x1b35730 'kmem_cache_free' 'void (struct kmem_cache *, void *)'
FunctionDecl 0x2021110 <line:132:1, line:205:1> getname_flags 'struct filename *(const char *, int, int *)' static
DeclRefExpr 0x20214a8 <col:11> 'struct filename *(const char *)' Function 0x1e46750 'audit_reusename' 'struct filename *(const char *)'
DeclRefExpr 0x20216d8 <col:22> 'void *(struct kmem_cache *, gfp_t)' Function 0x1b38d20 'kmem_cache_alloc' 'void *(struct kmem_cache *, gfp_t)'
DeclRefExpr 0x20219a8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2021a78 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2022150 <col:8> 'int ()' Function 0x20220b0 'strncpy_from_user' 'int ()'
DeclRefExpr 0x2022318 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2022438 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2022970 <col:12> 'void *(size_t, gfp_t)' Function 0x1b40290 'kzalloc' 'void *(size_t, gfp_t)'
DeclRefExpr 0x2022d28 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2023258 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2023468 <col:9> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20236f0 <col:8> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20237e0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20239f8 <col:2> 'void (struct filename *)' Function 0x1e46970 'audit_getname' 'void (struct filename *)'
DeclRefExpr 0x2023b68 <col:2> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
FunctionDecl 0x20220b0 <<invalid sloc>> strncpy_from_user 'int ()'
FunctionDecl 0x2023e20 prev 0x1c7be00 <line:207:1, line:211:1> getname 'struct filename *(const char *)'
DeclRefExpr 0x2023ec8 <col:9> 'struct filename *(const char *, int, int *)' Function 0x2021110 'getname_flags' 'struct filename *(const char *, int, int *)'
FunctionDecl 0x2024220 <line:223:1, line:267:1> check_acl 'int (struct inode *, int)' static
FunctionDecl 0x2024480 <namei.c:272:1, line:295:1> acl_permission_check 'int (struct inode *, int)' static
FunctionDecl 0x2025520 prev 0x1c84aa0 <namei.c:311:1, line:349:1> generic_permission 'int (struct inode *, int)'
DeclRefExpr 0x2025678 <col:8> 'int (struct inode *, int)' Function 0x2024480 'acl_permission_check' 'int (struct inode *, int)'
DeclRefExpr 0x20258d0 <col:6> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x20259e0 <col:7> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
DeclRefExpr 0x2025c60 <col:8> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
DeclRefExpr 0x20262e0 <col:7> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
FunctionDecl 0x2026650 <line:357:1, line:369:1> do_inode_permission 'int (struct inode *, int)' static inline
DeclRefExpr 0x2026700 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2026898 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x2026bb0 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x2026d78 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x2026ee0 <col:9> 'int (struct inode *, int)' Function 0x2025520 'generic_permission' 'int (struct inode *, int)'
FunctionDecl 0x2027180 prev 0x2015100 <line:383:1, line:404:1> __inode_permission 'int (struct inode *, int)'
DeclRefExpr 0x20272b0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20275d8 <col:11> 'int (struct inode *, int)' Function 0x2026650 'do_inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20277f0 <col:11> 'int (struct inode *, int)' Function 0x2005de0 'devcgroup_inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20279e0 <col:9> 'int (struct inode *, int)' Function 0x1e74290 'security_inode_permission' 'int (struct inode *, int)'
FunctionDecl 0x2027dc0 <line:414:1, line:425:1> sb_permission 'int (struct super_block *, struct inode *, int)' static
DeclRefExpr 0x2027e78 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2028d00 <col:8> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x2028dc8 <col:25> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x2028eb8 <col:42> 'int ()' Function 0x1c81f60 'S_ISLNK' 'int ()'
FunctionDecl 0x20292a0 prev 0x1c848c0 <line:438:1, line:446:1> inode_permission 'int (struct inode *, int)'
DeclRefExpr 0x20293f8 <col:11> 'int (struct super_block *, struct inode *, int)' Function 0x2027dc0 'sb_permission' 'int (struct super_block *, struct inode *, int)'
DeclRefExpr 0x20296d0 <col:9> 'int (struct inode *, int)' Function 0x2027180 '__inode_permission' 'int (struct inode *, int)'
FunctionDecl 0x2029900 prev 0x1a32e30 <line:454:1, line:458:1> path_get 'void (const struct path *)'
DeclRefExpr 0x20299a8 <col:2> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x2029af8 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
FunctionDecl 0x2029d60 prev 0x1a32f80 <line:467:1, line:471:1> path_put 'void (const struct path *)'
DeclRefExpr 0x2029e08 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2029f00 <col:2> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
FunctionDecl 0x202a280 <line:495:1, line:568:1> unlazy_walk 'int (struct nameidata *, struct dentry *)' static
DeclRefExpr 0x202a528 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x202a6c0 <col:7> 'bool (struct vfsmount *, unsigned int)' Function 0x201c620 'legitimize_mnt' 'bool (struct vfsmount *, unsigned int)'
DeclRefExpr 0x202aa88 <col:7> 'int (struct lockref *)' Function 0x1b45720 'lockref_get_not_dead' 'int (struct lockref *)'
DeclRefExpr 0x202ae68 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202b058 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x202b228 <col:8> 'int (struct lockref *)' Function 0x1b45720 'lockref_get_not_dead' 'int (struct lockref *)'
DeclRefExpr 0x202b390 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202b820 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x202bd00 <col:3> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x202be18 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x202bf80 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202c028 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x202c148 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202c1d0 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x202c2d0 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
FunctionDecl 0x202c850 <line:570:1, line:573:1> d_revalidate 'int (struct dentry *, unsigned int)' static inline
FunctionDecl 0x202cc20 <line:585:1, line:628:1> complete_walk 'int (struct nameidata *)' static
DeclRefExpr 0x202d338 <col:8> 'bool (struct vfsmount *, unsigned int)' Function 0x201c620 'legitimize_mnt' 'bool (struct vfsmount *, unsigned int)'
DeclRefExpr 0x202d510 <col:4> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202d630 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x202d658 <col:17> 'int (struct lockref *)' Function 0x1b45720 'lockref_get_not_dead' 'int (struct lockref *)'
DeclRefExpr 0x202d7c0 <col:4> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202d828 <col:4> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x202da10 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x202dbb8 <col:4> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202dc20 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x202dcd0 <col:4> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x202dec0 <col:3> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
DeclRefExpr 0x202dfa0 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x202e1a8 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x202e7e8 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x202eaf0 <line:630:1, line:634:1> set_root 'void (struct nameidata *)' static inline
FunctionDecl 0x202eea0 <namei.c:636:1, col:59> link_path_walk 'int (const char *, struct nameidata *)' static
FunctionDecl 0x202f000 <line:638:1, line:650:1> set_root_rcu 'void (struct nameidata *)' static inline
DeclRefExpr 0x202f308 <col:10> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x202f5d8 <col:14> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x202f7c0 <col:12> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
FunctionDecl 0x202fb80 <namei.c:652:1, line:657:1> path_put_conditional 'void (struct path *, struct nameidata *)' static
DeclRefExpr 0x202fc30 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x202fe90 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
FunctionDecl 0x20301a0 <line:659:1, line:669:1> path_to_nameidata 'void (const struct path *, struct nameidata *)' static inline
DeclRefExpr 0x2030378 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2030608 <col:4> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
FunctionDecl 0x2031030 prev 0x1cb1c40 <line:675:1, line:682:1> nd_jump_link 'void (struct nameidata *, struct path *)'
DeclRefExpr 0x20310e0 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x2031800 <namei.c:684:1, line:690:1> put_link 'void (struct nameidata *, struct path *, void *)' static inline
DeclRefExpr 0x2031d38 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x2032130 <line:711:1, line:737:1> may_follow_link 'int (struct path *, struct nameidata *)' static inline
DeclRefExpr 0x2032888 <col:6> 'bool (kuid_t, kuid_t)' Function 0x1a34e40 'uid_eq' 'bool (kuid_t, kuid_t)'
DeclRefExpr 0x2032a80 <col:2> 'void (const char *, const struct path *)' Function 0x1e4efa0 'audit_log_link_denied' 'void (const char *, const struct path *)'
DeclRefExpr 0x2032c18 <col:2> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x2032d68 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x2033020 <line:751:1, line:772:1> safe_hardlink_source 'bool (struct inode *)' static
DeclRefExpr 0x20331d8 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x2033460 <col:6> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
FunctionDecl 0x2033780 <line:786:1, line:806:1> may_linkat 'int (struct path *)' static
DeclRefExpr 0x2033c58 <col:6> 'bool (kuid_t, kuid_t)' Function 0x1a34e40 'uid_eq' 'bool (kuid_t, kuid_t)'
DeclRefExpr 0x2033de0 <col:43> 'bool (struct inode *)' Function 0x2033020 'safe_hardlink_source' 'bool (struct inode *)'
DeclRefExpr 0x2033f40 <col:6> 'bool (int)' Function 0x1a17010 'capable' 'bool (int)'
DeclRefExpr 0x20340e0 <col:2> 'void (const char *, const struct path *)' Function 0x1e4efa0 'audit_log_link_denied' 'void (const char *, const struct path *)'
FunctionDecl 0x2034510 <line:808:1, line:868:1> follow_link 'int (struct path *, struct nameidata *, void **)' static inline
DeclRefExpr 0x2034840 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2034b00 <col:3> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x2034d50 <col:2> 'void (const char *, int, int)' Function 0x19197c0 '__might_sleep' 'void (const char *, int, int)'
DeclRefExpr 0x2034e70 <col:2> 'int (void)' Function 0x1e0f050 '_cond_resched' 'int (void)'
DeclRefExpr 0x2034f20 <col:2> 'void (const struct path *)' Function 0x1c6d6e0 'touch_atime' 'void (const struct path *)'
DeclRefExpr 0x2034fe8 <col:2> 'void (struct nameidata *, char *)' Function 0x1cb1ea0 'nd_set_link' 'void (struct nameidata *, char *)'
DeclRefExpr 0x20351b0 <col:10> 'int (struct dentry *, struct nameidata *)' Function 0x1e74050 'security_inode_follow_link' 'int (struct dentry *, struct nameidata *)'
DeclRefExpr 0x2035800 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20359d0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2035b98 <col:6> 'char *(struct nameidata *)' Function 0x1cb2240 'nd_get_link' 'char *(struct nameidata *)'
DeclRefExpr 0x2035d10 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2035d38 <col:16> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2035e30 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2035f48 <col:4> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2036118 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2036318 <col:4> 'void (struct nameidata *)' Function 0x202eaf0 'set_root' 'void (struct nameidata *)'
DeclRefExpr 0x2036428 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2036660 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2036a88 <col:11> 'int (const char *, struct nameidata *)' Function 0x202eea0 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x2036c18 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2036cc8 <col:4> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2037060 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x2037178 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x2035760 <<invalid sloc>> PTR_ERR 'int ()'
FunctionDecl 0x2035930 <<invalid sloc>> IS_ERR 'int ()'
FunctionDecl 0x2037420 <namei.c:870:1, line:883:1> follow_up_rcu 'int (struct path *)' static
DeclRefExpr 0x2037548 <col:22> 'struct mount *(struct vfsmount *)' Function 0x201b430 'real_mount' 'struct mount *(struct vfsmount *)'
FunctionDecl 0x2037e40 prev 0x1cb15f0 <line:895:1, line:915:1> follow_up 'int (struct path *)'
DeclRefExpr 0x2037f68 <col:22> 'struct mount *(struct vfsmount *)' Function 0x201b430 'real_mount' 'struct mount *(struct vfsmount *)'
DeclRefExpr 0x20381b0 <col:2> 'void (seqlock_t *)' Function 0x19f0bd0 'read_seqlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x20383e8 <col:3> 'void (seqlock_t *)' Function 0x19f3020 'read_sequnlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x2038538 <col:2> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x2038660 <col:15> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2038780 <col:2> 'void (seqlock_t *)' Function 0x19f3020 'read_sequnlock_excl' 'void (seqlock_t *)'
DeclRefExpr 0x2038838 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2038a08 <col:2> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
FunctionDecl 0x2039380 <line:922:1, line:990:1> follow_automount 'int (struct path *, unsigned int, bool *)' static
DeclRefExpr 0x2039e30 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2039ee0 <col:7> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x203a170 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x203a400 <col:3> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x203a640 <col:8> 'int (struct vfsmount *, struct path *)' Function 0x2015ff0 'finish_automount' 'int (struct vfsmount *, struct path *)'
DeclRefExpr 0x203a940 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x203ab50 <col:18> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
FunctionDecl 0x203af90 <line:1002:1, line:1061:1> follow_managed 'int (struct path *, unsigned int)' static
DeclRefExpr 0x203cc58 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
FunctionDecl 0x203d130 prev 0x1cb1350 <line:1063:1, line:1076:1> follow_down_one 'int (struct path *)'
DeclRefExpr 0x203d298 <col:12> 'struct vfsmount *(struct path *)' Function 0x2015d90 'lookup_mnt' 'struct vfsmount *(struct path *)'
DeclRefExpr 0x203d3b0 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x203d4a8 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x203d6e8 <col:18> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
FunctionDecl 0x203da60 <line:1078:1, line:1082:1> managed_dentry_might_block 'bool (struct dentry *)' static inline
FunctionDecl 0x203e0c0 <line:1088:1, line:1118:1> __follow_mount_rcu 'bool (struct nameidata *, struct path *, struct inode **)' static
DeclRefExpr 0x203e210 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x203e238 <col:16> 'bool (struct dentry *)' Function 0x203da60 'managed_dentry_might_block' 'bool (struct dentry *)'
DeclRefExpr 0x203e478 <col:8> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x203e610 <col:13> 'struct mount *(struct vfsmount *, struct dentry *)' Function 0x201c1c0 '__lookup_mnt' 'struct mount *(struct vfsmount *, struct dentry *)'
DeclRefExpr 0x203ec88 <col:13> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
FunctionDecl 0x203f140 <line:1120:1, line:1131:1> follow_mount_rcu 'void (struct nameidata *)' static
DeclRefExpr 0x203f1e8 <col:9> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x203f3e8 <col:13> 'struct mount *(struct vfsmount *, struct dentry *)' Function 0x201c1c0 '__lookup_mnt' 'struct mount *(struct vfsmount *, struct dentry *)'
DeclRefExpr 0x203f9e0 <col:13> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
FunctionDecl 0x203fcd0 <line:1133:1, line:1168:1> follow_dotdot_rcu 'int (struct nameidata *)' static
DeclRefExpr 0x203fd78 <col:2> 'void (struct nameidata *)' Function 0x202f000 'set_root_rcu' 'void (struct nameidata *)'
DeclRefExpr 0x2040708 <col:10> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2040848 <col:8> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2040ce8 <col:8> 'int (struct path *)' Function 0x2037420 'follow_up_rcu' 'int (struct path *)'
DeclRefExpr 0x2040f10 <col:13> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2041128 <col:2> 'void (struct nameidata *)' Function 0x203f140 'follow_mount_rcu' 'void (struct nameidata *)'
DeclRefExpr 0x2041eb0 <col:2> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
FunctionDecl 0x2042080 prev 0x1cb14a0 <namei.c:1175:1, line:1217:1> follow_down 'int (struct path *)'
FunctionDecl 0x2043720 <line:1222:1, line:1233:1> follow_mount 'void (struct path *)' static
DeclRefExpr 0x20437c8 <col:9> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x2043958 <col:30> 'struct vfsmount *(struct path *)' Function 0x2015d90 'lookup_mnt' 'struct vfsmount *(struct path *)'
DeclRefExpr 0x2043ac0 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2043bb8 <col:3> 'void (struct vfsmount *)' Function 0x2000770 'mntput' 'void (struct vfsmount *)'
DeclRefExpr 0x2043df8 <col:18> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
FunctionDecl 0x2044050 <line:1235:1, line:1257:1> follow_dotdot 'void (struct nameidata *)' static
DeclRefExpr 0x20440f8 <col:2> 'void (struct nameidata *)' Function 0x202eaf0 'set_root' 'void (struct nameidata *)'
DeclRefExpr 0x2044950 <col:22> 'struct dentry *(struct dentry *)' Function 0x1b55540 'dget_parent' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2044aa0 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2044bc0 <col:8> 'int (struct path *)' Function 0x2037e40 'follow_up' 'int (struct path *)'
DeclRefExpr 0x2044d80 <col:2> 'void (struct path *)' Function 0x2043720 'follow_mount' 'void (struct path *)'
FunctionDecl 0x20453a0 <line:1266:1, line:1297:1> lookup_dcache 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)' static
DeclRefExpr 0x2045670 <col:11> 'struct dentry *(const struct dentry *, const struct qstr *)' Function 0x1b51a50 'd_lookup' 'struct dentry *(const struct dentry *, const struct qstr *)'
DeclRefExpr 0x2045970 <col:12> 'int (struct dentry *, unsigned int)' Function 0x202c850 'd_revalidate' 'int (struct dentry *, unsigned int)'
DeclRefExpr 0x2045ac0 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2045c40 <col:6> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2045cf0 <col:13> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2045e00 <col:17> 'int (struct dentry *)' Function 0x1b4f910 'd_invalidate' 'int (struct dentry *)'
DeclRefExpr 0x2045ed0 <col:6> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2046268 <col:12> 'struct dentry *(struct dentry *, const struct qstr *)' Function 0x1b4b280 'd_alloc' 'struct dentry *(struct dentry *, const struct qstr *)'
DeclRefExpr 0x20463f8 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20464c8 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
FunctionDecl 0x2046980 <line:1305:1, line:1322:1> lookup_real 'struct dentry *(struct inode *, struct dentry *, unsigned int)' static
DeclRefExpr 0x2046ad0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2046c68 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2046d18 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2047078 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2047128 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
FunctionDecl 0x20475d0 <line:1324:1, line:1335:1> __lookup_hash 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' static
DeclRefExpr 0x20477d8 <col:11> 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)' Function 0x20453a0 'lookup_dcache' 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)'
DeclRefExpr 0x2047ad8 <col:9> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
FunctionDecl 0x2047f40 <line:1342:1, line:1433:1> lookup_fast 'int (struct nameidata *, struct path *, struct inode **)' static
DeclRefExpr 0x2048688 <col:12> 'struct dentry *(const struct dentry *, const struct qstr *, unsigned int *)' Function 0x1b52200 '__d_lookup_rcu' 'struct dentry *(const struct dentry *, const struct qstr *, unsigned int *)'
DeclRefExpr 0x2048ac0 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2048cb0 <col:7> 'int (const seqcount_t *, unsigned int)' Function 0x19e53f0 '__read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2048fc0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049140 <col:13> 'int (struct dentry *, unsigned int)' Function 0x202c850 'd_revalidate' 'int (struct dentry *, unsigned int)'
DeclRefExpr 0x20492a8 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049760 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049788 <col:17> 'bool (struct nameidata *, struct path *, struct inode **)' Function 0x203e0c0 '__follow_mount_rcu' 'bool (struct nameidata *, struct path *, struct inode **)'
DeclRefExpr 0x20499d8 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2049c30 <col:7> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x2049ee8 <col:12> 'struct dentry *(const struct dentry *, const struct qstr *)' Function 0x1b51ee0 '__d_lookup' 'struct dentry *(const struct dentry *, const struct qstr *)'
DeclRefExpr 0x204a0d8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204a230 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204a418 <col:12> 'int (struct dentry *, unsigned int)' Function 0x202c850 'd_revalidate' 'int (struct dentry *, unsigned int)'
DeclRefExpr 0x204a5b0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204a730 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x204a898 <col:8> 'int (struct dentry *)' Function 0x1b4f910 'd_invalidate' 'int (struct dentry *)'
DeclRefExpr 0x204a968 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x204acb8 <col:8> 'int (struct path *, unsigned int)' Function 0x203af90 'follow_managed' 'int (struct path *, unsigned int)'
DeclRefExpr 0x204ae80 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204af78 <col:3> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
FunctionDecl 0x204b6d0 <line:1436:1, line:1459:1> lookup_slow 'int (struct nameidata *, struct path *)' static
DeclRefExpr 0x204ba48 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x204bbf0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x204bd60 <col:11> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
DeclRefExpr 0x204bfb8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x204c100 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x204c1b0 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x204c500 <col:8> 'int (struct path *, unsigned int)' Function 0x203af90 'follow_managed' 'int (struct path *, unsigned int)'
DeclRefExpr 0x204c668 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204c760 <col:3> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
FunctionDecl 0x204cbd0 <line:1461:1, line:1471:1> may_lookup 'int (struct nameidata *)' static inline
DeclRefExpr 0x204cdc8 <col:13> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x204d080 <col:7> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x204d2b8 <col:9> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
FunctionDecl 0x204d5d0 <namei.c:1473:1, line:1483:1> handle_dots 'int (struct nameidata *, int)' static inline
DeclRefExpr 0x204d7f8 <col:8> 'int (struct nameidata *)' Function 0x203fcd0 'follow_dotdot_rcu' 'int (struct nameidata *)'
DeclRefExpr 0x204d9b8 <col:4> 'void (struct nameidata *)' Function 0x2044050 'follow_dotdot' 'void (struct nameidata *)'
FunctionDecl 0x204dc00 <line:1485:1, line:1495:1> terminate_walk 'void (struct nameidata *)' static
DeclRefExpr 0x204ddd0 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x204e2b8 <col:3> 'void (void)' Function 0x1a71190 'rcu_read_unlock' 'void (void)'
FunctionDecl 0x204e550 <line:1503:1, line:1506:1> should_follow_link 'int (struct dentry *, int)' static inline
DeclRefExpr 0x204e600 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204e628 <col:18> 'bool (const struct dentry *)' Function 0x1a31a00 'd_is_symlink' 'bool (const struct dentry *)'
FunctionDecl 0x204ea70 <line:1508:1, line:1554:1> walk_component 'int (struct nameidata *, struct path *, int)' static inline
DeclRefExpr 0x204ec40 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204ed88 <col:10> 'int (struct nameidata *, int)' Function 0x204d5d0 'handle_dots' 'int (struct nameidata *, int)'
DeclRefExpr 0x204efa0 <col:8> 'int (struct nameidata *, struct path *, struct inode **)' Function 0x2047f40 'lookup_fast' 'int (struct nameidata *, struct path *, struct inode **)'
DeclRefExpr 0x204f168 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204f348 <col:9> 'int (struct nameidata *, struct path *)' Function 0x204b6d0 'lookup_slow' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x204f890 <col:6> 'int (struct dentry *, int)' Function 0x204e550 'should_follow_link' 'int (struct dentry *, int)'
DeclRefExpr 0x204fb10 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x204fb38 <col:17> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x204fe10 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2050058 <col:2> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x20502d8 <col:2> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x2050408 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
FunctionDecl 0x2050700 <line:1563:1, line:1591:1> nested_symlink 'int (struct path *, struct nameidata *)' static inline
DeclRefExpr 0x2050b20 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2050ec8 <col:9> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x2051148 <col:9> 'int (struct nameidata *, struct path *, int)' Function 0x204ea70 'walk_component' 'int (struct nameidata *, struct path *, int)'
DeclRefExpr 0x20512e8 <col:3> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
FunctionDecl 0x2051780 prev 0x1b47050 <line:1682:1, line:1688:1> full_name_hash 'unsigned int (const unsigned char *, unsigned int)'
DeclRefExpr 0x2051958 <col:10> 'unsigned long (unsigned long, unsigned long)' Function 0x1b469a0 'partial_name_hash' 'unsigned long (unsigned long, unsigned long)'
DeclRefExpr 0x2051b50 <col:9> 'unsigned long (unsigned long)' Function 0x1b46d80 'end_name_hash' 'unsigned long (unsigned long)'
FunctionDecl 0x2051de0 <line:1695:1, line:1708:1> hash_name 'unsigned long (const char *, unsigned int *)' static inline
DeclRefExpr 0x2052210 <col:10> 'unsigned long (unsigned long, unsigned long)' Function 0x1b469a0 'partial_name_hash' 'unsigned long (unsigned long, unsigned long)'
DeclRefExpr 0x2052648 <col:11> 'unsigned long (unsigned long)' Function 0x1b46d80 'end_name_hash' 'unsigned long (unsigned long)'
FunctionDecl 0x2052900 prev 0x202eea0 <line:1720:1, line:1798:1> link_path_walk 'int (const char *, struct nameidata *)' static
DeclRefExpr 0x2052ec8 <col:9> 'int (struct nameidata *)' Function 0x204cbd0 'may_lookup' 'int (struct nameidata *)'
DeclRefExpr 0x2053048 <col:9> 'unsigned long (const char *, unsigned int *)' Function 0x2051de0 'hash_name' 'unsigned long (const char *, unsigned int *)'
DeclRefExpr 0x2053ad8 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x2053e28 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2054660 <col:12> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2054a28 <col:9> 'int (struct nameidata *, struct path *, int)' Function 0x204ea70 'walk_component' 'int (struct nameidata *, struct path *, int)'
DeclRefExpr 0x2054cf8 <col:10> 'int (struct path *, struct nameidata *)' Function 0x2050700 'nested_symlink' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x2054fa0 <col:8> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20552f8 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
FunctionDecl 0x2055810 <line:1800:1, line:1888:1> path_init 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' static
DeclRefExpr 0x2055fd0 <col:9> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x2056170 <col:13> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x2056638 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2056710 <col:14> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2056938 <col:16> 'unsigned int (const seqlock_t *)' Function 0x19e6ff0 'read_seqbegin' 'unsigned int (const seqlock_t *)'
DeclRefExpr 0x2056a60 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2056e50 <col:14> 'unsigned int (const seqlock_t *)' Function 0x19e6ff0 'read_seqbegin' 'unsigned int (const seqlock_t *)'
DeclRefExpr 0x20570b8 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2057120 <col:4> 'void (struct nameidata *)' Function 0x202f000 'set_root_rcu' 'void (struct nameidata *)'
DeclRefExpr 0x20571f8 <col:4> 'void (struct nameidata *)' Function 0x202eaf0 'set_root' 'void (struct nameidata *)'
DeclRefExpr 0x20572a8 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x20577c0 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2057850 <col:11> 'unsigned int (const seqcount_t *)' Function 0x19e3be0 'read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2057b20 <col:15> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2057d08 <col:13> 'int (const seqcount_t *, unsigned int)' Function 0x19e5780 'read_seqcount_retry' 'int (const seqcount_t *, unsigned int)'
DeclRefExpr 0x2057fd8 <col:17> 'struct fd (unsigned int)' Function 0x20046f0 'fdget_raw' 'struct fd (unsigned int)'
DeclRefExpr 0x2058480 <col:9> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x2058568 <col:5> 'void (struct fd)' Function 0x2003670 'fdput' 'void (struct fd)'
DeclRefExpr 0x2058b78 <col:14> 'unsigned int (const seqcount_t *)' Function 0x19e3140 '__read_seqcount_begin' 'unsigned int (const seqcount_t *)'
DeclRefExpr 0x2058d30 <col:4> 'void (void)' Function 0x1a70e80 'rcu_read_lock' 'void (void)'
DeclRefExpr 0x2058dc8 <col:4> 'void (const struct path *)' Function 0x2029900 'path_get' 'void (const struct path *)'
DeclRefExpr 0x2058ee0 <col:4> 'void (struct fd)' Function 0x2003670 'fdput' 'void (struct fd)'
FunctionDecl 0x2059410 <line:1890:1, line:1897:1> lookup_last 'int (struct nameidata *, struct path *)' static inline
DeclRefExpr 0x2059a90 <col:9> 'int (struct nameidata *, struct path *, int)' Function 0x204ea70 'walk_component' 'int (struct nameidata *, struct path *, int)'
FunctionDecl 0x2059f90 <namei.c:1900:1, line:1964:1> path_lookupat 'int (int, const char *, unsigned int, struct nameidata *)' static
DeclRefExpr 0x205a2b8 <col:8> 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' Function 0x2055810 'path_init' 'int (int, const char *, unsigned int, struct nameidata *, struct file **)'
DeclRefExpr 0x205a570 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205a6f8 <col:8> 'int (const char *, struct nameidata *)' Function 0x2052900 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x205a9a8 <col:9> 'int (struct nameidata *, struct path *)' Function 0x2059410 'lookup_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x205acd8 <col:10> 'int (struct path *, struct nameidata *)' Function 0x2032130 'may_follow_link' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x205ae00 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205aff8 <col:10> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x205b218 <col:10> 'int (struct nameidata *, struct path *)' Function 0x2059410 'lookup_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x205b340 <col:4> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x205b5f0 <col:9> 'int (struct nameidata *)' Function 0x202cc20 'complete_walk' 'int (struct nameidata *)'
DeclRefExpr 0x205b868 <col:8> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x205b9c8 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x205bc58 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x205bf40 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x205c5a0 <line:1966:1, line:1979:1> filename_lookup 'int (int, struct filename *, unsigned int, struct nameidata *)' static
DeclRefExpr 0x205c6c8 <col:15> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205c968 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205caa8 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205ccd0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x205ce10 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205d098 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x205d168 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
FunctionDecl 0x205d6e0 <line:1981:1, line:1987:1> do_path_lookup 'int (int, const char *, unsigned int, struct nameidata *)' static
DeclRefExpr 0x205d988 <col:9> 'int (int, struct filename *, unsigned int, struct nameidata *)' Function 0x205c5a0 'filename_lookup' 'int (int, struct filename *, unsigned int, struct nameidata *)'
FunctionDecl 0x205dcf0 prev 0x1cb0b00 <line:1990:1, line:2010:1> kern_path_locked 'struct dentry *(const char *, struct path *)'
DeclRefExpr 0x205df38 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x205e118 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x205e3b0 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x205e4b0 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x205e5f0 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x205e7c0 <col:6> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
DeclRefExpr 0x205e9b8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x205ea68 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x205ec10 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x205f120 prev 0x1caffa0 <line:2012:1, line:2019:1> kern_path 'int (const char *, unsigned int, struct path *)'
DeclRefExpr 0x205f2d8 <col:12> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
FunctionDecl 0x205f980 prev 0x20157f0 <line:2029:1, line:2043:1> vfs_path_lookup 'int (struct dentry *, struct vfsmount *, const char *, unsigned int, struct path *)'
DeclRefExpr 0x205fd40 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x205fe78 <col:8> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
FunctionDecl 0x2060420 <line:2050:1, line:2053:1> lookup_hash 'struct dentry *(struct nameidata *)' static
DeclRefExpr 0x20604c8 <col:9> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
FunctionDecl 0x2060940 prev 0x1cb1170 <line:2066:1, line:2105:1> lookup_one_len 'struct dentry *(const char *, struct dentry *, int)'
DeclRefExpr 0x2060b90 <col:2> 'int ()' Function 0x1efaab0 'WARN_ON_ONCE' 'int ()'
DeclRefExpr 0x2060bb8 <col:16> 'int (struct mutex *)' Function 0x1a3fee0 'mutex_is_locked' 'int (struct mutex *)'
DeclRefExpr 0x2061060 <col:14> 'unsigned int (const unsigned char *, unsigned int)' Function 0x2051780 'full_name_hash' 'unsigned int (const unsigned char *, unsigned int)'
DeclRefExpr 0x2061240 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2061358 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2061738 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2061b88 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2062090 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x2062228 <col:8> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20623b0 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20624c8 <col:9> 'struct dentry *(struct qstr *, struct dentry *, unsigned int)' Function 0x20475d0 '__lookup_hash' 'struct dentry *(struct qstr *, struct dentry *, unsigned int)'
FunctionDecl 0x2062930 prev 0x1cafca0 <line:2107:1, line:2123:1> user_path_at_empty 'int (int, const char *, unsigned int, struct path *, int *)'
DeclRefExpr 0x2062b18 <col:25> 'struct filename *(const char *, int, int *)' Function 0x2021110 'getname_flags' 'struct filename *(const char *, int, int *)'
DeclRefExpr 0x2062cf8 <col:12> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2062dc0 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2062e90 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x2062fc8 <col:9> 'int (int, struct filename *, unsigned int, struct nameidata *)' Function 0x205c5a0 'filename_lookup' 'int (int, struct filename *, unsigned int, struct nameidata *)'
DeclRefExpr 0x2063180 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
FunctionDecl 0x20636d0 prev 0x1caea80 <line:2125:1, line:2129:1> user_path_at 'int (int, const char *, unsigned int, struct path *)'
DeclRefExpr 0x2063790 <col:9> 'int (int, const char *, unsigned int, struct path *, int *)' Function 0x2062930 'user_path_at_empty' 'int (int, const char *, unsigned int, struct path *, int *)'
FunctionDecl 0x2063d20 <namei.c:2137:1, line:2157:1> user_path_parent 'struct filename *(int, const char *, struct nameidata *, unsigned int)' static
DeclRefExpr 0x2063e68 <col:23> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x2064048 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20641b0 <col:10> 'int (int, struct filename *, unsigned int, struct nameidata *)' Function 0x205c5a0 'filename_lookup' 'int (int, struct filename *, unsigned int, struct nameidata *)'
DeclRefExpr 0x2064400 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20644b0 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
FunctionDecl 0x2064800 <line:2186:1, line:2249:1> mountpoint_last 'int (struct nameidata *, struct path *)' static
DeclRefExpr 0x2064c30 <col:7> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x2065008 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2065178 <col:11> 'int (struct nameidata *, int)' Function 0x204d5d0 'handle_dots' 'int (struct nameidata *, int)'
DeclRefExpr 0x2065390 <col:12> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2065598 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x2065708 <col:11> 'struct dentry *(const struct dentry *, const struct qstr *)' Function 0x1b51a50 'd_lookup' 'struct dentry *(const struct dentry *, const struct qstr *)'
DeclRefExpr 0x2065930 <col:12> 'struct dentry *(struct dentry *, const struct qstr *)' Function 0x1b4b280 'd_alloc' 'struct dentry *(struct dentry *, const struct qstr *)'
DeclRefExpr 0x2065ba8 <col:4> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x2065d90 <col:12> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x2065fb0 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2066088 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2066138 <col:4> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x2066360 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20665e0 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2066870 <col:14> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x20669c0 <col:6> 'int (struct dentry *, int)' Function 0x204e550 'should_follow_link' 'int (struct dentry *, int)'
DeclRefExpr 0x2066be8 <col:2> 'void (struct path *)' Function 0x2043720 'follow_mount' 'void (struct path *)'
DeclRefExpr 0x2066d08 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
FunctionDecl 0x2067120 <line:2261:1, line:2299:1> path_mountpoint 'int (int, const char *, struct path *, unsigned int)' static
DeclRefExpr 0x2067448 <col:8> 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' Function 0x2055810 'path_init' 'int (int, const char *, unsigned int, struct nameidata *, struct file **)'
DeclRefExpr 0x20676b0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2067838 <col:8> 'int (const char *, struct nameidata *)' Function 0x2052900 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x2067a48 <col:8> 'int (struct nameidata *, struct path *)' Function 0x2064800 'mountpoint_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x2067db0 <col:9> 'int (struct path *, struct nameidata *)' Function 0x2032130 'may_follow_link' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x2067ee0 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20680c0 <col:9> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x20682e8 <col:9> 'int (struct nameidata *, struct path *)' Function 0x2064800 'mountpoint_last' 'int (struct nameidata *, struct path *)'
DeclRefExpr 0x2068410 <col:3> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x2068628 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x2068900 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x2068dd0 <line:2301:1, line:2313:1> filename_mountpoint 'int (int, struct filename *, struct path *, unsigned int)' static
DeclRefExpr 0x2068ef8 <col:14> 'int (int, const char *, struct path *, unsigned int)' Function 0x2067120 'path_mountpoint' 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x2069198 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20692d8 <col:11> 'int (int, const char *, struct path *, unsigned int)' Function 0x2067120 'path_mountpoint' 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x2069500 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x2069640 <col:11> 'int (int, const char *, struct path *, unsigned int)' Function 0x2067120 'path_mountpoint' 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20698c8 <col:6> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x2069998 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
FunctionDecl 0x2069e60 prev 0x20153c0 <line:2329:1, line:2340:1> user_path_mountpoint_at 'int (int, const char *, unsigned int, struct path *)'
DeclRefExpr 0x2069fa8 <col:23> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x206a0f0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x206a1a0 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x206a2c8 <col:10> 'int (int, struct filename *, struct path *, unsigned int)' Function 0x2068dd0 'filename_mountpoint' 'int (int, struct filename *, struct path *, unsigned int)'
DeclRefExpr 0x206a4d0 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
FunctionDecl 0x206a840 prev 0x1cb0e60 <line:2342:1, line:2348:1> kern_path_mountpoint 'int (int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x206aae8 <col:9> 'int (int, struct filename *, struct path *, unsigned int)' Function 0x2068dd0 'filename_mountpoint' 'int (int, struct filename *, struct path *, unsigned int)'
FunctionDecl 0x206aea0 <line:2355:1, line:2366:1> check_sticky 'int (struct inode *, struct inode *)' static inline
DeclRefExpr 0x206b368 <col:10> 'bool (const struct inode *, int)' Function 0x1a17510 'inode_capable' 'bool (const struct inode *, int)'
FunctionDecl 0x206b710 <namei.c:2387:1, line:2420:1> may_delete 'int (struct inode *, struct dentry *, bool)' static
DeclRefExpr 0x206b970 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x206bac8 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x206bb98 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x206bd40 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x206bed0 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x206c2a0 <col:6> 'int (struct inode *, struct inode *)' Function 0x206aea0 'check_sticky' 'int (struct inode *, struct inode *)'
DeclRefExpr 0x206c8b8 <col:8> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x206c9a0 <col:35> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x206cd48 <col:13> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x206ce10 <col:39> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
FunctionDecl 0x206d520 <line:2430:1, line:2438:1> may_create 'int (struct inode *, struct dentry *)' static inline
DeclRefExpr 0x206d5d0 <col:2> 'void (const struct inode *, const struct dentry *, const unsigned char)' Function 0x1e47890 'audit_inode_child' 'void (const struct inode *, const struct dentry *, const unsigned char)'
DeclRefExpr 0x206da08 <col:9> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
FunctionDecl 0x206dcd0 prev 0x1cb17e0 <namei.c:2443:1, line:2471:1> lock_rename 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x206dec8 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e118 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e2d0 <col:6> 'struct dentry *(struct dentry *, struct dentry *)' Function 0x1b517c0 'd_ancestor' 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x206e490 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e5d8 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206e808 <col:6> 'struct dentry *(struct dentry *, struct dentry *)' Function 0x1b517c0 'd_ancestor' 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x206e968 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206eab0 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206ecb8 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x206ee00 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
FunctionDecl 0x206f1a0 prev 0x1cb19d0 <namei.c:2473:1, line:2480:1> unlock_rename 'void (struct dentry *, struct dentry *)'
DeclRefExpr 0x206f250 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x206f440 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x206f588 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
FunctionDecl 0x206f9c0 prev 0x1c52820 <line:2482:1, line:2500:1> vfs_create 'int (struct inode *, struct dentry *, umode_t, bool)'
DeclRefExpr 0x206fae8 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x206fee8 <col:10> 'int (struct inode *, struct dentry *, umode_t)' Function 0x1e726e0 'security_inode_create' 'int (struct inode *, struct dentry *, umode_t)'
DeclRefExpr 0x2070418 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
FunctionDecl 0x2070890 <line:2502:1, line:2552:1> may_open 'int (struct path *, int, int)' static
DeclRefExpr 0x2070e68 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20715e8 <col:27> 'bool (const struct inode *)' Function 0x1c524b0 'inode_owner_or_capable' 'bool (const struct inode *)'
FunctionDecl 0x2071940 <line:2554:1, line:2574:1> handle_truncate 'int (struct file *)' static
DeclRefExpr 0x1bb3fe8 <col:14> 'int (struct inode *)' Function 0x1c86390 'get_write_access' 'int (struct inode *)'
DeclRefExpr 0x1bb41a8 <col:10> 'int (struct inode *)' Function 0x1c78e90 'locks_verify_locked' 'int (struct inode *)'
DeclRefExpr 0x1bb4308 <col:11> 'int (struct path *)' Function 0x1e8fc60 'security_path_truncate' 'int (struct path *)'
DeclRefExpr 0x1bb4498 <col:11> 'int (struct dentry *, loff_t, unsigned int, struct file *)' Function 0x1c7a5f0 'do_truncate' 'int (struct dentry *, loff_t, unsigned int, struct file *)'
DeclRefExpr 0x1bb48f0 <col:2> 'void (struct inode *)' Function 0x1c86b50 'put_write_access' 'void (struct inode *)'
FunctionDecl 0x1bb4af0 <line:2576:1, line:2581:1> open_to_namei_flags 'int (int)' static inline
FunctionDecl 0x1bb4f30 <line:2583:1, line:2594:1> may_o_create 'int (struct path *, struct dentry *, umode_t)' static
DeclRefExpr 0x1bb5058 <col:14> 'int (struct path *, struct dentry *, umode_t, unsigned int)' Function 0x1e8fa90 'security_path_mknod' 'int (struct path *, struct dentry *, umode_t, unsigned int)'
DeclRefExpr 0x1bb5348 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x1bb55f0 <col:9> 'int (struct inode *, struct dentry *, umode_t)' Function 0x1e726e0 'security_inode_create' 'int (struct inode *, struct dentry *, umode_t)'
FunctionDecl 0x1bb5d40 <line:2609:1, line:2761:1> atomic_open 'int (struct nameidata *, struct dentry *, struct path *, struct file *, const struct open_flags *, bool, bool, int *)' static
DeclRefExpr 0x1bb6028 <col:23> 'int (int)' Function 0x1bb4af0 'open_to_namei_flags' 'int (int)'
DeclRefExpr 0x1bb6520 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bb6618 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1bb6ce8 <col:12> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x1bb73e8 <col:46> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1bb7af0 <col:11> 'int (struct path *, struct dentry *, umode_t)' Function 0x1bb4f30 'may_o_create' 'int (struct path *, struct dentry *, umode_t)'
DeclRefExpr 0x1bb8a68 <col:7> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1bb8db0 <col:4> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x1bb9088 <col:4> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x1bb9258 <col:4> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1bb9a30 <col:3> 'int ()' Function 0x1b1a750 'WARN_ON' 'int ()'
DeclRefExpr 0x1bb9b80 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
DeclRefExpr 0x1bb9d70 <col:10> 'int (struct path *, int, int)' Function 0x2070890 'may_open' 'int (struct path *, int, int)'
DeclRefExpr 0x1bb9fe0 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x1bba0c0 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x1bba258 <col:12> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x1bba408 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x1bba4b8 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x1bbaad8 <col:8> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
FunctionDecl 0x1bbb5a0 <line:2781:1, line:2847:1> lookup_open 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, bool, int *)' static
DeclRefExpr 0x1bbbb88 <col:11> 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)' Function 0x20453a0 'lookup_dcache' 'struct dentry *(struct qstr *, struct dentry *, unsigned int, bool *)'
DeclRefExpr 0x1bbc208 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x1bbc2b8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x1bbc750 <col:10> 'int (struct nameidata *, struct dentry *, struct path *, struct file *, const struct open_flags *, bool, bool, int *)' Function 0x1bb5d40 'atomic_open' 'int (struct nameidata *, struct dentry *, struct path *, struct file *, const struct open_flags *, bool, bool, int *)'
DeclRefExpr 0x1bbcb08 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bbcc28 <col:12> 'struct dentry *(struct inode *, struct dentry *, unsigned int)' Function 0x2046980 'lookup_real' 'struct dentry *(struct inode *, struct dentry *, unsigned int)'
DeclRefExpr 0x1bbcdd8 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x1bbce88 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x1bbd540 <col:13> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x1bbd8b0 <col:11> 'int (struct path *, struct dentry *, umode_t, unsigned int)' Function 0x1e8fa90 'security_path_mknod' 'int (struct path *, struct dentry *, umode_t, unsigned int)'
DeclRefExpr 0x1bbdb58 <col:11> 'int (struct inode *, struct dentry *, umode_t, bool)' Function 0x206f9c0 'vfs_create' 'int (struct inode *, struct dentry *, umode_t, bool)'
DeclRefExpr 0x1bbe1d8 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
FunctionDecl 0x1bbe7b0 <line:2852:1, line:3081:1> do_last 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)' static
DeclRefExpr 0x1bbf6f8 <col:11> 'int (struct nameidata *, int)' Function 0x204d5d0 'handle_dots' 'int (struct nameidata *, int)'
DeclRefExpr 0x1bc00e8 <col:11> 'int (struct nameidata *, struct path *, struct inode **)' Function 0x2047f40 'lookup_fast' 'int (struct nameidata *, struct path *, struct inode **)'
DeclRefExpr 0x1bc0258 <col:7> 'int ()' Function 0x19b3d50 'likely' 'int ()'
DeclRefExpr 0x1bc04c0 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bc06d8 <col:11> 'int (struct nameidata *)' Function 0x202cc20 'complete_walk' 'int (struct nameidata *)'
DeclRefExpr 0x1bc0880 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x1bc0f30 <col:11> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x1bc12b8 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x1bc1428 <col:10> 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, bool, int *)' Function 0x1bbb5a0 'lookup_open' 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, bool, int *)'
DeclRefExpr 0x1bc16c0 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x1bc1a00 <col:8> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x1bc1a28 <col:16> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x1bc1c88 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x1bc2170 <col:3> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x1bc2340 <col:6> 'bool (const struct dentry *)' Function 0x1a32240 'd_is_positive' 'bool (const struct dentry *)'
DeclRefExpr 0x1bc2450 <col:3> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x1bc2658 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x1bc2b68 <col:10> 'int (struct path *, unsigned int)' Function 0x203af90 'follow_managed' 'int (struct path *, unsigned int)'
DeclRefExpr 0x1bc2ef0 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bc3218 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x1bc3328 <col:3> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x1bc34a8 <col:6> 'int (struct dentry *, int)' Function 0x204e550 'should_follow_link' 'int (struct dentry *, int)'
DeclRefExpr 0x1bc36f0 <col:8> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x1bc3718 <col:17> 'int (struct nameidata *, struct dentry *)' Function 0x202a280 'unlazy_walk' 'int (struct nameidata *, struct dentry *)'
DeclRefExpr 0x1bc39f0 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x1bc3ed0 <col:3> 'void (const struct path *, struct nameidata *)' Function 0x20301a0 'path_to_nameidata' 'void (const struct path *, struct nameidata *)'
DeclRefExpr 0x20a1ad0 <col:21> 'struct vfsmount *(struct vfsmount *)' Function 0x2000960 'mntget' 'struct vfsmount *(struct vfsmount *)'
DeclRefExpr 0x20a1ea0 <col:10> 'int (struct nameidata *)' Function 0x202cc20 'complete_walk' 'int (struct nameidata *)'
DeclRefExpr 0x20a1fd8 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a2160 <col:2> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x20a2460 <col:7> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20a25a0 <col:42> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x20a2960 <col:41> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20a2b30 <col:7> 'int ()' Function 0x1c81b90 'S_ISREG' 'int ()'
DeclRefExpr 0x20a2dd0 <col:11> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20a30c0 <col:10> 'int (struct path *, int, int)' Function 0x2070890 'may_open' 'int (struct path *, int, int)'
DeclRefExpr 0x20a34c8 <col:10> 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)' Function 0x1c7c4b0 'finish_open' 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)'
DeclRefExpr 0x20a39a8 <col:10> 'int (struct file *)' Function 0x2018340 'open_check_o_direct' 'int (struct file *)'
DeclRefExpr 0x20a3be8 <col:10> 'int (struct file *, int)' Function 0x1e92ac0 'ima_file_check' 'int (struct file *, int)'
DeclRefExpr 0x20a3ea0 <col:11> 'int (struct file *)' Function 0x2071940 'handle_truncate' 'int (struct file *)'
DeclRefExpr 0x20a4098 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20a4210 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a42e0 <col:2> 'void (struct nameidata *)' Function 0x204dc00 'terminate_walk' 'void (struct nameidata *)'
DeclRefExpr 0x20a43f0 <col:2> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x20a4520 <col:2> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x20a4780 <col:2> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x20a48c8 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20a4e38 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
FunctionDecl 0x20a57c0 <line:3083:1, line:3142:1> do_tmpfile 'int (int, struct filename *, struct nameidata *, int, const struct open_flags *, struct file *, int *)' static
DeclRefExpr 0x20a5e58 <col:14> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x2059f90 'path_lookupat' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x20a60a0 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a6208 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20a6358 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a64b8 <col:10> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x20a6b08 <col:10> 'struct dentry *(struct dentry *, const struct qstr *)' Function 0x1b4b280 'd_alloc' 'struct dentry *(struct dentry *, const struct qstr *)'
DeclRefExpr 0x20a6c30 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a7048 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20a75e0 <col:2> 'void (struct filename *, const struct dentry *, unsigned int)' Function 0x1e47390 'audit_inode' 'void (struct filename *, const struct dentry *, unsigned int)'
DeclRefExpr 0x20a77d0 <col:10> 'int (struct path *, int, int)' Function 0x2070890 'may_open' 'int (struct path *, int, int)'
DeclRefExpr 0x20a7c48 <col:10> 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)' Function 0x1c7c4b0 'finish_open' 'int (struct file *, struct dentry *, int (*)(struct inode *, struct file *), int *)'
DeclRefExpr 0x20a7f70 <col:10> 'int (struct file *)' Function 0x2018340 'open_check_o_direct' 'int (struct file *)'
DeclRefExpr 0x20a8088 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x20a82e8 <col:25> 'struct inode *(struct file *)' Function 0x1c85010 'file_inode' 'struct inode *(struct file *)'
DeclRefExpr 0x20a83b0 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x20a85f8 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x20a8790 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20a88d8 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x20a8f00 <line:3144:1, line:3213:1> path_openat 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' static
DeclRefExpr 0x20a9368 <col:9> 'struct file *(void)' Function 0x2016bb0 'get_empty_filp' 'struct file *(void)'
DeclRefExpr 0x20a9450 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20a96c8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20a9848 <col:11> 'int (int, struct filename *, struct nameidata *, int, const struct open_flags *, struct file *, int *)' Function 0x20a57c0 'do_tmpfile' 'int (int, struct filename *, struct nameidata *, int, const struct open_flags *, struct file *, int *)'
DeclRefExpr 0x20a9c40 <col:10> 'int (int, const char *, unsigned int, struct nameidata *, struct file **)' Function 0x2055810 'path_init' 'int (int, const char *, unsigned int, struct nameidata *, struct file **)'
DeclRefExpr 0x20a9ee8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20aa028 <col:10> 'int (const char *, struct nameidata *)' Function 0x2052900 'link_path_walk' 'int (const char *, struct nameidata *)'
DeclRefExpr 0x20aa190 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20aa2b0 <col:10> 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)' Function 0x1bbe7b0 'do_last' 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)'
DeclRefExpr 0x20aa560 <col:9> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20aa8d8 <col:4> 'void (struct path *, struct nameidata *)' Function 0x202fb80 'path_put_conditional' 'void (struct path *, struct nameidata *)'
DeclRefExpr 0x20aa9d8 <col:4> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20aac20 <col:11> 'int (struct path *, struct nameidata *)' Function 0x2032130 'may_follow_link' 'int (struct path *, struct nameidata *)'
DeclRefExpr 0x20aad48 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ab0f0 <col:11> 'int (struct path *, struct nameidata *, void **)' Function 0x2034510 'follow_link' 'int (struct path *, struct nameidata *, void **)'
DeclRefExpr 0x20ab268 <col:7> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ab380 <col:11> 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)' Function 0x1bbe7b0 'do_last' 'int (struct nameidata *, struct path *, struct file *, const struct open_flags *, int *, struct filename *)'
DeclRefExpr 0x20ab5d0 <col:3> 'void (struct nameidata *, struct path *, void *)' Function 0x2031800 'put_link' 'void (struct nameidata *, struct path *, void *)'
DeclRefExpr 0x20ab9b8 <col:3> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20abb60 <col:3> 'void (struct file *)' Function 0x20018c0 'fput' 'void (struct file *)'
DeclRefExpr 0x20abd10 <col:3> 'int ()' Function 0x1b7a180 'BUG_ON' 'int ()'
DeclRefExpr 0x20abde0 <col:3> 'void (struct file *)' Function 0x20054b0 'put_filp' 'void (struct file *)'
DeclRefExpr 0x20abee8 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ac290 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
FunctionDecl 0x20ac6b0 prev 0x2017be0 <line:3215:1, line:3228:1> do_filp_open 'struct file *(int, struct filename *, const struct open_flags *)'
DeclRefExpr 0x20ac9c8 <col:9> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20acc70 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20accc0 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ace38 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20ad068 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ad0b8 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ad230 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
FunctionDecl 0x20ad7a0 prev 0x2017f90 <line:3230:1, line:3250:1> do_file_open_root 'struct file *(struct dentry *, struct vfsmount *, const char *, const struct open_flags *)'
DeclRefExpr 0x20adeb0 <col:6> 'bool (const struct dentry *)' Function 0x1a31a00 'd_is_symlink' 'bool (const struct dentry *)'
DeclRefExpr 0x20ae088 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ae1c8 <col:9> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20ae418 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ae468 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ae5e0 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
DeclRefExpr 0x20ae818 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20ae868 <col:23> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20ae9e0 <col:10> 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)' Function 0x20a8f00 'path_openat' 'struct file *(int, struct filename *, struct nameidata *, const struct open_flags *, int)'
FunctionDecl 0x20aef50 prev 0x1cb0330 <line:3252:1, line:3320:1> kern_path_create 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20af098 <col:26> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20af528 <col:10> 'int (int, const char *, unsigned int, struct nameidata *)' Function 0x205d6e0 'do_path_lookup' 'int (int, const char *, unsigned int, struct nameidata *)'
DeclRefExpr 0x20af780 <col:10> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20afc00 <col:9> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20afd38 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20aff08 <col:11> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x20b0048 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20b0210 <col:6> 'bool (const struct dentry *)' Function 0x1a32240 'd_is_positive' 'bool (const struct dentry *)'
DeclRefExpr 0x20b0360 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20b0768 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20b0a70 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20b0b68 <col:11> 'int ()' Function 0x1e912a0 'ERR_PTR' 'int ()'
DeclRefExpr 0x20b0c58 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20b0e80 <col:3> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20b0fc0 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x20b1390 prev 0x1cb0890 <line:3323:1, line:3329:1> done_path_create 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20b1440 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20b14f0 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20b1680 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20b1778 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x20b1af0 prev 0x1cb0610 <line:3332:1, line:3342:1> user_path_create 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20b1c38 <col:25> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x20b1da0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20b1f10 <col:10> 'int ()' Function 0x20b1e70 'ERR_CAST' 'int ()'
DeclRefExpr 0x20b2050 <col:8> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20aef50 'kern_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20b22a0 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
FunctionDecl 0x20b1e70 <<invalid sloc>> ERR_CAST 'int ()'
FunctionDecl 0x20b2650 prev 0x1c52eb0 <line:3345:1, line:3370:1> vfs_mknod 'int (struct inode *, struct dentry *, umode_t, dev_t)'
DeclRefExpr 0x20b2778 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20b2a20 <col:7> 'int ()' Function 0x20b2980 'S_ISCHR' 'int ()'
DeclRefExpr 0x20b2bb0 <col:24> 'int ()' Function 0x20b2b10 'S_ISBLK' 'int ()'
DeclRefExpr 0x20b2cc0 <col:43> 'bool (int)' Function 0x1a17010 'capable' 'bool (int)'
DeclRefExpr 0x20b2fd0 <col:10> 'int (int, dev_t)' Function 0x2006040 'devcgroup_inode_mknod' 'int (int, dev_t)'
DeclRefExpr 0x20b3260 <col:10> 'int (struct inode *, struct dentry *, int, dev_t)' Function 0x1e73850 'security_inode_mknod' 'int (struct inode *, struct dentry *, int, dev_t)'
DeclRefExpr 0x20b3820 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
FunctionDecl 0x20b2980 <<invalid sloc>> S_ISCHR 'int ()'
FunctionDecl 0x20b2b10 <<invalid sloc>> S_ISBLK 'int ()'
FunctionDecl 0x20b3ab0 <line:3372:1, line:3387:1> may_mknod 'int (umode_t)' static
FunctionDecl 0x20b3dd0 prev 0x1ff41c0 <../include/linux/syscalls.h:187:13, line:188:48> sys_mknodat 'long (int, const char *, umode_t, unsigned int)'
FunctionDecl 0x20b40f0 <line:189:2, col:62> SYSC_mknodat 'long (int, const char *, umode_t, unsigned int)' static inline
FunctionDecl 0x20b4780 <../include/linux/syscalls.h:190:13, col:58> SyS_mknodat 'long (int, int, int, int)'
FunctionDecl 0x20b6010 prev 0x20b40f0 <../include/linux/syscalls.h:198:2, namei.c:3429:1> SYSC_mknodat 'long (int, const char *, umode_t, unsigned int)' static inline
DeclRefExpr 0x20b6360 <col:10> 'int (umode_t)' Function 0x20b3ab0 'may_mknod' 'int (umode_t)'
DeclRefExpr 0x20b6548 <col:11> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20b6758 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20b6808 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20b6bd8 <col:12> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x20b6cf0 <col:10> 'int (struct path *, struct dentry *, umode_t, unsigned int)' Function 0x1e8fa90 'security_path_mknod' 'int (struct path *, struct dentry *, umode_t, unsigned int)'
DeclRefExpr 0x20b6f98 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20b7110 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
FunctionDecl 0x20b7650 prev 0x1fda1c0 <../include/linux/syscalls.h:187:13, line:188:48> sys_mknod 'long (const char *, umode_t, unsigned int)'
FunctionDecl 0x20b78f0 <line:189:2, col:62> SYSC_mknod 'long (const char *, umode_t, unsigned int)' static inline
FunctionDecl 0x20b7dd0 <../include/linux/syscalls.h:190:13, col:58> SyS_mknod 'long (int, int, int)'
FunctionDecl 0x20b9100 prev 0x20b78f0 <../include/linux/syscalls.h:198:2, namei.c:3434:1> SYSC_mknod 'long (const char *, umode_t, unsigned int)' static inline
DeclRefExpr 0x20b91b8 <col:9> 'long (int, const char *, umode_t, unsigned int)' Function 0x20b3dd0 'sys_mknodat' 'long (int, const char *, umode_t, unsigned int)'
FunctionDecl 0x20b9590 prev 0x1c52b30 <line:3436:1, line:3459:1> vfs_mkdir 'int (struct inode *, struct dentry *, umode_t)'
DeclRefExpr 0x20b96b8 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20b9be0 <col:10> 'int (struct inode *, struct dentry *, int)' Function 0x1e73220 'security_inode_mkdir' 'int (struct inode *, struct dentry *, int)'
DeclRefExpr 0x20ba338 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e543e0 'fsnotify_mkdir' 'void (struct inode *, struct dentry *)'
FunctionDecl 0x20ba6f0 prev 0x1ff44a0 <../include/linux/syscalls.h:187:13, line:188:48> sys_mkdirat 'long (int, const char *, umode_t)'
FunctionDecl 0x20ba990 <line:189:2, col:62> SYSC_mkdirat 'long (int, const char *, umode_t)' static inline
FunctionDecl 0x20bae70 <../include/linux/syscalls.h:190:13, col:58> SyS_mkdirat 'long (int, int, int)'
FunctionDecl 0x20bc1a0 prev 0x20ba990 <../include/linux/syscalls.h:198:2, namei.c:3484:1> SYSC_mkdirat 'long (int, const char *, umode_t)' static inline
DeclRefExpr 0x20bc4e0 <col:11> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20bc6f8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20bc7a8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20bcb78 <col:12> 'int (void)' Function 0x1c76270 'current_umask' 'int (void)'
DeclRefExpr 0x20bcc90 <col:10> 'int (struct path *, struct dentry *, umode_t)' Function 0x1e8f460 'security_path_mkdir' 'int (struct path *, struct dentry *, umode_t)'
DeclRefExpr 0x20bce88 <col:11> 'int (struct inode *, struct dentry *, umode_t)' Function 0x20b9590 'vfs_mkdir' 'int (struct inode *, struct dentry *, umode_t)'
DeclRefExpr 0x20bd098 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20bd198 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
FunctionDecl 0x20bd5e0 prev 0x1fe16b0 <../include/linux/syscalls.h:187:13, line:188:48> sys_mkdir 'long (const char *, umode_t)'
FunctionDecl 0x20bd800 <line:189:2, col:62> SYSC_mkdir 'long (const char *, umode_t)' static inline
FunctionDecl 0x20bdb80 <../include/linux/syscalls.h:190:13, col:58> SyS_mkdir 'long (int, int)'
FunctionDecl 0x20be950 prev 0x20bd800 <../include/linux/syscalls.h:198:2, namei.c:3489:1> SYSC_mkdir 'long (const char *, umode_t)' static inline
DeclRefExpr 0x20bea00 <col:9> 'long (int, const char *, umode_t)' Function 0x20ba6f0 'sys_mkdirat' 'long (int, const char *, umode_t)'
FunctionDecl 0x20bec90 prev 0x1c55140 <line:3506:1, line:3513:1> dentry_unhash 'void (struct dentry *)'
DeclRefExpr 0x20bed38 <col:2> 'void (struct dentry *)' Function 0x1b4f5f0 'shrink_dcache_parent' 'void (struct dentry *)'
DeclRefExpr 0x20bede8 <col:2> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x20bf120 <col:3> 'void (struct dentry *)' Function 0x1b4aaf0 '__d_drop' 'void (struct dentry *)'
DeclRefExpr 0x20bf200 <col:2> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
FunctionDecl 0x20bf520 prev 0x1c54880 <line:3515:1, line:3550:1> vfs_rmdir 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20bf638 <col:14> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x20bfa30 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x20bfae0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20bfcb8 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20bfe28 <col:10> 'int (struct inode *, struct dentry *)' Function 0x1e73470 'security_inode_rmdir' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20bffd0 <col:2> 'void (struct dentry *)' Function 0x1b4f5f0 'shrink_dcache_parent' 'void (struct dentry *)'
DeclRefExpr 0x20c0408 <col:2> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x20c04b8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c0620 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20c0730 <col:3> 'void (struct dentry *)' Function 0x1b4ad90 'd_delete' 'void (struct dentry *)'
FunctionDecl 0x20c0a30 <line:3552:1, line:3607:1> do_rmdir 'long (int, const char *)' static
DeclRefExpr 0x20c0e30 <col:9> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x20c10a8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c1158 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c17b8 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20c1978 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20c3188 <col:11> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x20c3290 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c3368 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c36b0 <col:10> 'int (struct path *, struct dentry *)' Function 0x1e8f6b0 'security_path_rmdir' 'int (struct path *, struct dentry *)'
DeclRefExpr 0x20c3918 <col:10> 'int (struct inode *, struct dentry *)' Function 0x20bf520 'vfs_rmdir' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20c3ae0 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20c3bb0 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c3d78 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20c3e88 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20c3fa8 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20c4058 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
FunctionDecl 0x20c44a0 prev 0x1fe1a70 <../include/linux/syscalls.h:187:13, line:188:48> sys_rmdir 'long (const char *)'
FunctionDecl 0x20c4640 <line:189:2, col:62> SYSC_rmdir 'long (const char *)' static inline
FunctionDecl 0x20c4860 <../include/linux/syscalls.h:190:13, col:58> SyS_rmdir 'long (int)'
FunctionDecl 0x20c50c0 prev 0x20c4640 <../include/linux/syscalls.h:198:2, namei.c:3612:1> SYSC_rmdir 'long (const char *)' static inline
DeclRefExpr 0x20c5168 <col:9> 'long (int, const char *)' Function 0x20c0a30 'do_rmdir' 'long (int, const char *)'
FunctionDecl 0x20c54b0 prev 0x1c54b90 <line:3632:1, line:3667:1> vfs_unlink 'int (struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20c56f8 <col:14> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x20c5a98 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20c5b98 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20c5d18 <col:11> 'int (struct inode *, struct dentry *)' Function 0x1e72c00 'security_inode_unlink' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20c5ec0 <col:12> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x20c6338 <col:5> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x20c64d8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c67a8 <col:3> 'void (struct inode *)' Function 0x1e51990 'fsnotify_link_count' 'void (struct inode *)'
DeclRefExpr 0x20c6858 <col:3> 'void (struct dentry *)' Function 0x1b4ad90 'd_delete' 'void (struct dentry *)'
FunctionDecl 0x20c6b30 <line:3675:1, line:3744:1> do_unlinkat 'long (int, const char *)' static
DeclRefExpr 0x20c7170 <col:9> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x20c7388 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c7438 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c7830 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x20c79f0 <col:44> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20c7c20 <col:11> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x20c7d28 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20c7e00 <col:7> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20c8228 <col:7> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x20c8338 <col:3> 'void (struct inode *)' Function 0x1c78150 'ihold' 'void (struct inode *)'
DeclRefExpr 0x20c8410 <col:11> 'int (struct path *, struct dentry *)' Function 0x1e8f100 'security_path_unlink' 'int (struct path *, struct dentry *)'
DeclRefExpr 0x20c8658 <col:11> 'int (struct inode *, struct dentry *, struct inode **)' Function 0x20c54b0 'vfs_unlink' 'int (struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20c88c8 <col:3> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x20c8a20 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20c8c08 <col:3> 'void (struct inode *)' Function 0x1c782a0 'iput' 'void (struct inode *)'
DeclRefExpr 0x20c8e30 <col:11> 'int (struct inode **)' Function 0x1c79bf0 'break_deleg_wait' 'int (struct inode **)'
DeclRefExpr 0x20c9068 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x20c9178 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x20c9298 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x20c9348 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20c96c0 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x20c9818 <col:11> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20c98e0 <col:37> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
FunctionDecl 0x20c9ec0 prev 0x1ff4730 <../include/linux/syscalls.h:187:13, line:188:48> sys_unlinkat 'long (int, const char *, int)'
FunctionDecl 0x20ca160 <line:189:2, col:62> SYSC_unlinkat 'long (int, const char *, int)' static inline
FunctionDecl 0x20ca640 <../include/linux/syscalls.h:190:13, col:58> SyS_unlinkat 'long (int, int, int)'
FunctionDecl 0x20cebf0 prev 0x20ca160 <../include/linux/syscalls.h:198:2, namei.c:3755:1> SYSC_unlinkat 'long (int, const char *, int)' static inline
DeclRefExpr 0x20ceee8 <col:10> 'long (int, const char *)' Function 0x20c0a30 'do_rmdir' 'long (int, const char *)'
DeclRefExpr 0x20cf030 <col:9> 'long (int, const char *)' Function 0x20c6b30 'do_unlinkat' 'long (int, const char *)'
FunctionDecl 0x20cf250 prev 0x1fda690 <../include/linux/syscalls.h:187:13, line:188:48> sys_unlink 'long (const char *)'
FunctionDecl 0x20cf3f0 <line:189:2, col:62> SYSC_unlink 'long (const char *)' static inline
FunctionDecl 0x20cf610 <../include/linux/syscalls.h:190:13, col:58> SyS_unlink 'long (int)'
FunctionDecl 0x20cfe70 prev 0x20cf3f0 <../include/linux/syscalls.h:198:2, namei.c:3760:1> SYSC_unlink 'long (const char *)' static inline
DeclRefExpr 0x20cff18 <col:9> 'long (int, const char *)' Function 0x20c6b30 'do_unlinkat' 'long (int, const char *)'
FunctionDecl 0x20d0200 prev 0x1c531c0 <line:3762:1, line:3780:1> vfs_symlink 'int (struct inode *, struct dentry *, const char *)'
DeclRefExpr 0x20d0328 <col:14> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20d06b0 <col:10> 'int (struct inode *, struct dentry *, const char *)' Function 0x1e72ec0 'security_inode_symlink' 'int (struct inode *, struct dentry *, const char *)'
DeclRefExpr 0x20d0b90 <col:3> 'void (struct inode *, struct dentry *)' Function 0x1e53a80 'fsnotify_create' 'void (struct inode *, struct dentry *)'
FunctionDecl 0x20d0f70 prev 0x1ff49c0 <../include/linux/syscalls.h:187:13, line:188:48> sys_symlinkat 'long (const char *, int, const char *)'
FunctionDecl 0x20d1210 <line:189:2, col:62> SYSC_symlinkat 'long (const char *, int, const char *)' static inline
FunctionDecl 0x20d16f0 <../include/linux/syscalls.h:190:13, col:58> SyS_symlinkat 'long (int, int, int)'
FunctionDecl 0x20d2a20 prev 0x20d1210 <../include/linux/syscalls.h:198:2, namei.c:3811:1> SYSC_symlinkat 'long (const char *, int, const char *)' static inline
DeclRefExpr 0x20d2e10 <col:9> 'struct filename *(const char *)' Function 0x2023e20 'getname' 'struct filename *(const char *)'
DeclRefExpr 0x20d2ee8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20d2f98 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20d30d8 <col:11> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20d3310 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20d33e8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20d3548 <col:10> 'int (struct path *, struct dentry *, const char *)' Function 0x1e8ffb0 'security_path_symlink' 'int (struct path *, struct dentry *, const char *)'
DeclRefExpr 0x20d37e0 <col:11> 'int (struct inode *, struct dentry *, const char *)' Function 0x20d0200 'vfs_symlink' 'int (struct inode *, struct dentry *, const char *)'
DeclRefExpr 0x20d3a38 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20d3b38 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20d3d50 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
FunctionDecl 0x20d4070 prev 0x1fda550 <../include/linux/syscalls.h:187:13, line:188:48> sys_symlink 'long (const char *, const char *)'
FunctionDecl 0x20d4290 <line:189:2, col:62> SYSC_symlink 'long (const char *, const char *)' static inline
FunctionDecl 0x20d4610 <../include/linux/syscalls.h:190:13, col:58> SyS_symlink 'long (int, int)'
FunctionDecl 0x20d53e0 prev 0x20d4290 <../include/linux/syscalls.h:198:2, namei.c:3816:1> SYSC_symlink 'long (const char *, const char *)' static inline
DeclRefExpr 0x20d5490 <col:9> 'long (const char *, int, const char *)' Function 0x20d0f70 'sys_symlinkat' 'long (const char *, int, const char *)'
FunctionDecl 0x20d58b0 prev 0x1c54600 <line:3837:1, line:3888:1> vfs_link 'int (struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20d5d88 <col:10> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x20d8ea8 <col:6> 'int ()' Function 0x1c81d60 'S_ISDIR' 'int ()'
DeclRefExpr 0x20d9070 <col:10> 'int (struct dentry *, struct inode *, struct dentry *)' Function 0x1e729b0 'security_inode_link' 'int (struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x20d92d0 <col:2> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20d99a0 <col:11> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x20d9ff0 <col:3> 'void (spinlock_t *)' Function 0x19a8540 'spin_lock' 'void (spinlock_t *)'
DeclRefExpr 0x20da258 <col:3> 'void (spinlock_t *)' Function 0x19ab280 'spin_unlock' 'void (spinlock_t *)'
DeclRefExpr 0x20da3b8 <col:2> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x20da518 <col:3> 'void (struct inode *, struct inode *, struct dentry *)' Function 0x1e53f60 'fsnotify_link' 'void (struct inode *, struct inode *, struct dentry *)'
FunctionDecl 0x20daaa0 prev 0x1ff4d50 <../include/linux/syscalls.h:187:13, line:188:48> sys_linkat 'long (int, const char *, int, const char *, int)'
FunctionDecl 0x20dae40 <line:189:2, col:62> SYSC_linkat 'long (int, const char *, int, const char *, int)' static inline
FunctionDecl 0x20db640 <../include/linux/syscalls.h:190:13, col:58> SyS_linkat 'long (int, int, int, int, int)'
FunctionDecl 0x20dd430 prev 0x20dae40 <../include/linux/syscalls.h:198:2, namei.c:3959:1> SYSC_linkat 'long (int, const char *, int, const char *, int)' static inline
DeclRefExpr 0x20ddba8 <col:8> 'bool (int)' Function 0x1a17010 'capable' 'bool (int)'
DeclRefExpr 0x20ddf28 <col:10> 'int (int, const char *, unsigned int, struct path *)' Function 0x20636d0 'user_path_at' 'int (int, const char *, unsigned int, struct path *)'
DeclRefExpr 0x20de2b8 <col:15> 'struct dentry *(int, const char *, struct path *, unsigned int)' Function 0x20b1af0 'user_path_create' 'struct dentry *(int, const char *, struct path *, unsigned int)'
DeclRefExpr 0x20de518 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x20de5f0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x20de968 <col:10> 'int (struct path *)' Function 0x2033780 'may_linkat' 'int (struct path *)'
DeclRefExpr 0x20dea48 <col:6> 'int ()' Function 0x19b4e50 'unlikely' 'int ()'
DeclRefExpr 0x20deb68 <col:10> 'int (struct dentry *, struct path *, struct dentry *)' Function 0x1e90320 'security_path_link' 'int (struct dentry *, struct path *, struct dentry *)'
DeclRefExpr 0x20dee18 <col:10> 'int (struct dentry *, struct inode *, struct dentry *, struct inode **)' Function 0x20d58b0 'vfs_link' 'int (struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20df0d8 <col:2> 'void (struct path *, struct dentry *)' Function 0x20b1390 'done_path_create' 'void (struct path *, struct dentry *)'
DeclRefExpr 0x20df260 <col:11> 'int (struct inode **)' Function 0x1c79bf0 'break_deleg_wait' 'int (struct inode **)'
DeclRefExpr 0x20df440 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x20df658 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
FunctionDecl 0x20df9e0 prev 0x1fda390 <../include/linux/syscalls.h:187:13, line:188:48> sys_link 'long (const char *, const char *)'
FunctionDecl 0x20dfbf0 <line:189:2, col:62> SYSC_link 'long (const char *, const char *)' static inline
FunctionDecl 0x20dff70 <../include/linux/syscalls.h:190:13, col:58> SyS_link 'long (int, int)'
FunctionDecl 0x2072020 prev 0x20dfbf0 <../include/linux/syscalls.h:198:2, namei.c:3964:1> SYSC_link 'long (const char *, const char *)' static inline
DeclRefExpr 0x20720d0 <col:9> 'long (int, const char *, int, const char *, int)' Function 0x20daaa0 'sys_linkat' 'long (int, const char *, int, const char *, int)'
FunctionDecl 0x2072540 <line:3994:1, line:4046:1> vfs_rename_dir 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' static
DeclRefExpr 0x20729f0 <col:11> 'int (struct inode *, int)' Function 0x20292a0 'inode_permission' 'int (struct inode *, int)'
DeclRefExpr 0x2072c88 <col:10> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' Function 0x1e73bc0 'security_inode_rename' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x2072f30 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2073020 <col:3> 'void (struct mutex *)' Function 0x1a401c0 'mutex_lock' 'void (struct mutex *)'
DeclRefExpr 0x20731e0 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20732a8 <col:34> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x2073860 <col:3> 'void (struct dentry *)' Function 0x1b4f5f0 'shrink_dcache_parent' 'void (struct dentry *)'
DeclRefExpr 0x2073d50 <col:3> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x2073e98 <col:3> 'void (struct mutex *)' Function 0x1a40540 'mutex_unlock' 'void (struct mutex *)'
DeclRefExpr 0x2073fe8 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x2074298 <col:4> 'void (struct dentry *, struct dentry *)' Function 0x1b51530 'd_move' 'void (struct dentry *, struct dentry *)'
FunctionDecl 0x2074830 <line:4048:1, line:4087:1> vfs_rename_other 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)' static
DeclRefExpr 0x2074be8 <col:10> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' Function 0x1e73bc0 'security_inode_rename' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x2074e68 <col:2> 'struct dentry *(struct dentry *)' Function 0x1b55180 'dget' 'struct dentry *(struct dentry *)'
DeclRefExpr 0x2074f18 <col:2> 'void (struct inode *, struct inode *)' Function 0x1c2ffa0 'lock_two_nondirectories' 'void (struct inode *, struct inode *)'
DeclRefExpr 0x20750f8 <col:6> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x20751c0 <col:32> 'bool (const struct dentry *)' Function 0x1b56ae0 'd_mountpoint' 'bool (const struct dentry *)'
DeclRefExpr 0x2075388 <col:10> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x2075598 <col:11> 'int (struct inode *, struct inode **)' Function 0x1c799b0 'try_break_deleg' 'int (struct inode *, struct inode **)'
DeclRefExpr 0x2075ac8 <col:3> 'void (struct dentry *)' Function 0x1b56020 'dont_mount' 'void (struct dentry *)'
DeclRefExpr 0x2075d48 <col:3> 'void (struct dentry *, struct dentry *)' Function 0x1b51530 'd_move' 'void (struct dentry *, struct dentry *)'
DeclRefExpr 0x2075e70 <col:2> 'void (struct inode *, struct inode *)' Function 0x1c30190 'unlock_two_nondirectories' 'void (struct inode *, struct inode *)'
DeclRefExpr 0x2075f88 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
FunctionDecl 0x2076440 prev 0x1c54fd0 <line:4110:1, line:4147:1> vfs_rename 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20765f8 <col:15> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x20766c0 <col:45> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x2076a50 <col:10> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x2076d70 <col:11> 'int (struct inode *, struct dentry *)' Function 0x206d520 'may_create' 'int (struct inode *, struct dentry *)'
DeclRefExpr 0x2076eb8 <col:11> 'int (struct inode *, struct dentry *, bool)' Function 0x206b710 'may_delete' 'int (struct inode *, struct dentry *, bool)'
DeclRefExpr 0x20772e0 <col:13> 'const char *(const unsigned char *)' Function 0x1e599c0 'fsnotify_oldname_init' 'const char *(const unsigned char *)'
DeclRefExpr 0x20774e0 <col:11> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)' Function 0x2072540 'vfs_rename_dir' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *)'
DeclRefExpr 0x20776b8 <col:11> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)' Function 0x2074830 'vfs_rename_other' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x20779a0 <col:3> 'void (struct inode *, struct inode *, const unsigned char *, int, struct inode *, struct dentry *)' Function 0x1e51ea0 'fsnotify_move' 'void (struct inode *, struct inode *, const unsigned char *, int, struct inode *, struct dentry *)'
DeclRefExpr 0x2077c88 <col:2> 'void (const unsigned char *)' Function 0x1e59c10 'fsnotify_oldname_free' 'void (const unsigned char *)'
FunctionDecl 0x2078080 prev 0x1ff5070 <../include/linux/syscalls.h:187:13, line:188:48> sys_renameat 'long (int, const char *, int, const char *)'
FunctionDecl 0x20783a0 <line:189:2, col:62> SYSC_renameat 'long (int, const char *, int, const char *)' static inline
FunctionDecl 0x20789e0 <../include/linux/syscalls.h:190:13, col:58> SyS_renameat 'long (int, int, int, int)'
FunctionDecl 0x207b850 prev 0x20783a0 <../include/linux/syscalls.h:198:2, namei.c:4262:1> SYSC_renameat 'long (int, const char *, int, const char *)' static inline
DeclRefExpr 0x207c1c8 <col:9> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x207c3d8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207c4b0 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207c660 <col:7> 'struct filename *(int, const char *, struct nameidata *, unsigned int)' Function 0x2063d20 'user_path_parent' 'struct filename *(int, const char *, struct nameidata *, unsigned int)'
DeclRefExpr 0x207c818 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207c8f0 <col:11> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207d198 <col:10> 'int (struct vfsmount *)' Function 0x20000e0 'mnt_want_write' 'int (struct vfsmount *)'
DeclRefExpr 0x207d618 <col:9> 'struct dentry *(struct dentry *, struct dentry *)' Function 0x206dcd0 'lock_rename' 'struct dentry *(struct dentry *, struct dentry *)'
DeclRefExpr 0x207d7c0 <col:15> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x207d8c8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207d9a0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207db60 <col:6> 'bool (const struct dentry *)' Function 0x1a31f80 'd_is_negative' 'bool (const struct dentry *)'
DeclRefExpr 0x207dcb0 <col:7> 'bool (const struct dentry *)' Function 0x1a31420 'd_is_directory' 'bool (const struct dentry *)'
DeclRefExpr 0x207dd98 <col:38> 'bool (const struct dentry *)' Function 0x1a31740 'd_is_autodir' 'bool (const struct dentry *)'
DeclRefExpr 0x207e5c0 <col:15> 'struct dentry *(struct nameidata *)' Function 0x2060420 'lookup_hash' 'struct dentry *(struct nameidata *)'
DeclRefExpr 0x207e6c8 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x207e7a0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x207ea78 <col:10> 'int (struct path *, struct dentry *, struct path *, struct dentry *)' Function 0x1e90720 'security_path_rename' 'int (struct path *, struct dentry *, struct path *, struct dentry *)'
DeclRefExpr 0x207eda0 <col:10> 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)' Function 0x2076440 'vfs_rename' 'int (struct inode *, struct dentry *, struct inode *, struct dentry *, struct inode **)'
DeclRefExpr 0x207f030 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x207f100 <col:2> 'void (struct dentry *)' Function 0x1b565d0 'dput' 'void (struct dentry *)'
DeclRefExpr 0x207f1d0 <col:2> 'void (struct dentry *, struct dentry *)' Function 0x206f1a0 'unlock_rename' 'void (struct dentry *, struct dentry *)'
DeclRefExpr 0x207f350 <col:11> 'int (struct inode **)' Function 0x1c79bf0 'break_deleg_wait' 'int (struct inode **)'
DeclRefExpr 0x207f530 <col:2> 'void (struct vfsmount *)' Function 0x20004d0 'mnt_drop_write' 'void (struct vfsmount *)'
DeclRefExpr 0x207f640 <col:6> 'bool (const long, const unsigned int)' Function 0x1cb2c90 'retry_estale' 'bool (const long, const unsigned int)'
DeclRefExpr 0x207f830 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x207f930 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
DeclRefExpr 0x207f9e0 <col:2> 'void (const struct path *)' Function 0x2029d60 'path_put' 'void (const struct path *)'
DeclRefExpr 0x207fb00 <col:24> 'void (struct filename *)' Function 0x2020870 'final_putname' 'void (struct filename *)'
FunctionDecl 0x2080140 prev 0x1fda850 <../include/linux/syscalls.h:187:13, line:188:48> sys_rename 'long (const char *, const char *)'
FunctionDecl 0x2080360 <line:189:2, col:62> SYSC_rename 'long (const char *, const char *)' static inline
FunctionDecl 0x20806e0 <../include/linux/syscalls.h:190:13, col:58> SyS_rename 'long (int, int)'
FunctionDecl 0x20814b0 prev 0x2080360 <../include/linux/syscalls.h:198:2, namei.c:4267:1> SYSC_rename 'long (const char *, const char *)' static inline
DeclRefExpr 0x2081560 <col:9> 'long (int, const char *, int, const char *)' Function 0x2078080 'sys_renameat' 'long (int, const char *, int, const char *)'
FunctionDecl 0x2081970 prev 0x1c95e40 <line:4269:1, line:4284:1> vfs_readlink 'int (struct dentry *, char *, int, const char *)'
DeclRefExpr 0x2081ad8 <col:8> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2081bb0 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2081d08 <col:8> 'unsigned long (const char *)' Function 0x18a0c90 'strlen' 'unsigned long (const char *)'
DeclRefExpr 0x2082070 <col:6> 'int ()' Function 0x2081fd0 'copy_to_user' 'int ()'
FunctionDecl 0x2081fd0 <<invalid sloc>> copy_to_user 'int ()'
FunctionDecl 0x20824e0 prev 0x1c97090 <line:4291:1, line:4306:1> generic_readlink 'int (struct dentry *, char *, int)'
DeclRefExpr 0x2082a10 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2082ac0 <col:10> 'int ()' Function 0x2035760 'PTR_ERR' 'int ()'
DeclRefExpr 0x2082be8 <col:8> 'int (struct dentry *, char *, int, const char *)' Function 0x2081970 'vfs_readlink' 'int (struct dentry *, char *, int, const char *)'
DeclRefExpr 0x2082c88 <col:45> 'char *(struct nameidata *)' Function 0x1cb2240 'nd_get_link' 'char *(struct nameidata *)'
FunctionDecl 0x2083460 <line:4309:1, line:4321:1> page_getlink 'char *(struct dentry *, struct page **)' static
DeclRefExpr 0x20837c8 <col:9> 'struct page *(struct address_space *, unsigned long, void *)' Function 0x1ce6250 'read_mapping_page' 'struct page *(struct address_space *, unsigned long, void *)'
DeclRefExpr 0x20839b8 <col:6> 'int ()' Function 0x2035930 'IS_ERR' 'int ()'
DeclRefExpr 0x2083c20 <col:10> 'void *(struct page *)' Function 0x1cced40 'kmap' 'void *(struct page *)'
FunctionDecl 0x2084090 prev 0x1c960a0 <line:4323:1, line:4333:1> page_readlink 'int (struct dentry *, char *, int)'
DeclRefExpr 0x20842d8 <col:12> 'char *(struct dentry *, struct page **)' Function 0x2083460 'page_getlink' 'char *(struct dentry *, struct page **)'
DeclRefExpr 0x20844b8 <col:12> 'int (struct dentry *, char *, int, const char *)' Function 0x2081970 'vfs_readlink' 'int (struct dentry *, char *, int, const char *)'
DeclRefExpr 0x20846b0 <col:3> 'void (struct page *)' Function 0x1ccf130 'kunmap' 'void (struct page *)'
DeclRefExpr 0x2084820 <col:34> 'int ()' Function 0x2084780 'put_page' 'int ()'
FunctionDecl 0x2084780 <<invalid sloc>> put_page 'int ()'
FunctionDecl 0x2084b00 prev 0x1c96290 <line:4335:1, line:4340:1> page_follow_link_light 'void *(struct dentry *, struct nameidata *)'
DeclRefExpr 0x2084ce0 <col:2> 'void (struct nameidata *, char *)' Function 0x1cb1ea0 'nd_set_link' 'void (struct nameidata *, char *)'
DeclRefExpr 0x2084d30 <col:18> 'char *(struct dentry *, struct page **)' Function 0x2083460 'page_getlink' 'char *(struct dentry *, struct page **)'
FunctionDecl 0x20850f0 prev 0x1c964f0 <line:4342:1, line:4350:1> page_put_link 'void (struct dentry *, struct nameidata *, void *)'
DeclRefExpr 0x20852d8 <col:3> 'void (struct page *)' Function 0x1ccf130 'kunmap' 'void (struct page *)'
DeclRefExpr 0x2085388 <col:34> 'int ()' Function 0x2084780 'put_page' 'int ()'
FunctionDecl 0x20856d0 prev 0x1c96860 <line:4355:1, line:4387:1> __page_symlink 'int (struct inode *, const char *, int, int)'
DeclRefExpr 0x2085cb8 <col:8> 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **)' Function 0x1c28990 'pagecache_write_begin' 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page **, void **)'
DeclRefExpr 0x2086168 <col:10> 'void *(struct page *)' Function 0x1ccf2a0 'kmap_atomic' 'void *(struct page *)'
DeclRefExpr 0x2086258 <col:2> 'void *(void *, const void *, unsigned long)' Function 0x18a1e60 'memcpy' 'void *(void *, const void *, unsigned long)'
DeclRefExpr 0x2086468 <col:2> 'void (void *)' Function 0x1ccf550 '__kunmap_atomic' 'void (void *)'
DeclRefExpr 0x20865c0 <col:8> 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *)' Function 0x1c28e50 'pagecache_write_end' 'int (struct file *, struct address_space *, loff_t, unsigned int, unsigned int, struct page *, void *)'
DeclRefExpr 0x2086b88 <col:2> 'void (struct inode *)' Function 0x1c671e0 'mark_inode_dirty' 'void (struct inode *)'
FunctionDecl 0x2086f40 prev 0x1c96b60 <line:4389:1, line:4393:1> page_symlink 'int (struct inode *, const char *, int)'
DeclRefExpr 0x2086ff8 <col:9> 'int (struct inode *, const char *, int, int)' Function 0x20856d0 '__page_symlink' 'int (struct inode *, const char *, int, int)'
DeclRefExpr 0x2087098 <col:6> 'gfp_t (struct address_space *)' Function 0x1cd9be0 'mapping_gfp_mask' 'gfp_t (struct address_space *)'
DeclRefExpr 0x2087490 <col:17> 'void *(struct dentry *, struct nameidata *)' Function 0x2084b00 'page_follow_link_light' 'void *(struct dentry *, struct nameidata *)'
DeclRefExpr 0x2087428 <col:14> 'int (struct dentry *, char *, int)' Function 0x20824e0 'generic_readlink' 'int (struct dentry *, char *, int)'
DeclRefExpr 0x20874f8 <col:14> 'void (struct dentry *, struct nameidata *, void *)' Function 0x20850f0 'page_put_link' 'void (struct dentry *, struct nameidata *, void *)'
